{"version":3,"sources":["../../../../../src/lib/core/error/error-options.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OADO,EAAA,cAAE,EAAc,MAAA,eAAA,CAAA;AAGvB;;GAEG;AACH,MAFC,CAAA,IAAA,uBAAA,GAAA,IAAA,cAAA,CAAA,yBAAA,CAAA,CAAA;AAUD;;;;;GAKG;AACH,MANC,mCAAA,OAAA,EAAA,IAAA;IAOC,IAAM,gBAAgB,CANhB,WAAA,GAAc,IAAA,IAAQ,IAAA,CAAK,SAAC,CAAS;IAO3C,MAAM,CANC,CAAA,CAAE,CAAC,OAAC,CAAO,OAAC,IAAU,CAAA,OAAE,CAAO,OAAC,IAAU,WAAA,CAAY,CAAC,CAAC;AAOjE,CAAC;AACD;;;;;GAKG;AACH,MAVC,uCAAA,OAAA,EAWG,IAAiC;IACnC,IAAM,gBAAgB,CAVhB,WAAA,GAAc,IAAA,IAAQ,IAAA,CAAK,SAAC,CAAS;IAW3C,MAAM,CAVC,CAAA,CAAE,CAAC,OAAC,CAAO,OAAC,IAAU,CAAA,OAAE,CAAO,KAAC,IAAQ,WAAA,CAAY,CAAC,CAAC;AAW/D,CAAC","file":"error-options.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\n/**\n * Injection token that can be used to specify the global error options.\n */\nexport const MD_ERROR_GLOBAL_OPTIONS = new InjectionToken<ErrorOptions>('md-error-global-options');\n\nexport type ErrorStateMatcher =\n    (control: FormControl, form: FormGroupDirective | NgForm) => boolean;\n\nexport interface ErrorOptions {\n  errorStateMatcher?: ErrorStateMatcher;\n}\n/**\n * Returns whether control is invalid and is either touched or is a part of a submitted form.\n * @param {?} control\n * @param {?} form\n * @return {?}\n */\nexport function defaultErrorStateMatcher(control: FormControl, form: FormGroupDirective | NgForm) {\n  const /** @type {?} */ isSubmitted = form && form.submitted;\n  return !!(control.invalid && (control.touched || isSubmitted));\n}\n/**\n * Returns whether control is invalid and is either dirty or is a part of a submitted form.\n * @param {?} control\n * @param {?} form\n * @return {?}\n */\nexport function showOnDirtyErrorStateMatcher(control: FormControl,\n    form: FormGroupDirective | NgForm) {\n  const /** @type {?} */ isSubmitted = form && form.submitted;\n  return !!(control.invalid && (control.dirty || isSubmitted));\n}\n"]}