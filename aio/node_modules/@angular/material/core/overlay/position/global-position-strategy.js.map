{"version":3,"sources":["../../../../../../src/lib/core/overlay/position/global-position-strategy.ts"],"names":[],"mappings":"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","file":"global-position-strategy.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {PositionStrategy} from './position-strategy';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nexport class GlobalPositionStrategy implements PositionStrategy {\nprivate _cssPosition: string = 'static';\nprivate _topOffset: string = '';\nprivate _bottomOffset: string = '';\nprivate _leftOffset: string = '';\nprivate _rightOffset: string = '';\nprivate _alignItems: string = '';\nprivate _justifyContent: string = '';\nprivate _width: string = '';\nprivate _height: string = '';\nprivate _wrapper: HTMLElement | null = null;\n/**\n * Sets the top position of the overlay. Clears any previously set vertical position.\n * @param {?=} value New top offset.\n * @return {?}\n */\ntop(value = ''): this {\n    this._bottomOffset = '';\n    this._topOffset = value;\n    this._alignItems = 'flex-start';\n    return this;\n  }\n/**\n * Sets the left position of the overlay. Clears any previously set horizontal position.\n * @param {?=} value New left offset.\n * @return {?}\n */\nleft(value = ''): this {\n    this._rightOffset = '';\n    this._leftOffset = value;\n    this._justifyContent = 'flex-start';\n    return this;\n  }\n/**\n * Sets the bottom position of the overlay. Clears any previously set vertical position.\n * @param {?=} value New bottom offset.\n * @return {?}\n */\nbottom(value = ''): this {\n    this._topOffset = '';\n    this._bottomOffset = value;\n    this._alignItems = 'flex-end';\n    return this;\n  }\n/**\n * Sets the right position of the overlay. Clears any previously set horizontal position.\n * @param {?=} value New right offset.\n * @return {?}\n */\nright(value = ''): this {\n    this._leftOffset = '';\n    this._rightOffset = value;\n    this._justifyContent = 'flex-end';\n    return this;\n  }\n/**\n * Sets the overlay width and clears any previously set width.\n * @param {?=} value New width for the overlay\n * @return {?}\n */\nwidth(value = ''): this {\n    this._width = value;\n\n    // When the width is 100%, we should reset the `left` and the offset,\n    // in order to ensure that the element is flush against the viewport edge.\n    if (value === '100%') {\n      this.left('0px');\n    }\n\n    return this;\n  }\n/**\n * Sets the overlay height and clears any previously set height.\n * @param {?=} value New height for the overlay\n * @return {?}\n */\nheight(value = ''): this {\n    this._height = value;\n\n    // When the height is 100%, we should reset the `top` and the offset,\n    // in order to ensure that the element is flush against the viewport edge.\n    if (value === '100%') {\n      this.top('0px');\n    }\n\n    return this;\n  }\n/**\n * Centers the overlay horizontally with an optional offset.\n * Clears any previously set horizontal position.\n * \n * @param {?=} offset Overlay offset from the horizontal center.\n * @return {?}\n */\ncenterHorizontally(offset = ''): this {\n    this.left(offset);\n    this._justifyContent = 'center';\n    return this;\n  }\n/**\n * Centers the overlay vertically with an optional offset.\n * Clears any previously set vertical position.\n * \n * @param {?=} offset Overlay offset from the vertical center.\n * @return {?}\n */\ncenterVertically(offset = ''): this {\n    this.top(offset);\n    this._alignItems = 'center';\n    return this;\n  }\n/**\n * Apply the position to the element.\n * \\@docs-private \n * \n * @param {?} element Element to which to apply the CSS.\n * @return {?} Resolved when the styles have been applied.\n */\napply(element: HTMLElement): void {\n    if (!this._wrapper && element.parentNode) {\n      this._wrapper = document.createElement('div');\n      this._wrapper.classList.add('cdk-global-overlay-wrapper');\n      element.parentNode.insertBefore(this._wrapper, element);\n      this._wrapper.appendChild(element);\n    }\n\n    let /** @type {?} */ styles = element.style;\n    let /** @type {?} */ parentStyles = ( /** @type {?} */((element.parentNode as HTMLElement))).style;\n\n    styles.position = this._cssPosition;\n    styles.marginTop = this._topOffset;\n    styles.marginLeft = this._leftOffset;\n    styles.marginBottom = this._bottomOffset;\n    styles.marginRight = this._rightOffset;\n    styles.width = this._width;\n    styles.height = this._height;\n\n    parentStyles.justifyContent = this._justifyContent;\n    parentStyles.alignItems = this._alignItems;\n  }\n/**\n * Removes the wrapper element from the DOM.\n * @return {?}\n */\ndispose(): void {\n    if (this._wrapper && this._wrapper.parentNode) {\n      this._wrapper.parentNode.removeChild(this._wrapper);\n      this._wrapper = null;\n    }\n  }\n}\n\nfunction GlobalPositionStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nGlobalPositionStrategy.prototype._cssPosition;\n/** @type {?} */\nGlobalPositionStrategy.prototype._topOffset;\n/** @type {?} */\nGlobalPositionStrategy.prototype._bottomOffset;\n/** @type {?} */\nGlobalPositionStrategy.prototype._leftOffset;\n/** @type {?} */\nGlobalPositionStrategy.prototype._rightOffset;\n/** @type {?} */\nGlobalPositionStrategy.prototype._alignItems;\n/** @type {?} */\nGlobalPositionStrategy.prototype._justifyContent;\n/** @type {?} */\nGlobalPositionStrategy.prototype._width;\n/** @type {?} */\nGlobalPositionStrategy.prototype._height;\n/** @type {?} */\nGlobalPositionStrategy.prototype._wrapper;\n}\n\n"]}