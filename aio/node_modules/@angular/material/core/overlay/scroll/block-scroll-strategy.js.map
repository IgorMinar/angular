{"version":3,"sources":["../../../../../../src/lib/core/overlay/scroll/block-scroll-strategy.ts"],"names":[],"mappings":"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","file":"block-scroll-strategy.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ScrollStrategy} from './scroll-strategy';\nimport {ViewportRuler} from '../position/viewport-ruler';\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nexport class BlockScrollStrategy implements ScrollStrategy {\nprivate _previousHTMLStyles = { top: '', left: '' };\nprivate _previousScrollPosition: { top: number, left: number };\nprivate _isEnabled = false;\n/**\n * @param {?} _viewportRuler\n */\nconstructor(private _viewportRuler: ViewportRuler) { }\n/**\n * @return {?}\n */\nattach() { }\n/**\n * @return {?}\n */\nenable() {\n    if (this._canBeEnabled()) {\n      const /** @type {?} */ root = document.documentElement;\n\n      this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n\n      // Cache the previous inline styles in case the user had set them.\n      this._previousHTMLStyles.left = root.style.left || '';\n      this._previousHTMLStyles.top = root.style.top || '';\n\n      // Note: we're using the `html` node, instead of the `body`, because the `body` may\n      // have the user agent margin, whereas the `html` is guaranteed not to have one.\n      root.style.left = `${-this._previousScrollPosition.left}px`;\n      root.style.top = `${-this._previousScrollPosition.top}px`;\n      root.classList.add('cdk-global-scrollblock');\n      this._isEnabled = true;\n    }\n  }\n/**\n * @return {?}\n */\ndisable() {\n    if (this._isEnabled) {\n      this._isEnabled = false;\n      document.documentElement.style.left = this._previousHTMLStyles.left;\n      document.documentElement.style.top = this._previousHTMLStyles.top;\n      document.documentElement.classList.remove('cdk-global-scrollblock');\n      window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n    }\n  }\n/**\n * @return {?}\n */\nprivate _canBeEnabled(): boolean {\n    // Since the scroll strategies can't be singletons, we have to use a global CSS class\n    // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n    // scrolling multiple times.\n    if (document.documentElement.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n      return false;\n    }\n\n    const /** @type {?} */ body = document.body;\n    const /** @type {?} */ viewport = this._viewportRuler.getViewportRect();\n    return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n  }\n}\n\nfunction BlockScrollStrategy_tsickle_Closure_declarations() {\n/** @type {?} */\nBlockScrollStrategy.prototype._previousHTMLStyles;\n/** @type {?} */\nBlockScrollStrategy.prototype._previousScrollPosition;\n/** @type {?} */\nBlockScrollStrategy.prototype._isEnabled;\n/** @type {?} */\nBlockScrollStrategy.prototype._viewportRuler;\n}\n\n"]}