{"version":3,"sources":["../../../../../src/lib/core/overlay/overlay-directives.ts"],"names":[],"mappings":"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","file":"overlay-directives.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n    Directive,\n    EventEmitter,\n    TemplateRef,\n    ViewContainerRef,\n    Optional,\n    Input,\n    OnDestroy,\n    Output,\n    ElementRef,\n    Renderer2,\n    OnChanges,\n    SimpleChanges,\n    InjectionToken,\n    Inject,\n} from '@angular/core';\nimport {Overlay} from './overlay';\nimport {OverlayRef} from './overlay-ref';\nimport {TemplatePortal} from '../portal/portal';\nimport {OverlayState} from './overlay-state';\nimport {\n    ConnectionPositionPair,\n    // This import is only used to define a generic type. The current TypeScript version incorrectly\n    // considers such imports as unused (https://github.com/Microsoft/TypeScript/issues/14953)\n    // tslint:disable-next-line:no-unused-variable\n    ConnectedOverlayPositionChange\n} from './position/connected-position';\nimport {ConnectedPositionStrategy} from './position/connected-position-strategy';\nimport {Directionality, Direction} from '../bidi/index';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ScrollStrategy, RepositionScrollStrategy} from './scroll/index';\nimport {ESCAPE} from '../keyboard/keycodes';\nimport {Subscription} from 'rxjs/Subscription';\n/**\n * Default set of positions for the overlay. Follows the behavior of a dropdown.\n */\nconst defaultPositionList = [\n  new ConnectionPositionPair(\n      {originX: 'start', originY: 'bottom'},\n      {overlayX: 'start', overlayY: 'top'}),\n  new ConnectionPositionPair(\n      {originX: 'start', originY: 'top'},\n      {overlayX: 'start', overlayY: 'bottom'}),\n];\n/**\n * Injection token that determines the scroll handling while the connected overlay is open.\n */\nexport const MD_CONNECTED_OVERLAY_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('md-connected-overlay-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nexport function MD_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/**\n * \\@docs-private\n */\nexport const MD_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n  provide: MD_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MD_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nexport class OverlayOrigin {\n/**\n * @param {?} elementRef\n */\nconstructor(public elementRef: ElementRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n  exportAs: 'cdkOverlayOrigin',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\n}\n\nfunction OverlayOrigin_tsickle_Closure_declarations() {\n/** @type {?} */\nOverlayOrigin.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOverlayOrigin.ctorParameters;\n/** @type {?} */\nOverlayOrigin.prototype.elementRef;\n}\n\n/**\n * Directive to facilitate declarative creation of an Overlay using a ConnectedPositionStrategy.\n */\nexport class ConnectedOverlayDirective implements OnDestroy, OnChanges {\nprivate _overlayRef: OverlayRef;\nprivate _templatePortal: TemplatePortal;\nprivate _hasBackdrop = false;\nprivate _backdropSubscription: Subscription | null;\nprivate _positionSubscription: Subscription;\nprivate _offsetX: number = 0;\nprivate _offsetY: number = 0;\nprivate _position: ConnectedPositionStrategy;\nprivate _escapeListener: Function;\n/**\n * Origin for the connected overlay.\n */\norigin: OverlayOrigin;\n/**\n * Registered connected position pairs.\n */\npositions: ConnectionPositionPair[];\n/**\n * The offset in pixels for the overlay connection point on the x-axis\n * @return {?}\n */\nget offsetX(): number { return this._offsetX; }\n/**\n * @param {?} offsetX\n * @return {?}\n */\nset offsetX(offsetX: number) {\n    this._offsetX = offsetX;\n    if (this._position) {\n      this._position.withOffsetX(offsetX);\n    }\n  }\n/**\n * The offset in pixels for the overlay connection point on the y-axis\n * @return {?}\n */\nget offsetY() { return this._offsetY; }\n/**\n * @param {?} offsetY\n * @return {?}\n */\nset offsetY(offsetY: number) {\n    this._offsetY = offsetY;\n    if (this._position) {\n      this._position.withOffsetY(offsetY);\n    }\n  }\n/**\n * The width of the overlay panel.\n */\nwidth: number | string;\n/**\n * The height of the overlay panel.\n */\nheight: number | string;\n/**\n * The min width of the overlay panel.\n */\nminWidth: number | string;\n/**\n * The min height of the overlay panel.\n */\nminHeight: number | string;\n/**\n * The custom class to be set on the backdrop element.\n */\nbackdropClass: string;\n/**\n * Strategy to be used when handling scroll events while the overlay is open.\n */\nscrollStrategy: ScrollStrategy =\n      this._scrollStrategy();\n/**\n * Whether the overlay is open.\n */\nopen: boolean = false;\n/**\n * Whether or not the overlay should attach a backdrop.\n * @return {?}\n */\nget hasBackdrop() { return this._hasBackdrop; }\n/**\n * @param {?} value\n * @return {?}\n */\nset hasBackdrop(value: any) { this._hasBackdrop = coerceBooleanProperty(value); }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedOrigin(): OverlayOrigin { return this.origin; }\n/**\n * @param {?} _origin\n * @return {?}\n */\nset _deprecatedOrigin(_origin: OverlayOrigin) { this.origin = _origin; }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedPositions(): ConnectionPositionPair[] { return this.positions; }\n/**\n * @param {?} _positions\n * @return {?}\n */\nset _deprecatedPositions(_positions: ConnectionPositionPair[]) { this.positions = _positions; }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedOffsetX(): number { return this.offsetX; }\n/**\n * @param {?} _offsetX\n * @return {?}\n */\nset _deprecatedOffsetX(_offsetX: number) { this.offsetX = _offsetX; }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedOffsetY(): number { return this.offsetY; }\n/**\n * @param {?} _offsetY\n * @return {?}\n */\nset _deprecatedOffsetY(_offsetY: number) { this.offsetY = _offsetY; }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedWidth(): number | string { return this.width; }\n/**\n * @param {?} _width\n * @return {?}\n */\nset _deprecatedWidth(_width: number | string) { this.width = _width; }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedHeight(): number | string { return this.height; }\n/**\n * @param {?} _height\n * @return {?}\n */\nset _deprecatedHeight(_height: number | string) { this.height = _height; }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedMinWidth(): number | string { return this.minWidth; }\n/**\n * @param {?} _minWidth\n * @return {?}\n */\nset _deprecatedMinWidth(_minWidth: number | string) { this.minWidth = _minWidth; }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedMinHeight(): number | string { return this.minHeight; }\n/**\n * @param {?} _minHeight\n * @return {?}\n */\nset _deprecatedMinHeight(_minHeight: number | string) { this.minHeight = _minHeight; }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedBackdropClass(): string { return this.backdropClass; }\n/**\n * @param {?} _backdropClass\n * @return {?}\n */\nset _deprecatedBackdropClass(_backdropClass: string) { this.backdropClass = _backdropClass; }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedScrollStrategy(): ScrollStrategy { return this.scrollStrategy; }\n/**\n * @param {?} _scrollStrategy\n * @return {?}\n */\nset _deprecatedScrollStrategy(_scrollStrategy: ScrollStrategy) {\n    this.scrollStrategy = _scrollStrategy;\n  }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedOpen(): boolean { return this.open; }\n/**\n * @param {?} _open\n * @return {?}\n */\nset _deprecatedOpen(_open: boolean) { this.open = _open; }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedHasBackdrop() { return this.hasBackdrop; }\n/**\n * @param {?} _hasBackdrop\n * @return {?}\n */\nset _deprecatedHasBackdrop(_hasBackdrop: any) { this.hasBackdrop = _hasBackdrop; }\n/**\n * Event emitted when the backdrop is clicked.\n */\nbackdropClick = new EventEmitter<void>();\n/**\n * Event emitted when the position has changed.\n */\npositionChange = new EventEmitter<ConnectedOverlayPositionChange>();\n/**\n * Event emitted when the overlay has been attached.\n */\nattach = new EventEmitter<void>();\n/**\n * Event emitted when the overlay has been detached.\n */\ndetach = new EventEmitter<void>();\n/**\n * @param {?} _overlay\n * @param {?} _renderer\n * @param {?} templateRef\n * @param {?} viewContainerRef\n * @param {?} _scrollStrategy\n * @param {?} _dir\n */\nconstructor(\nprivate _overlay: Overlay,\nprivate _renderer: Renderer2,\n      templateRef: TemplateRef<any>,\n      viewContainerRef: ViewContainerRef,\nprivate _scrollStrategy,\nprivate _dir: Directionality) {\n    this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n  }\n/**\n * The associated overlay reference.\n * @return {?}\n */\nget overlayRef(): OverlayRef {\n    return this._overlayRef;\n  }\n/**\n * The element's layout direction.\n * @return {?}\n */\nget dir(): Direction {\n    return this._dir ? this._dir.value : 'ltr';\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._destroyOverlay();\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (changes['open'] || changes['_deprecatedOpen']) {\n      this.open ? this._attachOverlay() : this._detachOverlay();\n    }\n  }\n/**\n * Creates an overlay\n * @return {?}\n */\nprivate _createOverlay() {\n    if (!this.positions || !this.positions.length) {\n      this.positions = defaultPositionList;\n    }\n\n    this._overlayRef = this._overlay.create(this._buildConfig());\n  }\n/**\n * Builds the overlay config based on the directive's inputs\n * @return {?}\n */\nprivate _buildConfig(): OverlayState {\n    let /** @type {?} */ overlayConfig = new OverlayState();\n\n    if (this.width || this.width === 0) {\n      overlayConfig.width = this.width;\n    }\n\n    if (this.height || this.height === 0) {\n      overlayConfig.height = this.height;\n    }\n\n    if (this.minWidth || this.minWidth === 0) {\n      overlayConfig.minWidth = this.minWidth;\n    }\n\n    if (this.minHeight || this.minHeight === 0) {\n      overlayConfig.minHeight = this.minHeight;\n    }\n\n    overlayConfig.hasBackdrop = this.hasBackdrop;\n\n    if (this.backdropClass) {\n      overlayConfig.backdropClass = this.backdropClass;\n    }\n\n    this._position = /** @type {?} */(( this._createPositionStrategy() as ConnectedPositionStrategy));\n    overlayConfig.positionStrategy = this._position;\n    overlayConfig.scrollStrategy = this.scrollStrategy;\n\n    return overlayConfig;\n  }\n/**\n * Returns the position strategy of the overlay to be set on the overlay config\n * @return {?}\n */\nprivate _createPositionStrategy(): ConnectedPositionStrategy {\n    const /** @type {?} */ pos = this.positions[0];\n    const /** @type {?} */ originPoint = {originX: pos.originX, originY: pos.originY};\n    const /** @type {?} */ overlayPoint = {overlayX: pos.overlayX, overlayY: pos.overlayY};\n\n    const /** @type {?} */ strategy = this._overlay.position()\n      .connectedTo(this.origin.elementRef, originPoint, overlayPoint)\n      .withOffsetX(this.offsetX)\n      .withOffsetY(this.offsetY);\n\n    this._handlePositionChanges(strategy);\n\n    return strategy;\n  }\n/**\n * @param {?} strategy\n * @return {?}\n */\nprivate _handlePositionChanges(strategy: ConnectedPositionStrategy): void {\n    for (let /** @type {?} */ i = 1; i < this.positions.length; i++) {\n      strategy.withFallbackPosition(\n          {originX: this.positions[i].originX, originY: this.positions[i].originY},\n          {overlayX: this.positions[i].overlayX, overlayY: this.positions[i].overlayY}\n      );\n    }\n\n    this._positionSubscription =\n        strategy.onPositionChange.subscribe(pos => this.positionChange.emit(pos));\n  }\n/**\n * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n * @return {?}\n */\nprivate _attachOverlay() {\n    if (!this._overlayRef) {\n      this._createOverlay();\n    }\n\n    this._position.withDirection(this.dir);\n    this._overlayRef.getState().direction = this.dir;\n    this._initEscapeListener();\n\n    if (!this._overlayRef.hasAttached()) {\n      this._overlayRef.attach(this._templatePortal);\n      this.attach.emit();\n    }\n\n    if (this.hasBackdrop) {\n      this._backdropSubscription = this._overlayRef.backdropClick().subscribe(() => {\n        this.backdropClick.emit();\n      });\n    }\n  }\n/**\n * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n * @return {?}\n */\nprivate _detachOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.detach();\n      this.detach.emit();\n    }\n\n    if (this._backdropSubscription) {\n      this._backdropSubscription.unsubscribe();\n      this._backdropSubscription = null;\n    }\n\n    if (this._escapeListener) {\n      this._escapeListener();\n    }\n  }\n/**\n * Destroys the overlay created by this directive.\n * @return {?}\n */\nprivate _destroyOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n    }\n\n    if (this._backdropSubscription) {\n      this._backdropSubscription.unsubscribe();\n    }\n\n    if (this._positionSubscription) {\n      this._positionSubscription.unsubscribe();\n    }\n\n    if (this._escapeListener) {\n      this._escapeListener();\n    }\n  }\n/**\n * Sets the event listener that closes the overlay when pressing Escape.\n * @return {?}\n */\nprivate _initEscapeListener() {\n    this._escapeListener = this._renderer.listen('document', 'keydown', (event: KeyboardEvent) => {\n      if (event.keyCode === ESCAPE) {\n        this._detachOverlay();\n      }\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n  exportAs: 'cdkConnectedOverlay'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n{type: Renderer2, },\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: undefined, decorators: [{ type: Inject, args: [MD_CONNECTED_OVERLAY_SCROLL_STRATEGY, ] }, ]},\n{type: Directionality, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'origin': [{ type: Input, args: ['cdkConnectedOverlayOrigin', ] },],\n'positions': [{ type: Input, args: ['cdkConnectedOverlayPositions', ] },],\n'offsetX': [{ type: Input, args: ['cdkConnectedOverlayOffsetX', ] },],\n'offsetY': [{ type: Input, args: ['cdkConnectedOverlayOffsetY', ] },],\n'width': [{ type: Input, args: ['cdkConnectedOverlayWidth', ] },],\n'height': [{ type: Input, args: ['cdkConnectedOverlayHeight', ] },],\n'minWidth': [{ type: Input, args: ['cdkConnectedOverlayMinWidth', ] },],\n'minHeight': [{ type: Input, args: ['cdkConnectedOverlayMinHeight', ] },],\n'backdropClass': [{ type: Input, args: ['cdkConnectedOverlayBackdropClass', ] },],\n'scrollStrategy': [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy', ] },],\n'open': [{ type: Input, args: ['cdkConnectedOverlayOpen', ] },],\n'hasBackdrop': [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop', ] },],\n'_deprecatedOrigin': [{ type: Input, args: ['origin', ] },],\n'_deprecatedPositions': [{ type: Input, args: ['positions', ] },],\n'_deprecatedOffsetX': [{ type: Input, args: ['offsetX', ] },],\n'_deprecatedOffsetY': [{ type: Input, args: ['offsetY', ] },],\n'_deprecatedWidth': [{ type: Input, args: ['width', ] },],\n'_deprecatedHeight': [{ type: Input, args: ['height', ] },],\n'_deprecatedMinWidth': [{ type: Input, args: ['minWidth', ] },],\n'_deprecatedMinHeight': [{ type: Input, args: ['minHeight', ] },],\n'_deprecatedBackdropClass': [{ type: Input, args: ['backdropClass', ] },],\n'_deprecatedScrollStrategy': [{ type: Input, args: ['scrollStrategy', ] },],\n'_deprecatedOpen': [{ type: Input, args: ['open', ] },],\n'_deprecatedHasBackdrop': [{ type: Input, args: ['hasBackdrop', ] },],\n'backdropClick': [{ type: Output },],\n'positionChange': [{ type: Output },],\n'attach': [{ type: Output },],\n'detach': [{ type: Output },],\n};\n}\n\nfunction ConnectedOverlayDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nConnectedOverlayDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nConnectedOverlayDirective.ctorParameters;\n/** @type {?} */\nConnectedOverlayDirective.propDecorators;\n/** @type {?} */\nConnectedOverlayDirective.prototype._overlayRef;\n/** @type {?} */\nConnectedOverlayDirective.prototype._templatePortal;\n/** @type {?} */\nConnectedOverlayDirective.prototype._hasBackdrop;\n/** @type {?} */\nConnectedOverlayDirective.prototype._backdropSubscription;\n/** @type {?} */\nConnectedOverlayDirective.prototype._positionSubscription;\n/** @type {?} */\nConnectedOverlayDirective.prototype._offsetX;\n/** @type {?} */\nConnectedOverlayDirective.prototype._offsetY;\n/** @type {?} */\nConnectedOverlayDirective.prototype._position;\n/** @type {?} */\nConnectedOverlayDirective.prototype._escapeListener;\n/**\n * Origin for the connected overlay.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.origin;\n/**\n * Registered connected position pairs.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.positions;\n/**\n * The width of the overlay panel.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.width;\n/**\n * The height of the overlay panel.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.height;\n/**\n * The min width of the overlay panel.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.minWidth;\n/**\n * The min height of the overlay panel.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.minHeight;\n/**\n * The custom class to be set on the backdrop element.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.backdropClass;\n/**\n * Strategy to be used when handling scroll events while the overlay is open.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.scrollStrategy;\n/**\n * Whether the overlay is open.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.open;\n/**\n * Event emitted when the backdrop is clicked.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.backdropClick;\n/**\n * Event emitted when the position has changed.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.positionChange;\n/**\n * Event emitted when the overlay has been attached.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.attach;\n/**\n * Event emitted when the overlay has been detached.\n * @type {?}\n */\nConnectedOverlayDirective.prototype.detach;\n/** @type {?} */\nConnectedOverlayDirective.prototype._overlay;\n/** @type {?} */\nConnectedOverlayDirective.prototype._renderer;\n/** @type {?} */\nConnectedOverlayDirective.prototype._scrollStrategy;\n/** @type {?} */\nConnectedOverlayDirective.prototype._dir;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}