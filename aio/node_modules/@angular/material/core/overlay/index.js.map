{"version":3,"sources":["../../../../../src/lib/core/overlay/index.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OADO,EAAA,QAAE,EAAkB,MAAA,eAAA,CAAA;AAE3B,OADO,EAAA,OAAE,EAAO,MAAA,WAAA,CAAA;AAEhB,OADO,EAAA,oBAAE,EAAoB,MAAA,gBAAA,CAAA;AAE7B,OADO,EAAA,YAAE,EAAY,MAAA,6BAAA,CAAA;AAErB,OADO,EAEL,yBAAe,EACf,aAAa,EACb,6CAA6B,GAC9B,MAAM,sBAAE,CAAA;AACT,OADO,EAAA,sBAAE,EAAsB,MAAA,qCAAA,CAAA;AAE/B,OADO,EAAA,uBAAE,EAAuB,MAAA,2BAAA,CAAA;AAEhC,OADO,EAAA,0BAAE,EAA0B,MAAA,qBAAA,CAAA;AAInC,MAAM,CADC,IAAA,gBAAA,CAAM,iBAAA,GAAgC;IAE3C,OAAO;IACP,sBAAsB;IACtB,uBAAuB;IACvB,0BAA0B;IAC1B,6CAAA;CACD,CADC;AAEF;IAAA;IAaA,CAAC;IAAD,oBAAC;AAAD,CAbA,AAaC;;AAZkC,wBAAA,GAAoC;IAAvE,EACE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBAAtB,OAAO,EACE,CAAA,YAAE,EAAa,oBAAA,CAAqB;gBAA7C,OAAO,EACE,CAAA,yBAAE,EAA0B,aAAA,EAAe,oBAAA,CAAqB;gBAAzE,YAAY,EACE,CAAA,yBAAE,EAA0B,aAAA,CAAc;gBAAxD,SAAS,EACE,CAAA,iBAAE,CAAiB;aAA/B,EACC,EAAG;CAAJ,CACC;AAAF;;GAEG;AAAF,4BAAA,GAAA,cAAA,OAAA,EAEA,EAFA,CAEA,CAN6B;AAS9B;IACA,gBANS;IAOT,aANS,CAAA,UAAA,CAAA;IAOT;;;OAGG;IACH,aAAa,CAAC,cAAc,CAAC;AAC7B,CAAC;AAID,OAlBO,EAAA,OAAE,EAAO,MAAA,WAAA,CAAA;AAmBhB,OAlBO,EAAA,gBAAE,EAAgB,MAAA,qBAAA,CAAA;AAmBzB,OAlBO,EAAA,0BAAE,EAA0B,MAAA,gCAAA,CAAA;AAmBnC,OAlBO,EAAA,UAAE,EAAU,MAAA,eAAA,CAAA;AAmBnB,OAlBO,EAAA,YAAE,EAAY,MAAA,iBAAA,CAAA;AAmBrB,OAlBO,EAAA,yBAAE,EAA0B,aAAA,EAAc,MAAA,sBAAA,CAAA;AAmBjD,OAlBO,EAAA,aAAE,EAAa,MAAA,2BAAA,CAAA;AAoBtB,OAAO,EAAkG,sBAAsB,EAAC,wBAAwB,EAAC,8BAA8B,EAAC,MAAM,+BAA+B,CAAC;AAC9N,OAAO,EAAC,UAAU,EAAC,gBAAgB,EAAgB,qBAAqB,EAAC,wBAAwB,EAAC,mBAAmB,EAAC,kBAAkB,EAAC,mBAAmB,EAAC,oBAAoB,EAAC,MAAM,gBAAgB,CAAC;AAIzM,OAlBO,EAAA,sBAAE,EAAsB,MAAA,qCAAA,CAAA;AAmB/B,OAlBO,EAAA,yBAAE,EAAyB,MAAA,wCAAA,CAAA","file":"index.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule, Provider} from '@angular/core';\nimport {Overlay} from './overlay';\nimport {ScrollDispatchModule} from './scroll/index';\nimport {PortalModule} from '../portal/portal-directives';\nimport {\n  ConnectedOverlayDirective,\n  OverlayOrigin,\n  MD_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n} from './overlay-directives';\nimport {OverlayPositionBuilder} from './position/overlay-position-builder';\nimport {VIEWPORT_RULER_PROVIDER} from './position/viewport-ruler';\nimport {OVERLAY_CONTAINER_PROVIDER} from './overlay-container';\n\n\nexport const /** @type {?} */ OVERLAY_PROVIDERS: Provider[] = [\n  Overlay,\n  OverlayPositionBuilder,\n  VIEWPORT_RULER_PROVIDER,\n  OVERLAY_CONTAINER_PROVIDER,\n  MD_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n];\nexport class OverlayModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [PortalModule, ScrollDispatchModule],\n  exports: [ConnectedOverlayDirective, OverlayOrigin, ScrollDispatchModule],\n  declarations: [ConnectedOverlayDirective, OverlayOrigin],\n  providers: [OVERLAY_PROVIDERS],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction OverlayModule_tsickle_Closure_declarations() {\n/** @type {?} */\nOverlayModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOverlayModule.ctorParameters;\n}\n\n\n\nexport {Overlay} from './overlay';\nexport {OverlayContainer} from './overlay-container';\nexport {FullscreenOverlayContainer} from './fullscreen-overlay-container';\nexport {OverlayRef} from './overlay-ref';\nexport {OverlayState} from './overlay-state';\nexport {ConnectedOverlayDirective, OverlayOrigin} from './overlay-directives';\nexport {ViewportRuler} from './position/viewport-ruler';\n\nexport {HorizontalConnectionPos,VerticalConnectionPos,OriginConnectionPosition,OverlayConnectionPosition,ConnectionPositionPair,ScrollableViewProperties,ConnectedOverlayPositionChange} from './position/connected-position';\nexport {Scrollable,ScrollDispatcher,ScrollStrategy,ScrollStrategyOptions,RepositionScrollStrategy,CloseScrollStrategy,NoopScrollStrategy,BlockScrollStrategy,ScrollDispatchModule} from './scroll/index';\n\n// Export pre-defined position strategies and interface to build custom ones.\nexport {PositionStrategy} from './position/position-strategy';\nexport {GlobalPositionStrategy} from './position/global-position-strategy';\nexport {ConnectedPositionStrategy} from './position/connected-position-strategy';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}