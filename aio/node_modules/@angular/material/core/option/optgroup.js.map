{"version":3,"sources":["../../../../../src/lib/core/option/optgroup.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAGH,OADO,EAAA,SAAE,EAAU,iBAAA,EAAmB,KAAA,EAAO,uBAAA,EAAwB,MAAA,eAAA,CAAA;AAErE,OADO,EAAA,aAAE,EAAyB,MAAA,8BAAA,CAAA;AAElC;;GAEG;AACH;IAAA;IAD8B,CAAA;IAAA,qBAAA;AAAA,CAC9B,AAD8B,IAAA;;AAE9B,MAAM,CADC,IAAA,gBAAA,CAAM,oBAAA,GAAuB,aAAA,CAAc,cAAC,CAAc,CAAC;AAGlE,gCAA+B;AAC/B,IAAI,gBAAgB,CADhB,wBAAA,GAA2B,CAAA,CAAE;AAEjC;;GAEG;AACH;IACC,sCAAA;IADD;QAAA,qEAkCC;QA7BD;;WAEG;QACH,cAFG,GAAA,wBAAA,wBAAA,EAAA,CAAA;;IA4BH,CAAC;IAAD,iBAAC;AAAD,CAlCA,AAkCC,CAjCA,oBAAA;;AAMM,qBAAA,GAAoC;IAG3C,EAFE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAGvB,QAAQ,EAFE,MAAA,CAAO,EAAC;gBAGlB,QAAQ,EAFE,2BAAA;gBAGV,WAAW,EAFE,eAAA;gBAGb,aAAa,EAFE,iBAAA,CAAkB,IAAC;gBAGlC,eAAe,EAFE,uBAAA,CAAwB,MAAC;gBAG1C,MAAM,EAFE,CAAA,UAAE,CAAU;gBAGpB,IAAI,EAFE;oBAGJ,OAAO,EAFE,cAAA;oBAGT,MAAM,EAFE,OAAA;oBAGR,+BAA+B,EAFE,UAAA;oBAGjC,sBAAsB,EAFE,qBAAA;oBAGxB,wBAAwB,EAFE,UAAA;iBAG3B;aACF,EAFC,EAAG;CAGJ,CAFC;AAGF;;GAEG;AAHF,yBAAA,GAAA,cAAA,OAAA,EAKA,EALA,CAKA,CATC;AAMK,yBAAA,GAAyD;IAKhE,OAAO,EAJE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAKzB,CAJC;AAOF;IACA,gBAAgB;IAChB,UAAU,CAAC,UAAU,CAAC;IACtB;;;OAGG;IACH,UAAU,CAAC,cAAc,CAAC;IAC1B,gBAAgB;IAChB,UAAU,CAAC,cAAc,CAAC;IAC1B;;;OAGG;IACH,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC;IAC3B;;;OAGG;IACH,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC;AAC9B,CAAC","file":"optgroup.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Component, ViewEncapsulation, Input, ChangeDetectionStrategy} from '@angular/core';\nimport {mixinDisabled, CanDisable} from '../common-behaviors/disabled';\n/**\n * \\@docs-private\n */\nexport class MdOptgroupBase { }\nexport const /** @type {?} */ _MdOptgroupMixinBase = mixinDisabled(MdOptgroupBase);\n\n// Counter for unique group ids.\nlet /** @type {?} */ _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `md-option`.\n */\nexport class MdOptgroup extends _MdOptgroupMixinBase implements CanDisable {\n/**\n * Label for the option group.\n */\nlabel: string;\n/**\n * Unique id for the underlying label.\n */\n_labelId: string = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-optgroup, mat-optgroup',\n  templateUrl: 'optgroup.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  host: {\n    'class': 'mat-optgroup',\n    'role': 'group',\n    '[class.mat-optgroup-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-labelledby]': '_labelId',\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'label': [{ type: Input },],\n};\n}\n\nfunction MdOptgroup_tsickle_Closure_declarations() {\n/** @type {?} */\nMdOptgroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdOptgroup.ctorParameters;\n/** @type {?} */\nMdOptgroup.propDecorators;\n/**\n * Label for the option group.\n * @type {?}\n */\nMdOptgroup.prototype.label;\n/**\n * Unique id for the underlying label.\n * @type {?}\n */\nMdOptgroup.prototype._labelId;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}