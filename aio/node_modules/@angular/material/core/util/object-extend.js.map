{"version":3,"sources":["../../../../../src/lib/core/util/object-extend.ts"],"names":[],"mappings":"AACA;;;;;;;GAOG;AACH,MAMC,uBAAA,IAAA;IAAA,iBAAA;SAAA,UAAA,EAAA,qBAAA,EAAA,IAAA;QAAA,gCAAA;;IALC,EAAE,CAAC,CAAC,IAMC,IAAO,IAAA,CAAK,CAAC,CAAA;QALhB,MAMM,SAAA,CAAU,4CAAC,CAA4C,CAAC;IALhE,CAAC;IAED,GAAG,CAAC,CAMe,UAAA,EAAA,mBAAA,EAAA,qBAAA,EAAA,IAAA;QANd,IAMI,MAAA,gBAAA;QALP,EAAE,CAAC,CAAC,MAMC,IAAS,IAAA,CAAK,CAAC,CAAA;YALlB,GAAG,CAAC,CAAC,IAMC,gBAAA,CAAG,GAAA,IAAO,MAAA,CAAO,CAAC,CAAA;gBALtB,EAAE,CAAC,CAAC,MAMC,CAAM,cAAC,CAAc,GAAC,CAAG,CAAC,CAAC,CAAA;oBAL9B,IAAI,CAMC,GAAC,CAAG,GAAG,MAAA,CAAO,GAAC,CAAG,CAAC;gBAL1B,CAAC;YACH,CAAC;QACH,CAAC;KACF;IAED,MAAM,CAMC,IAAA,CAAK;AALd,CAAC","file":"object-extend.js","sourceRoot":"","sourcesContent":["\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n * \n * @param {?} dest The object which will have properties copied to it.\n * @param {...?} sources The source objects from which properties will be copied.\n * @return {?}\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let /** @type {?} */ source of sources) {\n    if (source != null) {\n      for (let /** @type {?} */ key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n"]}