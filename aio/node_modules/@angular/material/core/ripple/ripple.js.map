{"version":3,"sources":["../../../../../src/lib/core/ripple/ripple.ts"],"names":[],"mappings":"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","file":"ripple.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  Inject,\n  NgZone,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  InjectionToken,\n  Optional,\n} from '@angular/core';\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\nimport {RippleRef} from './ripple-ref';\nimport {ViewportRuler} from '../overlay/position/viewport-ruler';\nimport {Platform} from '../platform/platform';\n\nexport interface RippleGlobalOptions {\n  disabled?: boolean;\n  baseSpeedFactor?: number;\n}\n/**\n * Injection token that can be used to specify the global ripple options.\n */\nexport const MD_RIPPLE_GLOBAL_OPTIONS =\n    new InjectionToken<RippleGlobalOptions>('md-ripple-global-options');\nexport class MdRipple implements OnChanges, OnDestroy {\n\n  /**\n   * The element that triggers the ripple when click events are received. Defaults to the\n   * directive's host element.\n   */\n  // Prevent TS metadata emit from referencing HTMLElement in ripple.js\n  // Otherwise running this code in a Node environment (e.g Universal) will not work.\n   trigger: HTMLElement|HTMLElement;\n/**\n * Whether the ripple always originates from the center of the host element's bounds, rather\n * than originating from the location of the click event.\n */\ncentered: boolean;\n/**\n * Whether click events will not trigger the ripple. Ripples can be still launched manually\n * by using the `launch()` method.\n */\ndisabled: boolean;\n/**\n * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n * will be the distance from the center of the ripple to the furthest corner of the host element's\n * bounding rectangle.\n */\nradius: number = 0;\n/**\n * If set, the normal duration of ripple animations is divided by this value. For example,\n * setting it to 0.5 will cause the animations to take twice as long.\n * A changed speedFactor will not modify the fade-out duration of the ripples.\n */\nspeedFactor: number = 1;\n/**\n * Custom color for ripples.\n */\ncolor: string;\n/**\n * Whether foreground ripples should be visible outside the component's bounds.\n */\nunbounded: boolean;\n/**\n * Renderer for the ripple DOM manipulations.\n */\nprivate _rippleRenderer: RippleRenderer;\n/**\n * Options that are set globally for all ripples.\n */\nprivate _globalOptions: RippleGlobalOptions;\n/**\n * @param {?} elementRef\n * @param {?} ngZone\n * @param {?} ruler\n * @param {?} platform\n * @param {?} globalOptions\n */\nconstructor(\n    elementRef: ElementRef,\n    ngZone: NgZone,\n    ruler: ViewportRuler,\n    platform: Platform,\n      globalOptions: RippleGlobalOptions\n  ) {\n    this._rippleRenderer = new RippleRenderer(elementRef, ngZone, ruler, platform);\n    this._globalOptions = globalOptions ? globalOptions : {};\n\n    this._updateRippleRenderer();\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (changes['trigger'] && this.trigger) {\n      this._rippleRenderer.setTriggerElement(this.trigger);\n    }\n\n    this._updateRippleRenderer();\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    // Set the trigger element to null to cleanup all listeners.\n    this._rippleRenderer.setTriggerElement(null);\n  }\n/**\n * Launches a manual ripple at the specified position.\n * @param {?} pageX\n * @param {?} pageY\n * @param {?=} config\n * @return {?}\n */\nlaunch(pageX: number, pageY: number, config = this.rippleConfig): RippleRef {\n    return this._rippleRenderer.fadeInRipple(pageX, pageY, config);\n  }\n/**\n * Fades out all currently showing ripple elements.\n * @return {?}\n */\nfadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n/**\n * Ripple configuration from the directive's input values.\n * @return {?}\n */\nget rippleConfig(): RippleConfig {\n    return {\n      centered: this.centered,\n      speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\n      radius: this.radius,\n      color: this.color\n    };\n  }\n/**\n * Updates the ripple renderer with the latest ripple configuration.\n * @return {?}\n */\nprivate _updateRippleRenderer() {\n    this._rippleRenderer.rippleDisabled = this._globalOptions.disabled || this.disabled;\n    this._rippleRenderer.rippleConfig = this.rippleConfig;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-ripple], [mat-ripple], [mdRipple], [matRipple]',\n  exportAs: 'mdRipple',\n  host: {\n    'class': 'mat-ripple',\n    '[class.mat-ripple-unbounded]': 'unbounded'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n{type: ViewportRuler, },\n{type: Platform, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_RIPPLE_GLOBAL_OPTIONS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'trigger': [{ type: Input, args: ['mdRippleTrigger', ] },],\n'centered': [{ type: Input, args: ['mdRippleCentered', ] },],\n'disabled': [{ type: Input, args: ['mdRippleDisabled', ] },],\n'radius': [{ type: Input, args: ['mdRippleRadius', ] },],\n'speedFactor': [{ type: Input, args: ['mdRippleSpeedFactor', ] },],\n'color': [{ type: Input, args: ['mdRippleColor', ] },],\n'unbounded': [{ type: Input, args: ['mdRippleUnbounded', ] },],\n};\n}\n\nfunction MdRipple_tsickle_Closure_declarations() {\n/** @type {?} */\nMdRipple.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdRipple.ctorParameters;\n/** @type {?} */\nMdRipple.propDecorators;\n/** @type {?} */\nMdRipple.prototype.trigger;\n/**\n * Whether the ripple always originates from the center of the host element's bounds, rather\n * than originating from the location of the click event.\n * @type {?}\n */\nMdRipple.prototype.centered;\n/**\n * Whether click events will not trigger the ripple. Ripples can be still launched manually\n * by using the `launch()` method.\n * @type {?}\n */\nMdRipple.prototype.disabled;\n/**\n * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n * will be the distance from the center of the ripple to the furthest corner of the host element's\n * bounding rectangle.\n * @type {?}\n */\nMdRipple.prototype.radius;\n/**\n * If set, the normal duration of ripple animations is divided by this value. For example,\n * setting it to 0.5 will cause the animations to take twice as long.\n * A changed speedFactor will not modify the fade-out duration of the ripples.\n * @type {?}\n */\nMdRipple.prototype.speedFactor;\n/**\n * Custom color for ripples.\n * @type {?}\n */\nMdRipple.prototype.color;\n/**\n * Whether foreground ripples should be visible outside the component's bounds.\n * @type {?}\n */\nMdRipple.prototype.unbounded;\n/**\n * Renderer for the ripple DOM manipulations.\n * @type {?}\n */\nMdRipple.prototype._rippleRenderer;\n/**\n * Options that are set globally for all ripples.\n * @type {?}\n */\nMdRipple.prototype._globalOptions;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}