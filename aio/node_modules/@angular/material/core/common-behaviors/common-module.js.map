{"version":3,"sources":["../../../../../src/lib/core/common-behaviors/common-module.ts"],"names":[],"mappings":"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","file":"common-module.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule, InjectionToken, Optional, Inject, isDevMode} from '@angular/core';\nimport {DOCUMENT} from '@angular/platform-browser';\nimport {CompatibilityModule} from '../compatibility/compatibility';\nimport {BidiModule} from '../bidi/index';\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n */\nexport const MATERIAL_SANITY_CHECKS = new InjectionToken<boolean>('md-sanity-checks');\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, compatibility mode, etc.\n * \n * This module should be imported to each top-level component module (e.g., MdTabsModule).\n */\nexport class MdCommonModule {\n/**\n * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n */\nprivate _hasDoneGlobalChecks = false;\n/**\n * @param {?} _document\n * @param {?} _sanityChecksEnabled\n */\nconstructor(\nprivate _document: any,\n      _sanityChecksEnabled: boolean) {\n\n    if (_sanityChecksEnabled && !this._hasDoneGlobalChecks && _document && isDevMode()) {\n      this._checkDoctype();\n      this._checkTheme();\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n/**\n * @return {?}\n */\nprivate _checkDoctype(): void {\n    if (!this._document.doctype) {\n      console.warn(\n        'Current document does not have a doctype. This may cause ' +\n        'some Angular Material components not to behave as expected.'\n      );\n    }\n  }\n/**\n * @return {?}\n */\nprivate _checkTheme(): void {\n    if (typeof getComputedStyle === 'function') {\n      const /** @type {?} */ testElement = this._document.createElement('div');\n\n      testElement.classList.add('mat-theme-loaded-marker');\n      this._document.body.appendChild(testElement);\n\n      if (getComputedStyle(testElement).display !== 'none') {\n        console.warn(\n          'Could not find Angular Material core theme. Most Material ' +\n          'components may not work as expected. For more info refer ' +\n          'to the theming guide: https://material.angular.io/guide/theming'\n        );\n      }\n\n      this._document.body.removeChild(testElement);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CompatibilityModule, BidiModule],\n  exports: [CompatibilityModule, BidiModule],\n  providers: [{\n    provide: MATERIAL_SANITY_CHECKS, useValue: true,\n  }],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT, ] }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS, ] }, ]},\n];\n}\n\nfunction MdCommonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCommonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCommonModule.ctorParameters;\n/**\n * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n * @type {?}\n */\nMdCommonModule.prototype._hasDoneGlobalChecks;\n/** @type {?} */\nMdCommonModule.prototype._document;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}