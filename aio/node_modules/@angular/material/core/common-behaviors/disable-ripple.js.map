{"version":3,"sources":["../../../../../src/lib/core/common-behaviors/disable-ripple.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAGH,OADO,EAAA,qBAAE,EAAqB,MAAA,uBAAA,CAAA;AAQ9B;;;;;GAKG;AACH,MALC,6BAAA,IAAA;IAOC,MAAM;QALe,mCAAA;QAiBvB;;WAEG;QACH;YAbK,cAAwB;iBAAxB,UAAwB,EAAxB,qBAAwB,EAAxB,IAAwB;gBAAxB,yBAAwB;;YAa7B,+BAb+B,IAAA,UAAA;YANnB,oBAAA,GAA0B,KAAA,CAAM;;QAMb,CAAA;QAI/B,sBAPK,kCAAA;YAGL;;;eAGG;iBACH,cAP0B,MAAA,CAAO,IAAA,CAAK,cAAC,CAAc,CAAC,CAAA;YAQtD;;;eAGG;iBACH,UAXK,KAAA,IAA+B,IAAA,CAAK,cAAC,GAAgB,qBAAA,CAAsB,KAAC,CAAK,CAAC,CAAC,CAAA;;;WADlC;QAiBpD,cAAC;IAAD,CArBO,AAqBN,CArBoB,IAAA,GAQnB;AAcJ,CAAC","file":"disable-ripple.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisableRipple {\n  disableRipple: boolean;\n}\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nexport function mixinDisableRipple<T extends Constructor<{}>>(base: T)\n    : Constructor<CanDisableRipple> & T {\n  return class extends base {\nprivate _disableRipple: boolean = false;\n/**\n * Whether the ripple effect is disabled or not.\n * @return {?}\n */\nget disableRipple() { return this._disableRipple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n/**\n * @param {...?} args\n */\nconstructor(...args: any[]) { super(...args); }\n  };\n}\n"]}