{"version":3,"sources":["../../../../../src/lib/core/common-behaviors/disabled.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAGH,OADO,EAAA,qBAAE,EAAqB,MAAA,uBAAA,CAAA;AAQ9B;;;;;GAKG;AACH,MALC,wBAAA,IAAA;IAMC,MAAM;QALe,mCAAA;QAgBvB;;WAEG;QACH;YAbK,cAAwB;iBAAxB,UAAwB,EAAxB,qBAAwB,EAAxB,IAAwB;gBAAxB,yBAAwB;;YAa7B,+BAb+B,IAAA,UAAA;YALnB,eAAA,GAAqB,KAAA,CAAM;;QAKR,CAAA;QAI/B,sBAPK,6BAAA;YAIL;;eAEG;iBACH,cAPqB,MAAA,CAAO,IAAA,CAAK,SAAC,CAAS,CAAC,CAAA;YAQ5C;;;eAGG;iBACH,UAXK,KAAA,IAA0B,IAAA,CAAK,SAAC,GAAW,qBAAA,CAAsB,KAAC,CAAK,CAAC,CAAC,CAAA;;;WADlC;QAiB1C,cAAC;IAAD,CApBO,AAoBN,CApBoB,IAAA,GAOnB;AAcJ,CAAC","file":"disabled.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisable {\n  disabled: boolean;\n}\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<CanDisable> & T {\n  return class extends base {\nprivate _disabled: boolean = false;\n/**\n * @return {?}\n */\nget disabled() { return this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n/**\n * @param {...?} args\n */\nconstructor(...args: any[]) { super(...args); }\n  };\n}\n"]}