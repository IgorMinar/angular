{"version":3,"sources":["../../../../src/lib/sort/sort-header.ts"],"names":[],"mappings":"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","file":"sort-header.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  Optional,\n  ViewEncapsulation\n} from '@angular/core';\nimport {MdSort, MdSortable} from './sort';\nimport {MdSortHeaderIntl} from './sort-header-intl';\nimport {CdkColumnDef} from '@angular/cdk/table';\nimport {coerceBooleanProperty} from '../core';\nimport {getMdSortHeaderNotContainedWithinMdSortError} from './sort-errors';\nimport {Subscription} from 'rxjs/Subscription';\nimport {merge} from 'rxjs/observable/merge';\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n * \n * Must be provided with an id and contained within a parent MdSort directive.\n * \n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nexport class MdSortHeader implements MdSortable {\nprivate _rerenderSubscription: Subscription;\n/**\n * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n * the column's name.\n */\nid: string;\n/**\n * Sets the position of the arrow that displays when sorted.\n */\narrowPosition: 'before' | 'after' = 'after';\n/**\n * Overrides the sort start value of the containing MdSort for this MdSortable.\n */\nstart: 'asc' | 'desc';\n/**\n * Overrides the disable clear value of the containing MdSort for this MdSortable.\n * @return {?}\n */\nget disableClear() { return this._disableClear; }\n/**\n * @param {?} v\n * @return {?}\n */\nset disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\nprivate _disableClear: boolean;\n/**\n * @return {?}\n */\nget _id() { return this.id; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _id(v: string) { this.id = v; }\n/**\n * @param {?} _intl\n * @param {?} changeDetectorRef\n * @param {?} _sort\n * @param {?} _cdkColumnDef\n */\nconstructor(public _intl: MdSortHeaderIntl,\n              changeDetectorRef: ChangeDetectorRef,\npublic _sort: MdSort,\npublic _cdkColumnDef: CdkColumnDef) {\n    if (!_sort) {\n      throw getMdSortHeaderNotContainedWithinMdSortError();\n    }\n\n    this._rerenderSubscription = merge(_sort.mdSortChange, _intl.changes).subscribe(() => {\n      changeDetectorRef.markForCheck();\n    });\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    if (!this.id && this._cdkColumnDef) {\n      this.id = this._cdkColumnDef.name;\n    }\n\n    this._sort.register(this);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._sort.deregister(this);\n    this._rerenderSubscription.unsubscribe();\n  }\n/**\n * Whether this MdSortHeader is currently sorted in either ascending or descending order.\n * @return {?}\n */\n_isSorted() {\n    return this._sort.active == this.id && this._sort.direction;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: '[md-sort-header], [mat-sort-header]',\n  templateUrl: 'sort-header.html',\n  styleUrls: ['sort-header.css'],\n  host: {\n    '(click)': '_sort.sort(this)',\n    '[class.mat-sort-header-sorted]': '_isSorted()',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdSortHeaderIntl, },\n{type: ChangeDetectorRef, },\n{type: MdSort, decorators: [{ type: Optional }, ]},\n{type: CdkColumnDef, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input, args: ['md-sort-header', ] },],\n'arrowPosition': [{ type: Input },],\n'start': [{ type: Input, args: ['start', ] },],\n'disableClear': [{ type: Input },],\n'_id': [{ type: Input, args: ['mat-sort-header', ] },],\n};\n}\n\nfunction MdSortHeader_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSortHeader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSortHeader.ctorParameters;\n/** @type {?} */\nMdSortHeader.propDecorators;\n/** @type {?} */\nMdSortHeader.prototype._rerenderSubscription;\n/**\n * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n * the column's name.\n * @type {?}\n */\nMdSortHeader.prototype.id;\n/**\n * Sets the position of the arrow that displays when sorted.\n * @type {?}\n */\nMdSortHeader.prototype.arrowPosition;\n/**\n * Overrides the sort start value of the containing MdSort for this MdSortable.\n * @type {?}\n */\nMdSortHeader.prototype.start;\n/** @type {?} */\nMdSortHeader.prototype._disableClear;\n/** @type {?} */\nMdSortHeader.prototype._intl;\n/** @type {?} */\nMdSortHeader.prototype._sort;\n/** @type {?} */\nMdSortHeader.prototype._cdkColumnDef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}