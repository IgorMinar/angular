{"version":3,"sources":["../../../../src/lib/dialog/dialog-container.ts"],"names":[],"mappings":"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","file":"dialog-container.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Component,\n  ComponentRef,\n  ViewChild,\n  ViewEncapsulation,\n  NgZone,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Optional,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {\n  animate,\n  trigger,\n  state,\n  style,\n  transition,\n  AnimationEvent,\n} from '@angular/animations';\nimport {DOCUMENT} from '@angular/platform-browser';\nimport {BasePortalHost, ComponentPortal, PortalHostDirective, TemplatePortal} from '../core';\nimport {MdDialogConfig} from './dialog-config';\nimport {FocusTrapFactory, FocusTrap} from '../core/a11y/focus-trap';\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalHost without an origin.\n * \\@docs-private\n * @return {?}\n */\nexport function throwMdDialogContentAlreadyAttachedError() {\n  throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * \\@docs-private\n */\nexport class MdDialogContainer extends BasePortalHost {\n/**\n * The portal host inside of this container into which the dialog content will be loaded.\n */\n_portalHost: PortalHostDirective;\n/**\n * The class that traps and manages focus within the dialog.\n */\nprivate _focusTrap: FocusTrap;\n/**\n * Element that was focused before the dialog was opened. Save this to restore upon close.\n */\nprivate _elementFocusedBeforeDialogWasOpened: HTMLElement | null = null;\n/**\n * The dialog configuration.\n */\n_config: MdDialogConfig;\n/**\n * State of the dialog animation.\n */\n_state: 'void' | 'enter' | 'exit' = 'enter';\n/**\n * Emits when an animation state changes.\n */\n_animationStateChanged = new EventEmitter<AnimationEvent>();\n/**\n * ID of the element that should be considered as the dialog's label.\n */\n_ariaLabelledBy: string | null = null;\n/**\n * Whether the container is currently mid-animation.\n */\n_isAnimating = false;\n/**\n * @param {?} _ngZone\n * @param {?} _elementRef\n * @param {?} _focusTrapFactory\n * @param {?} _changeDetectorRef\n * @param {?} _document\n */\nconstructor(\nprivate _ngZone: NgZone,\nprivate _elementRef: ElementRef,\nprivate _focusTrapFactory: FocusTrapFactory,\nprivate _changeDetectorRef: ChangeDetectorRef,\nprivate _document: any) {\n\n    super();\n  }\n/**\n * Attach a ComponentPortal as content to this dialog container.\n * @template T\n * @param {?} portal Portal to be attached as the dialog content.\n * @return {?}\n */\nattachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    if (this._portalHost.hasAttached()) {\n      throwMdDialogContentAlreadyAttachedError();\n    }\n\n    this._savePreviouslyFocusedElement();\n    return this._portalHost.attachComponentPortal(portal);\n  }\n/**\n * Attach a TemplatePortal as content to this dialog container.\n * @param {?} portal Portal to be attached as the dialog content.\n * @return {?}\n */\nattachTemplatePortal(portal: TemplatePortal): Map<string, any> {\n    if (this._portalHost.hasAttached()) {\n      throwMdDialogContentAlreadyAttachedError();\n    }\n\n    this._savePreviouslyFocusedElement();\n    return this._portalHost.attachTemplatePortal(portal);\n  }\n/**\n * Moves the focus inside the focus trap.\n * @return {?}\n */\nprivate _trapFocus() {\n    if (!this._focusTrap) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n\n    // If were to attempt to focus immediately, then the content of the dialog would not yet be\n    // ready in instances where change detection has to run first. To deal with this, we simply\n    // wait for the microtask queue to be empty.\n    this._focusTrap.focusInitialElementWhenReady();\n  }\n/**\n * Restores focus to the element that was focused before the dialog opened.\n * @return {?}\n */\nprivate _restoreFocus() {\n    const /** @type {?} */ toFocus = this._elementFocusedBeforeDialogWasOpened;\n\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (toFocus && 'focus' in toFocus) {\n      toFocus.focus();\n    }\n\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n/**\n * Saves a reference to the element that was focused before the dialog was opened.\n * @return {?}\n */\nprivate _savePreviouslyFocusedElement() {\n    if (this._document) {\n      this._elementFocusedBeforeDialogWasOpened = /** @type {?} */(( this._document.activeElement as HTMLElement));\n    }\n  }\n/**\n * Callback, invoked whenever an animation on the host completes.\n * @param {?} event\n * @return {?}\n */\n_onAnimationDone(event: AnimationEvent) {\n    if (event.toState === 'enter') {\n      this._trapFocus();\n    } else if (event.toState === 'exit') {\n      this._restoreFocus();\n    }\n\n    this._animationStateChanged.emit(event);\n    this._isAnimating = false;\n  }\n/**\n * Callback, invoked when an animation on the host starts.\n * @param {?} event\n * @return {?}\n */\n_onAnimationStart(event: AnimationEvent) {\n    this._isAnimating = true;\n    this._animationStateChanged.emit(event);\n  }\n/**\n * Starts the dialog exit animation.\n * @return {?}\n */\n_startExitAnimation(): void {\n    this._state = 'exit';\n\n    // Mark the container for check so it can react if the\n    // view container is using OnPush change detection.\n    this._changeDetectorRef.markForCheck();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-dialog-container, mat-dialog-container',\n  templateUrl: 'dialog-container.html',\n  styleUrls: ['dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('slideDialog', [\n      // Note: The `enter` animation doesn't transition to something like `translate3d(0, 0, 0)\n      // scale(1)`, because for some reason specifying the transform explicitly, causes IE both\n      // to blur the dialog content and decimate the animation performance. Leaving it as `none`\n      // solves both issues.\n      state('enter', style({ transform: 'none', opacity: 1 })),\n      state('void', style({ transform: 'translate3d(0, 25%, 0) scale(0.9)', opacity: 0 })),\n      state('exit', style({ transform: 'translate3d(0, 25%, 0)', opacity: 0 })),\n      transition('* => *', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n    ])\n  ],\n  host: {\n    'class': 'mat-dialog-container',\n    '[attr.role]': '_config?.role',\n    '[attr.aria-labelledby]': '_ariaLabelledBy',\n    '[attr.aria-describedby]': '_config?.ariaDescribedBy || null',\n    '[@slideDialog]': '_state',\n    '(@slideDialog.start)': '_onAnimationStart($event)',\n    '(@slideDialog.done)': '_onAnimationDone($event)',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n{type: ElementRef, },\n{type: FocusTrapFactory, },\n{type: ChangeDetectorRef, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_portalHost': [{ type: ViewChild, args: [PortalHostDirective, ] },],\n};\n}\n\nfunction MdDialogContainer_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDialogContainer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDialogContainer.ctorParameters;\n/** @type {?} */\nMdDialogContainer.propDecorators;\n/**\n * The portal host inside of this container into which the dialog content will be loaded.\n * @type {?}\n */\nMdDialogContainer.prototype._portalHost;\n/**\n * The class that traps and manages focus within the dialog.\n * @type {?}\n */\nMdDialogContainer.prototype._focusTrap;\n/**\n * Element that was focused before the dialog was opened. Save this to restore upon close.\n * @type {?}\n */\nMdDialogContainer.prototype._elementFocusedBeforeDialogWasOpened;\n/**\n * The dialog configuration.\n * @type {?}\n */\nMdDialogContainer.prototype._config;\n/**\n * State of the dialog animation.\n * @type {?}\n */\nMdDialogContainer.prototype._state;\n/**\n * Emits when an animation state changes.\n * @type {?}\n */\nMdDialogContainer.prototype._animationStateChanged;\n/**\n * ID of the element that should be considered as the dialog's label.\n * @type {?}\n */\nMdDialogContainer.prototype._ariaLabelledBy;\n/**\n * Whether the container is currently mid-animation.\n * @type {?}\n */\nMdDialogContainer.prototype._isAnimating;\n/** @type {?} */\nMdDialogContainer.prototype._ngZone;\n/** @type {?} */\nMdDialogContainer.prototype._elementRef;\n/** @type {?} */\nMdDialogContainer.prototype._focusTrapFactory;\n/** @type {?} */\nMdDialogContainer.prototype._changeDetectorRef;\n/** @type {?} */\nMdDialogContainer.prototype._document;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}