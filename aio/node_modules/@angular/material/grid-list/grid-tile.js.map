{"version":3,"sources":["../../../../src/lib/grid-list/grid-tile.ts"],"names":[],"mappings":"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","file":"grid-tile.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Component,\n  ViewEncapsulation,\n  Renderer2,\n  ElementRef,\n  Input,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  Directive,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {MdLine, MdLineSetter} from '../core';\nimport {coerceToNumber} from './grid-list-measure';\nexport class MdGridTile {\n  _rowspan: number = 1;\n  _colspan: number = 1;\n/**\n * @param {?} _renderer\n * @param {?} _element\n */\nconstructor(private _renderer: Renderer2,\nprivate _element: ElementRef) {}\n/**\n * Amount of rows that the grid tile takes up.\n * @return {?}\n */\nget rowspan() { return this._rowspan; }\n/**\n * @param {?} value\n * @return {?}\n */\nset rowspan(value) { this._rowspan = coerceToNumber(value); }\n/**\n * Amount of columns that the grid tile takes up.\n * @return {?}\n */\nget colspan() { return this._colspan; }\n/**\n * @param {?} value\n * @return {?}\n */\nset colspan(value) { this._colspan = coerceToNumber(value); }\n/**\n * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n * \"Changed after checked\" errors that would occur with HostBinding.\n * @param {?} property\n * @param {?} value\n * @return {?}\n */\n_setStyle(property: string, value: string): void {\n    this._renderer.setStyle(this._element.nativeElement, property, value);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-grid-tile, mat-grid-tile',\n  host: {\n    'class': 'mat-grid-tile',\n  },\n  templateUrl: 'grid-tile.html',\n  styleUrls: ['grid-list.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'rowspan': [{ type: Input },],\n'colspan': [{ type: Input },],\n};\n}\n\nfunction MdGridTile_tsickle_Closure_declarations() {\n/** @type {?} */\nMdGridTile.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdGridTile.ctorParameters;\n/** @type {?} */\nMdGridTile.propDecorators;\n/** @type {?} */\nMdGridTile.prototype._rowspan;\n/** @type {?} */\nMdGridTile.prototype._colspan;\n/** @type {?} */\nMdGridTile.prototype._renderer;\n/** @type {?} */\nMdGridTile.prototype._element;\n}\n\nexport class MdGridTileText implements AfterContentInit {\n/**\n *  Helper that watches the number of lines in a text area and sets\n * a class on the host element that matches the line count.\n */\n_lineSetter: MdLineSetter;\n   _lines: QueryList<MdLine>;\n/**\n * @param {?} _renderer\n * @param {?} _element\n */\nconstructor(private _renderer: Renderer2,\nprivate _element: ElementRef) {}\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._lineSetter = new MdLineSetter(this._lines, this._renderer, this._element);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-grid-tile-header, mat-grid-tile-header, md-grid-tile-footer, mat-grid-tile-footer',\n  templateUrl: 'grid-tile-text.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_lines': [{ type: ContentChildren, args: [MdLine, ] },],\n};\n}\n\nfunction MdGridTileText_tsickle_Closure_declarations() {\n/** @type {?} */\nMdGridTileText.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdGridTileText.ctorParameters;\n/** @type {?} */\nMdGridTileText.propDecorators;\n/**\n *  Helper that watches the number of lines in a text area and sets\n * a class on the host element that matches the line count.\n * @type {?}\n */\nMdGridTileText.prototype._lineSetter;\n/** @type {?} */\nMdGridTileText.prototype._lines;\n/** @type {?} */\nMdGridTileText.prototype._renderer;\n/** @type {?} */\nMdGridTileText.prototype._element;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdGridAvatarCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-grid-avatar], [mat-grid-avatar], [mdGridAvatar], [matGridAvatar]',\n  host: {'class': 'mat-grid-avatar'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdGridAvatarCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdGridAvatarCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdGridAvatarCssMatStyler.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdGridTileHeaderCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-grid-tile-header, mat-grid-tile-header',\n  host: {'class': 'mat-grid-tile-header'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdGridTileHeaderCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdGridTileHeaderCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdGridTileHeaderCssMatStyler.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdGridTileFooterCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-grid-tile-footer, mat-grid-tile-footer',\n  host: {'class': 'mat-grid-tile-footer'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdGridTileFooterCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdGridTileFooterCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdGridTileFooterCssMatStyler.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}