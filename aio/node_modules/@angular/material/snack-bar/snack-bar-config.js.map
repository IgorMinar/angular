{"version":3,"sources":["../../../../src/lib/snack-bar/snack-bar-config.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OADO,EAAmB,cAAA,EAAe,MAAA,eAAA,CAAA;AAIzC,MAAM,CADC,IAAA,gBAAA,CAAM,iBAAA,GAAoB,IAAI,cAAA,CAAmB,gBAAE,CAAgB,CAAC;AAE3E;;GAEG;AACH;IAAA;QACA;;WAEG;QACH,eAFG,GAAA,WAAA,CAAA;QAGH;;WAEG;QACH,wBAHG,GAAA,EAAA,CAAA;QAQH;;WAEG;QACH,aALG,GAAA,CAAA,CAAA;QAUH;;WAEG;QACH,cAPG,GAAA,KAAA,CAAA;QAQH;;WAEG;QACH,SARG,GAAA,IAAA,CAAA;IASH,CAAC;IAAD,uBAAC;AAAD,CA7BA,AA6BC,IAAA;;AAED;IACA;;;OAGG;IACH,gBAAgB,CAAC,SAAS,CAAC,UAAU,CAAC;IACtC;;;OAGG;IACH,gBAAgB,CAAC,SAAS,CAAC,mBAAmB,CAAC;IAC/C;;;OAGG;IACH,gBAAgB,CAAC,SAAS,CAAC,gBAAgB,CAAC;IAC5C;;;OAGG;IACH,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC;IACpC;;;OAGG;IACH,gBAAgB,CAAC,SAAS,CAAC,YAAY,CAAC;IACxC;;;OAGG;IACH,gBAAgB,CAAC,SAAS,CAAC,SAAS,CAAC;IACrC;;;OAGG;IACH,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC;AAChC,CAAC","file":"snack-bar-config.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ViewContainerRef, InjectionToken} from '@angular/core';\nimport {AriaLivePoliteness, Direction} from '../core';\n\nexport const /** @type {?} */ MD_SNACK_BAR_DATA = new InjectionToken<any>('MdSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n */\nexport class MdSnackBarConfig {\n/**\n * The politeness level for the MdAriaLiveAnnouncer announcement.\n */\npoliteness?: AriaLivePoliteness = 'assertive';\n/**\n * Message to be announced by the MdAriaLiveAnnouncer\n */\nannouncementMessage?: string = '';\n/**\n * The view container to place the overlay for the snack bar into.\n */\nviewContainerRef?: ViewContainerRef;\n/**\n * The length of time in milliseconds to wait before automatically dismissing the snack bar.\n */\nduration?: number = 0;\n/**\n * Extra CSS classes to be added to the snack bar container.\n */\nextraClasses?: string[];\n/**\n * Text layout direction for the snack bar.\n */\ndirection?: Direction = 'ltr';\n/**\n * Data being injected into the child component.\n */\ndata?: any = null;\n}\n\nfunction MdSnackBarConfig_tsickle_Closure_declarations() {\n/**\n * The politeness level for the MdAriaLiveAnnouncer announcement.\n * @type {?}\n */\nMdSnackBarConfig.prototype.politeness;\n/**\n * Message to be announced by the MdAriaLiveAnnouncer\n * @type {?}\n */\nMdSnackBarConfig.prototype.announcementMessage;\n/**\n * The view container to place the overlay for the snack bar into.\n * @type {?}\n */\nMdSnackBarConfig.prototype.viewContainerRef;\n/**\n * The length of time in milliseconds to wait before automatically dismissing the snack bar.\n * @type {?}\n */\nMdSnackBarConfig.prototype.duration;\n/**\n * Extra CSS classes to be added to the snack bar container.\n * @type {?}\n */\nMdSnackBarConfig.prototype.extraClasses;\n/**\n * Text layout direction for the snack bar.\n * @type {?}\n */\nMdSnackBarConfig.prototype.direction;\n/**\n * Data being injected into the child component.\n * @type {?}\n */\nMdSnackBarConfig.prototype.data;\n}\n\n"]}