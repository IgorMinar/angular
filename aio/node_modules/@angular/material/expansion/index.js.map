{"version":3,"sources":["../../../../src/lib/expansion/index.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OADO,EAAA,QAAE,EAAQ,MAAA,eAAA,CAAA;AAEjB,OADO,EAAA,YAAE,EAAY,MAAA,iBAAA,CAAA;AAErB,OADO,EAAA,mBAAE,EAAoB,WAAA,EAAa,oCAAA,EAAqC,MAAA,SAAA,CAAA;AAE/E,OADO,EAEL,sBAAsB,EACtB,2BAAsB,EACtB,qBAAK,EACN,MAAM,0BAAE,CAAA;AACT,OADO,EAEL,gBAAgB,EAChB,yBAAyB,GAC1B,MAAM,mBAAE,CAAA;AACT,OADO,EAEL,YAAY,EACZ,WAAK,GACN,MAAM,aAAa,CAAC;AACrB;IAAA;IA6BA,CAAC;IAAD,wBAAC;AAAD,CA7BA,AA6BC;;AA5BsC,4BAAA,GAAoC;IAA3E,EACE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBAAtB,OAAO,EACE,CAAA,mBAAE,EAAoB,YAAA,EAAc,WAAA,CAAY;gBAAzD,OAAO,EACE;oBAAP,YAAY;oBACZ,WAAW;oBACX,gBAAgB;oBAChB,yBAAyB;oBACzB,sBAAsB;oBACtB,qBAAqB;oBACrB,2BAA2B;iBAC5B;gBACD,YAAY,EACE;oBAAZ,YAAY;oBACZ,WAAW;oBACX,gBAAgB;oBAChB,yBAAyB;oBACzB,sBAAsB;oBACtB,qBAAqB;oBACrB,2BAA2B;iBAC5B;gBACD,SAAS,EACE,CAAA,oCAAE,CAAoC;aAAlD,EACC,EAAG;CAAJ,CACC;AAAF;;GAEG;AAAF,gCAAA,GAAA,cAAA,OAAA,EAEA,EAFA,CAEA,CANiC;AASlC;IACA,gBANe;IAOf,iBAAiB,CAAC,UANO,CAAA;IAOzB;;;OAGG;IACH,iBAAiB,CAAC,cANO,CAAA;AAOzB,CAAC;AAGD,OAlBO,EAmBL,YAAY,EACZ,WAAW,EAEZ,MAAM,aAAa,CAAC;AACrB,OAlBO,EAAA,aAAE,EAAa,MAAA,kBAAA,CAAA;AAmBtB,OAlBO,EAmBL,gBAAgB,EAEhB,yBAAyB,EAC1B,MAAM,mBAAmB,CAAC;AAC3B,OAlBO,EAmBL,sBAAsB,EACtB,2BAA2B,EAC3B,qBAAqB,EACtB,MAAM,0BAA0B,CAAC","file":"index.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CompatibilityModule, StyleModule, UNIQUE_SELECTION_DISPATCHER_PROVIDER} from '../core';\nimport {\n  MdExpansionPanelHeader,\n  MdExpansionPanelDescription,\n  MdExpansionPanelTitle\n} from './expansion-panel-header';\nimport {\n  MdExpansionPanel,\n  MdExpansionPanelActionRow,\n} from './expansion-panel';\nimport {\n  CdkAccordion,\n  MdAccordion,\n} from './accordion';\nexport class MdExpansionModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CompatibilityModule, CommonModule, StyleModule],\n  exports: [\n    CdkAccordion,\n    MdAccordion,\n    MdExpansionPanel,\n    MdExpansionPanelActionRow,\n    MdExpansionPanelHeader,\n    MdExpansionPanelTitle,\n    MdExpansionPanelDescription\n  ],\n  declarations: [\n    CdkAccordion,\n    MdAccordion,\n    MdExpansionPanel,\n    MdExpansionPanelActionRow,\n    MdExpansionPanelHeader,\n    MdExpansionPanelTitle,\n    MdExpansionPanelDescription\n  ],\n  providers: [UNIQUE_SELECTION_DISPATCHER_PROVIDER]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdExpansionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdExpansionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdExpansionModule.ctorParameters;\n}\n\n\nexport {\n  CdkAccordion,\n  MdAccordion,\n  MdAccordionDisplayMode\n} from './accordion';\nexport {AccordionItem} from './accordion-item';\nexport {\n  MdExpansionPanel,\n  MdExpansionPanelState,\n  MdExpansionPanelActionRow\n} from './expansion-panel';\nexport {\n  MdExpansionPanelHeader,\n  MdExpansionPanelDescription,\n  MdExpansionPanelTitle\n} from './expansion-panel-header';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}