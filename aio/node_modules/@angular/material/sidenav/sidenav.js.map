{"version":3,"sources":["../../../../src/lib/sidenav/sidenav.ts"],"names":[],"mappings":"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","file":"sidenav.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  ChangeDetectionStrategy,\n  EventEmitter,\n  Renderer2,\n  ViewEncapsulation,\n  NgZone,\n  OnDestroy,\n  Inject,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {animate, state, style, transition, trigger, AnimationEvent} from '@angular/animations';\nimport {Directionality, coerceBooleanProperty} from '../core';\nimport {FocusTrapFactory, FocusTrap} from '../core/a11y/focus-trap';\nimport {ESCAPE} from '../core/keyboard/keycodes';\nimport {first, takeUntil, startWith} from '../core/rxjs/index';\nimport {DOCUMENT} from '@angular/platform-browser';\nimport {merge} from 'rxjs/observable/merge';\n/**\n * Throws an exception when two MdSidenav are matching the same side.\n * @param {?} align\n * @return {?}\n */\nexport function throwMdDuplicatedSidenavError(align: string) {\n  throw Error(`A sidenav was already declared for 'align=\"${align}\"'`);\n}\n/**\n * Sidenav toggle promise result.\n * @deprecated\n */\nexport class MdSidenavToggleResult {\n/**\n * @param {?} type\n * @param {?} animationFinished\n */\nconstructor(public type: 'open' | 'close',\npublic animationFinished: boolean) {}\n}\n\nfunction MdSidenavToggleResult_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSidenavToggleResult.prototype.type;\n/** @type {?} */\nMdSidenavToggleResult.prototype.animationFinished;\n}\n\n/**\n * <md-sidenav> component.\n * \n * This component corresponds to the drawer of the sidenav.\n * \n * Please refer to README.md for examples on how to use it.\n */\nexport class MdSidenav implements AfterContentInit, OnDestroy {\nprivate _focusTrap: FocusTrap;\nprivate _elementFocusedBeforeSidenavWasOpened: HTMLElement | null = null;\n/**\n * Whether the sidenav is initialized. Used for disabling the initial animation.\n */\nprivate _enableAnimations = false;\n/**\n * Alignment of the sidenav (direction neutral); whether 'start' or 'end'.\n */\nprivate _align: 'start' | 'end' = 'start';\n/**\n * Direction which the sidenav is aligned in.\n * @return {?}\n */\nget align() { return this._align; }\n/**\n * @param {?} value\n * @return {?}\n */\nset align(value) {\n    // Make sure we have a valid value.\n    value = value === 'end' ? 'end' : 'start';\n    if (value != this._align) {\n      this._align = value;\n      this.onAlignChanged.emit();\n    }\n  }\n/**\n * Mode of the sidenav; one of 'over', 'push' or 'side'.\n */\nmode: 'over' | 'push' | 'side' = 'over';\n/**\n * Whether the sidenav can be closed with the escape key or not.\n * @return {?}\n */\nget disableClose(): boolean { return this._disableClose; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disableClose(value: boolean) { this._disableClose = coerceBooleanProperty(value); }\nprivate _disableClose: boolean = false;\n/**\n * Whether the sidenav is opened.\n */\nprivate _opened: boolean = false;\n/**\n * Emits whenever the sidenav has started animating.\n */\n_animationStarted = new EventEmitter<void>();\n/**\n * Whether the sidenav is animating. Used to prevent overlapping animations.\n */\n_isAnimating = false;\n/**\n * Promise that resolves when the open/close animation completes. It is here for backwards\n * compatibility and should be removed next time we do sidenav breaking changes.\n * @deprecated\n */\nprivate _currentTogglePromise: Promise<MdSidenavToggleResult> | null;\n/**\n * Event emitted when the sidenav is fully opened.\n */\nonOpen = new EventEmitter<MdSidenavToggleResult | void>();\n/**\n * Event emitted when the sidenav is fully closed.\n */\nonClose = new EventEmitter<MdSidenavToggleResult | void>();\n/**\n * Event emitted when the sidenav alignment changes.\n */\nonAlignChanged = new EventEmitter<void>();\n/**\n * @return {?}\n */\nget isFocusTrapEnabled() {\n    // The focus trap is only enabled when the sidenav is open in any mode other than side.\n    return this.opened && this.mode !== 'side';\n  }\n/**\n * @param {?} _elementRef\n * @param {?} _focusTrapFactory\n * @param {?} _doc\n */\nconstructor(private _elementRef: ElementRef,\nprivate _focusTrapFactory: FocusTrapFactory,\nprivate _doc: any) {\n    this.onOpen.subscribe(() => {\n      if (this._doc) {\n        this._elementFocusedBeforeSidenavWasOpened = this._doc.activeElement as HTMLElement;\n      }\n\n      if (this.isFocusTrapEnabled && this._focusTrap) {\n        this._focusTrap.focusInitialElementWhenReady();\n      }\n    });\n\n    this.onClose.subscribe(() => this._restoreFocus());\n  }\n/**\n * If focus is currently inside the sidenav, restores it to where it was before the sidenav\n * opened.\n * @return {?}\n */\nprivate _restoreFocus() {\n    let /** @type {?} */ activeEl = this._doc && this._doc.activeElement;\n    if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n      if (this._elementFocusedBeforeSidenavWasOpened instanceof HTMLElement) {\n        this._elementFocusedBeforeSidenavWasOpened.focus();\n      } else {\n        this._elementRef.nativeElement.blur();\n      }\n    }\n\n    this._elementFocusedBeforeSidenavWasOpened = null;\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    this._focusTrap.enabled = this.isFocusTrapEnabled;\n    Promise.resolve().then(() => this._enableAnimations = true);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n/**\n * Whether the sidenav is opened. We overload this because we trigger an event when it\n * starts or end.\n * @return {?}\n */\nget opened(): boolean { return this._opened; }\n/**\n * @param {?} v\n * @return {?}\n */\nset opened(v: boolean) {\n    this.toggle(coerceBooleanProperty(v));\n  }\n/**\n * Open the sidenav.\n * @return {?}\n */\nopen(): Promise<MdSidenavToggleResult> {\n    return this.toggle(true);\n  }\n/**\n * Close the sidenav.\n * @return {?}\n */\nclose(): Promise<MdSidenavToggleResult> {\n    return this.toggle(false);\n  }\n/**\n * Toggle this sidenav.\n * @param {?=} isOpen Whether the sidenav should be open.\n * @return {?}\n */\ntoggle(isOpen: boolean = !this.opened): Promise<MdSidenavToggleResult> {\n    if (!this._isAnimating) {\n      this._opened = isOpen;\n      this._currentTogglePromise = new Promise(resolve => {\n        first.call(isOpen ? this.onOpen : this.onClose).subscribe(resolve);\n      });\n\n      if (this._focusTrap) {\n        this._focusTrap.enabled = this.isFocusTrapEnabled;\n      }\n    }\n\n    // TODO(crisbeto): This promise is here backwards-compatibility.\n    // It should be removed next time we do breaking changes in the sidenav.\n    return /** @type {?} */(( this._currentTogglePromise));\n  }\n/**\n * Handles the keyboard events.\n * \\@docs-private\n * @param {?} event\n * @return {?}\n */\nhandleKeydown(event: KeyboardEvent) {\n    if (event.keyCode === ESCAPE && !this.disableClose) {\n      this.close();\n      event.stopPropagation();\n    }\n  }\n/**\n * Figures out the state of the sidenav animation.\n * @return {?}\n */\n_getAnimationState(): 'open-instant' | 'open' | 'void' {\n    if (this.opened) {\n      return this._enableAnimations ? 'open' : 'open-instant';\n    }\n\n    return 'void';\n  }\n/**\n * @return {?}\n */\n_onAnimationStart() {\n    this._isAnimating = true;\n    this._animationStarted.emit();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_onAnimationEnd(event: AnimationEvent) {\n    const {fromState, toState} = event;\n\n    if (toState === 'open' && fromState === 'void') {\n      this.onOpen.emit(new MdSidenavToggleResult('open', true));\n    } else if (toState === 'void' && fromState === 'open') {\n      this.onClose.emit(new MdSidenavToggleResult('close', true));\n    }\n\n    this._isAnimating = false;\n    this._currentTogglePromise = null;\n  }\n/**\n * @return {?}\n */\nget _width() {\n    return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-sidenav, mat-sidenav',\n  templateUrl: 'sidenav.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('transform', [\n      state('open, open-instant', style({\n        transform: 'translate3d(0, 0, 0)',\n        visibility: 'visible',\n      })),\n      state('void', style({\n        visibility: 'hidden',\n      })),\n      transition('void => open-instant', animate('0ms')),\n      transition('void <=> open', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n  ],\n  host: {\n    'class': 'mat-sidenav',\n    '[@transform]': '_getAnimationState()',\n    '(@transform.start)': '_onAnimationStart()',\n    '(@transform.done)': '_onAnimationEnd($event)',\n    '(keydown)': 'handleKeydown($event)',\n    // must prevent the browser from aligning text based on value\n    '[attr.align]': 'null',\n    '[class.mat-sidenav-end]': 'align === \"end\"',\n    '[class.mat-sidenav-over]': 'mode === \"over\"',\n    '[class.mat-sidenav-push]': 'mode === \"push\"',\n    '[class.mat-sidenav-side]': 'mode === \"side\"',\n    'tabIndex': '-1'\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: FocusTrapFactory, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'align': [{ type: Input },],\n'mode': [{ type: Input },],\n'disableClose': [{ type: Input },],\n'onOpen': [{ type: Output, args: ['open', ] },],\n'onClose': [{ type: Output, args: ['close', ] },],\n'onAlignChanged': [{ type: Output, args: ['align-changed', ] },],\n'opened': [{ type: Input },],\n};\n}\n\nfunction MdSidenav_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSidenav.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSidenav.ctorParameters;\n/** @type {?} */\nMdSidenav.propDecorators;\n/** @type {?} */\nMdSidenav.prototype._focusTrap;\n/** @type {?} */\nMdSidenav.prototype._elementFocusedBeforeSidenavWasOpened;\n/**\n * Whether the sidenav is initialized. Used for disabling the initial animation.\n * @type {?}\n */\nMdSidenav.prototype._enableAnimations;\n/**\n * Alignment of the sidenav (direction neutral); whether 'start' or 'end'.\n * @type {?}\n */\nMdSidenav.prototype._align;\n/**\n * Mode of the sidenav; one of 'over', 'push' or 'side'.\n * @type {?}\n */\nMdSidenav.prototype.mode;\n/** @type {?} */\nMdSidenav.prototype._disableClose;\n/**\n * Whether the sidenav is opened.\n * @type {?}\n */\nMdSidenav.prototype._opened;\n/**\n * Emits whenever the sidenav has started animating.\n * @type {?}\n */\nMdSidenav.prototype._animationStarted;\n/**\n * Whether the sidenav is animating. Used to prevent overlapping animations.\n * @type {?}\n */\nMdSidenav.prototype._isAnimating;\n/**\n * Promise that resolves when the open/close animation completes. It is here for backwards\n * compatibility and should be removed next time we do sidenav breaking changes.\n * @deprecated\n * @type {?}\n */\nMdSidenav.prototype._currentTogglePromise;\n/**\n * Event emitted when the sidenav is fully opened.\n * @type {?}\n */\nMdSidenav.prototype.onOpen;\n/**\n * Event emitted when the sidenav is fully closed.\n * @type {?}\n */\nMdSidenav.prototype.onClose;\n/**\n * Event emitted when the sidenav alignment changes.\n * @type {?}\n */\nMdSidenav.prototype.onAlignChanged;\n/** @type {?} */\nMdSidenav.prototype._elementRef;\n/** @type {?} */\nMdSidenav.prototype._focusTrapFactory;\n/** @type {?} */\nMdSidenav.prototype._doc;\n}\n\n/**\n * <md-sidenav-container> component.\n * \n * This is the parent component to one or two <md-sidenav>s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nexport class MdSidenavContainer implements AfterContentInit {\n   _sidenavs: QueryList<MdSidenav>;\n/**\n * The sidenav child with the `start` alignment.\n * @return {?}\n */\nget start() { return this._start; }\n/**\n * The sidenav child with the `end` alignment.\n * @return {?}\n */\nget end() { return this._end; }\n/**\n * Event emitted when the sidenav backdrop is clicked.\n */\nbackdropClick = new EventEmitter<void>();\n/**\n * The sidenav at the start/end alignment, independent of direction.\n */\nprivate _start: MdSidenav | null;\nprivate _end: MdSidenav | null;\n/**\n * The sidenav at the left/right. When direction changes, these will change as well.\n * They're used as aliases for the above to set the left/right style properly.\n * In LTR, _left == _start and _right == _end.\n * In RTL, _left == _end and _right == _start.\n */\nprivate _left: MdSidenav | null;\nprivate _right: MdSidenav | null;\n/**\n * Inline styles to be applied to the container.\n */\n_styles: { marginLeft: string; marginRight: string; transform: string; };\n/**\n * @param {?} _dir\n * @param {?} _element\n * @param {?} _renderer\n * @param {?} _ngZone\n * @param {?} _changeDetectorRef\n */\nconstructor(\nprivate _dir: Directionality,\nprivate _element: ElementRef,\nprivate _renderer: Renderer2,\nprivate _ngZone: NgZone,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n    // If a `Dir` directive exists up the tree, listen direction changes and update the left/right\n    // properties to point to the proper start/end.\n    if (_dir != null) {\n      _dir.change.subscribe(() => this._validateDrawers());\n    }\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    startWith.call(this._sidenavs.changes, null).subscribe(() => {\n      this._validateDrawers();\n      this._sidenavs.forEach((sidenav: MdSidenav) => {\n        this._watchSidenavToggle(sidenav);\n        this._watchSidenavAlign(sidenav);\n      });\n    });\n  }\n/**\n * Calls `open` of both start and end sidenavs\n * @return {?}\n */\nopen(): void {\n    this._sidenavs.forEach(sidenav => sidenav.open());\n  }\n/**\n * Calls `close` of both start and end sidenavs\n * @return {?}\n */\nclose(): void {\n    this._sidenavs.forEach(sidenav => sidenav.close());\n  }\n/**\n * Subscribes to sidenav events in order to set a class on the main container element when the\n * sidenav is open and the backdrop is visible. This ensures any overflow on the container element\n * is properly hidden.\n * @param {?} sidenav\n * @return {?}\n */\nprivate _watchSidenavToggle(sidenav: MdSidenav): void {\n    takeUntil.call(sidenav._animationStarted, this._sidenavs.changes).subscribe(() => {\n      // Set the transition class on the container so that the animations occur. This should not\n      // be set initially because animations should only be triggered via a change in state.\n      this._renderer.addClass(this._element.nativeElement, 'mat-sidenav-transition');\n      this._updateStyles();\n      this._changeDetectorRef.markForCheck();\n    });\n\n    if (sidenav.mode !== 'side') {\n      takeUntil.call(merge(sidenav.onOpen, sidenav.onClose), this._sidenavs.changes).subscribe(() =>\n          this._setContainerClass(sidenav.opened));\n    }\n  }\n/**\n * Subscribes to sidenav onAlignChanged event in order to re-validate drawers when the align\n * changes.\n * @param {?} sidenav\n * @return {?}\n */\nprivate _watchSidenavAlign(sidenav: MdSidenav): void {\n    if (!sidenav) {\n      return;\n    }\n    // NOTE: We need to wait for the microtask queue to be empty before validating,\n    // since both drawers may be swapping sides at the same time.\n    takeUntil.call(sidenav.onAlignChanged, this._sidenavs.changes).subscribe(() =>\n        first.call(this._ngZone.onMicrotaskEmpty).subscribe(() => this._validateDrawers()));\n  }\n/**\n * Toggles the 'mat-sidenav-opened' class on the main 'md-sidenav-container' element.\n * @param {?} isAdd\n * @return {?}\n */\nprivate _setContainerClass(isAdd: boolean): void {\n    if (isAdd) {\n      this._renderer.addClass(this._element.nativeElement, 'mat-sidenav-opened');\n    } else {\n      this._renderer.removeClass(this._element.nativeElement, 'mat-sidenav-opened');\n    }\n  }\n/**\n * Validate the state of the sidenav children components.\n * @return {?}\n */\nprivate _validateDrawers() {\n    this._start = this._end = null;\n\n    // Ensure that we have at most one start and one end sidenav.\n    this._sidenavs.forEach(sidenav => {\n      if (sidenav.align == 'end') {\n        if (this._end != null) {\n          throwMdDuplicatedSidenavError('end');\n        }\n        this._end = sidenav;\n      } else {\n        if (this._start != null) {\n          throwMdDuplicatedSidenavError('start');\n        }\n        this._start = sidenav;\n      }\n    });\n\n    this._right = this._left = null;\n\n    // Detect if we're LTR or RTL.\n    if (this._dir == null || this._dir.value == 'ltr') {\n      this._left = this._start;\n      this._right = this._end;\n    } else {\n      this._left = this._end;\n      this._right = this._start;\n    }\n  }\n/**\n * @return {?}\n */\n_onBackdropClicked() {\n    this.backdropClick.emit();\n    this._closeModalSidenav();\n  }\n/**\n * @return {?}\n */\n_closeModalSidenav() {\n    // Close all open sidenav's where closing is not disabled and the mode is not `side`.\n    [this._start, this._end]\n      .filter(sidenav => sidenav && !sidenav.disableClose && sidenav.mode !== 'side')\n      .forEach(sidenav => /** @type {?} */(( sidenav)).close());\n  }\n/**\n * @return {?}\n */\n_isShowingBackdrop(): boolean {\n    return (this._isSidenavOpen(this._start) && /** @type {?} */(( this._start)).mode != 'side')\n        || (this._isSidenavOpen(this._end) && /** @type {?} */(( this._end)).mode != 'side');\n  }\n/**\n * @param {?} side\n * @return {?}\n */\nprivate _isSidenavOpen(side: MdSidenav | null): boolean {\n    return side != null && side.opened;\n  }\n/**\n * Return the width of the sidenav, if it's in the proper mode and opened.\n * This may relayout the view, so do not call this often.\n * @param {?} sidenav\n * @param {?} mode\n * @return {?}\n */\nprivate _getSidenavEffectiveWidth(sidenav: MdSidenav, mode: string): number {\n    return (this._isSidenavOpen(sidenav) && sidenav.mode == mode) ? sidenav._width : 0;\n  }\n/**\n * Recalculates and updates the inline styles. Note that this\n * should be used sparingly, because it causes a reflow.\n * @return {?}\n */\nprivate _updateStyles() {\n    const /** @type {?} */ marginLeft = this._left ? this._getSidenavEffectiveWidth(this._left, 'side') : 0;\n    const /** @type {?} */ marginRight = this._right ? this._getSidenavEffectiveWidth(this._right, 'side') : 0;\n    const /** @type {?} */ leftWidth = this._left ? this._getSidenavEffectiveWidth(this._left, 'push') : 0;\n    const /** @type {?} */ rightWidth = this._right ? this._getSidenavEffectiveWidth(this._right, 'push') : 0;\n\n    this._styles = {\n      marginLeft: `${marginLeft}px`,\n      marginRight: `${marginRight}px`,\n      transform: `translate3d(${leftWidth - rightWidth}px, 0, 0)`\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-sidenav-container, mat-sidenav-container',\n  templateUrl: 'sidenav-container.html',\n  styleUrls: [\n    'sidenav.css',\n    'sidenav-transitions.css',\n  ],\n  host: {\n    'class': 'mat-sidenav-container',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Directionality, decorators: [{ type: Optional }, ]},\n{type: ElementRef, },\n{type: Renderer2, },\n{type: NgZone, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_sidenavs': [{ type: ContentChildren, args: [MdSidenav, ] },],\n'backdropClick': [{ type: Output },],\n};\n}\n\nfunction MdSidenavContainer_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSidenavContainer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSidenavContainer.ctorParameters;\n/** @type {?} */\nMdSidenavContainer.propDecorators;\n/** @type {?} */\nMdSidenavContainer.prototype._sidenavs;\n/**\n * Event emitted when the sidenav backdrop is clicked.\n * @type {?}\n */\nMdSidenavContainer.prototype.backdropClick;\n/**\n * The sidenav at the start/end alignment, independent of direction.\n * @type {?}\n */\nMdSidenavContainer.prototype._start;\n/** @type {?} */\nMdSidenavContainer.prototype._end;\n/**\n * The sidenav at the left/right. When direction changes, these will change as well.\n * They're used as aliases for the above to set the left/right style properly.\n * In LTR, _left == _start and _right == _end.\n * In RTL, _left == _end and _right == _start.\n * @type {?}\n */\nMdSidenavContainer.prototype._left;\n/** @type {?} */\nMdSidenavContainer.prototype._right;\n/**\n * Inline styles to be applied to the container.\n * @type {?}\n */\nMdSidenavContainer.prototype._styles;\n/** @type {?} */\nMdSidenavContainer.prototype._dir;\n/** @type {?} */\nMdSidenavContainer.prototype._element;\n/** @type {?} */\nMdSidenavContainer.prototype._renderer;\n/** @type {?} */\nMdSidenavContainer.prototype._ngZone;\n/** @type {?} */\nMdSidenavContainer.prototype._changeDetectorRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}