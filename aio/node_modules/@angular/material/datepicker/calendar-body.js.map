{"version":3,"sources":["../../../../src/lib/datepicker/calendar-body.ts"],"names":[],"mappings":"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","file":"calendar-body.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * \\@docs-private\n */\nexport class MdCalendarCell {\n/**\n * @param {?} value\n * @param {?} displayValue\n * @param {?} ariaLabel\n * @param {?} enabled\n */\nconstructor(public value: number,\npublic displayValue: string,\npublic ariaLabel: string,\npublic enabled: boolean) {}\n}\n\nfunction MdCalendarCell_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCalendarCell.prototype.value;\n/** @type {?} */\nMdCalendarCell.prototype.displayValue;\n/** @type {?} */\nMdCalendarCell.prototype.ariaLabel;\n/** @type {?} */\nMdCalendarCell.prototype.enabled;\n}\n\n/**\n * An internal component used to display calendar data in a table.\n * \\@docs-private\n */\nexport class MdCalendarBody {\n/**\n * The label for the table. (e.g. \"Jan 2017\").\n */\nlabel: string;\n/**\n * The cells to display in the table.\n */\nrows: MdCalendarCell[][];\n/**\n * The value in the table that corresponds to today.\n */\ntodayValue: number;\n/**\n * The value in the table that is currently selected.\n */\nselectedValue: number;\n/**\n * The minimum number of free cells needed to fit the label in the first row.\n */\nlabelMinRequiredCells: number;\n/**\n * The number of columns in the table.\n */\nnumCols = 7;\n/**\n * Whether to allow selection of disabled cells.\n */\nallowDisabledSelection = false;\n/**\n * The cell number of the active cell in the table.\n */\nactiveCell = 0;\n/**\n * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n * maintained even as the table resizes.\n */\ncellAspectRatio = 1;\n/**\n * Emits when a new value is selected.\n */\nselectedValueChange = new EventEmitter<number>();\n/**\n * @param {?} cell\n * @return {?}\n */\n_cellClicked(cell: MdCalendarCell): void {\n    if (!this.allowDisabledSelection && !cell.enabled) {\n      return;\n    }\n    this.selectedValueChange.emit(cell.value);\n  }\n/**\n * The number of blank cells to put at the beginning for the first row.\n * @return {?}\n */\nget _firstRowOffset(): number {\n    return this.rows && this.rows.length && this.rows[0].length ?\n        this.numCols - this.rows[0].length : 0;\n  }\n/**\n * @param {?} rowIndex\n * @param {?} colIndex\n * @return {?}\n */\n_isActiveCell(rowIndex: number, colIndex: number): boolean {\n    let /** @type {?} */ cellNumber = rowIndex * this.numCols + colIndex;\n\n    // Account for the fact that the first row may not have as many cells.\n    if (rowIndex) {\n      cellNumber -= this._firstRowOffset;\n    }\n\n    return cellNumber == this.activeCell;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: '[md-calendar-body]',\n  templateUrl: 'calendar-body.html',\n  styleUrls: ['calendar-body.css'],\n  host: {\n    'class': 'mat-calendar-body',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'label': [{ type: Input },],\n'rows': [{ type: Input },],\n'todayValue': [{ type: Input },],\n'selectedValue': [{ type: Input },],\n'labelMinRequiredCells': [{ type: Input },],\n'numCols': [{ type: Input },],\n'allowDisabledSelection': [{ type: Input },],\n'activeCell': [{ type: Input },],\n'cellAspectRatio': [{ type: Input },],\n'selectedValueChange': [{ type: Output },],\n};\n}\n\nfunction MdCalendarBody_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCalendarBody.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCalendarBody.ctorParameters;\n/** @type {?} */\nMdCalendarBody.propDecorators;\n/**\n * The label for the table. (e.g. \"Jan 2017\").\n * @type {?}\n */\nMdCalendarBody.prototype.label;\n/**\n * The cells to display in the table.\n * @type {?}\n */\nMdCalendarBody.prototype.rows;\n/**\n * The value in the table that corresponds to today.\n * @type {?}\n */\nMdCalendarBody.prototype.todayValue;\n/**\n * The value in the table that is currently selected.\n * @type {?}\n */\nMdCalendarBody.prototype.selectedValue;\n/**\n * The minimum number of free cells needed to fit the label in the first row.\n * @type {?}\n */\nMdCalendarBody.prototype.labelMinRequiredCells;\n/**\n * The number of columns in the table.\n * @type {?}\n */\nMdCalendarBody.prototype.numCols;\n/**\n * Whether to allow selection of disabled cells.\n * @type {?}\n */\nMdCalendarBody.prototype.allowDisabledSelection;\n/**\n * The cell number of the active cell in the table.\n * @type {?}\n */\nMdCalendarBody.prototype.activeCell;\n/**\n * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n * maintained even as the table resizes.\n * @type {?}\n */\nMdCalendarBody.prototype.cellAspectRatio;\n/**\n * Emits when a new value is selected.\n * @type {?}\n */\nMdCalendarBody.prototype.selectedValueChange;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}