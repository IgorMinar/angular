{"version":3,"sources":["../../../../src/lib/datepicker/datepicker-toggle.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OADO,EAEL,uBAAW,EACX,SAAO,EACP,KAAK,EACL,iBAAW,EAEX,iBAAK,GACN,MAAM,eAAe,CAAA;AAEtB,OADO,EAAA,gBAAE,EAAgB,MAAA,mBAAA,CAAA;AAEzB,OADO,EAAA,qBAAE,EAAqB,MAAA,uBAAA,CAAA;AAG9B;IAqBA;;;OAGG;IACH,4BAPqB,KAAO,EAAkB,iBAAmB;QAA5C,UAAA,GAAA,KAAA,CAAO;QAQxB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,cAAM,OAAA,iBAAiB,CAAC,YAAY,EAAE,EAAhC,CAAgC,CAAC,CAAC;IACtF,CAAC;IAjBH,sBAAG,wCAAA;QAJH;;;WAGG;aACH;YACI,MAAM,CAAC,IAAA,CAAK,SAAC,KAAa,SAAA,GAAY,IAAA,CAAK,UAAC,CAAU,QAAC,GAAU,IAAA,CAAK,SAAC,CAAS;QAClF,CAAC;QACH;;;WAGG;aACH,UAJG,KAAA;YAKC,IAAI,CAJC,SAAC,GAAW,qBAAA,CAAsB,KAAC,CAAK,CAAC;QAKhD,CAAC;;;OAPA;IAgBH;;OAEG;IACH,wCATG,GASH;QACI,IAAI,CATC,YAAC,CAAY,WAAC,EAAW,CAAE;IAUlC,CAAC;IACH;;;OAGG;IACH,kCAZG,GAYH,UAZG,KAAA;QAaC,EAAE,CAAC,CAAC,IAZC,CAAI,UAAC,IAAa,CAAA,IAAE,CAAI,QAAC,CAAQ,CAAC,CAAA;YAarC,IAAI,CAZC,UAAC,CAAU,IAAC,EAAI,CAAE;YAavB,KAAK,CAZC,eAAC,EAAe,CAAE;QAa1B,CAAC;IACH,CAAC;IAwBH,yBAAC;AAAD,CAnEA,AAmEC;;AAnCM,6BAAA,GAAoC;IAa3C,EAZE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAavB,QAAQ,EAZE,MAAA,CAAO,EAAC;gBAalB,QAAQ,EAZE,6CAAA;gBAaV,WAAW,EAZE,wBAAA;gBAab,IAAI,EAZE;oBAaJ,OAAO,EAZE,uBAAA;iBAaV;gBACD,aAAa,EAZE,iBAAA,CAAkB,IAAC;gBAClC,eAAA,EAAiB,uBAAA,CAAwB,MAAC;aAa3C,EAZC,EAAG;CAaJ,CAZC;AAaF;;GAEG;AAbF,iCAAA,GAAA,cAAA,OAAA;IAeD,EAAC,IAAI,EAAE,gBAAgB,GAAG;IAC1B,EAAC,IAAI,EAAE,iBAAiB,GAAG;CAC1B,EAjBA,CAiBA,CAAC;AAbK,iCAAA,GAAyD;IAehE,YAAY,EAdE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,KAAE,EAAK,EAAG,EAAE;IAehD,UAAU,EAdE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAe5B,CAdC;AAiBF;IACA,gBAAgB;IAChB,kBAAkB,CAAC,UAAU,CAAC;IAC9B;;;OAGG;IACH,kBAAkB,CAAC,cAAc,CAAC;IAClC,gBAAgB;IAChB,kBAAkB,CAAC,cAAc,CAAC;IAClC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,YAAY,CAAC;IAC1C;;;OAGG;IACH,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC;IACxC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC;IACvC,gBAAgB;IAChB,kBAAkB,CAAC,SAAS,CAAC,KAAK,CAAC;AACnC,CAAC","file":"datepicker-toggle.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n  OnDestroy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {MdDatepicker} from './datepicker';\nimport {MdDatepickerIntl} from './datepicker-intl';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Subscription} from 'rxjs/Subscription';\nexport class MdDatepickerToggle<D> implements OnDestroy {\nprivate _intlChanges: Subscription;\n/**\n * Datepicker instance that the button will toggle.\n */\ndatepicker: MdDatepicker<D>;\n/**\n * Whether the toggle button is disabled.\n * @return {?}\n */\nget disabled() {\n    return this._disabled === undefined ? this.datepicker.disabled : this._disabled;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\nprivate _disabled: boolean;\n/**\n * @param {?} _intl\n * @param {?} changeDetectorRef\n */\nconstructor(public _intl: MdDatepickerIntl, changeDetectorRef: ChangeDetectorRef) {\n    this._intlChanges = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._intlChanges.unsubscribe();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_open(event: Event): void {\n    if (this.datepicker && !this.disabled) {\n      this.datepicker.open();\n      event.stopPropagation();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-datepicker-toggle, mat-datepicker-toggle',\n  templateUrl: 'datepicker-toggle.html',\n  host: {\n    'class': 'mat-datepicker-toggle',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdDatepickerIntl, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'datepicker': [{ type: Input, args: ['for', ] },],\n'disabled': [{ type: Input },],\n};\n}\n\nfunction MdDatepickerToggle_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDatepickerToggle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDatepickerToggle.ctorParameters;\n/** @type {?} */\nMdDatepickerToggle.propDecorators;\n/** @type {?} */\nMdDatepickerToggle.prototype._intlChanges;\n/**\n * Datepicker instance that the button will toggle.\n * @type {?}\n */\nMdDatepickerToggle.prototype.datepicker;\n/** @type {?} */\nMdDatepickerToggle.prototype._disabled;\n/** @type {?} */\nMdDatepickerToggle.prototype._intl;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}