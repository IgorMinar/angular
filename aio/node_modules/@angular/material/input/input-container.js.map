{"version":3,"sources":["../../../../src/lib/input/input-container.ts"],"names":[],"mappings":"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","file":"input-container.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  QueryList,\n  Renderer2,\n  Self,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {coerceBooleanProperty, Platform} from '../core';\nimport {FormControl, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {getSupportedInputTypes} from '../core/platform/features';\nimport {\n  getMdInputContainerDuplicatedHintError,\n  getMdInputContainerMissingMdInputError,\n  getMdInputContainerPlaceholderConflictError,\n  getMdInputContainerUnsupportedTypeError\n} from './input-container-errors';\nimport {\n  FloatPlaceholderType,\n  MD_PLACEHOLDER_GLOBAL_OPTIONS,\n  PlaceholderOptions\n} from '../core/placeholder/placeholder-options';\nimport {\n  defaultErrorStateMatcher,\n  ErrorOptions,\n  ErrorStateMatcher,\n  MD_ERROR_GLOBAL_OPTIONS\n} from '../core/error/error-options';\nimport {Subject} from 'rxjs/Subject';\n\n// Invalid input type. Using one of these will throw an MdInputContainerUnsupportedTypeError.\nconst /** @type {?} */ MD_INPUT_INVALID_TYPES = [\n  'button',\n  'checkbox',\n  'color',\n  'file',\n  'hidden',\n  'image',\n  'radio',\n  'range',\n  'reset',\n  'submit'\n];\n\nlet /** @type {?} */ nextUniqueId = 0;\n/**\n * The placeholder directive. The content can declare this to implement more\n * complex placeholders.\n */\nexport class MdPlaceholder {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-placeholder, mat-placeholder'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdPlaceholder_tsickle_Closure_declarations() {\n/** @type {?} */\nMdPlaceholder.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdPlaceholder.ctorParameters;\n}\n\n/**\n * Hint text to be shown underneath the input.\n */\nexport class MdHint {\n/**\n * Whether to align the hint label at the start or end of the line.\n */\nalign: 'start' | 'end' = 'start';\n/**\n * Unique ID for the hint. Used for the aria-describedby on the input.\n */\nid: string = `md-input-hint-${nextUniqueId++}`;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-hint, mat-hint',\n  host: {\n    'class': 'mat-hint',\n    '[class.mat-right]': 'align == \"end\"',\n    '[attr.id]': 'id',\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'align': [{ type: Input },],\n'id': [{ type: Input },],\n};\n}\n\nfunction MdHint_tsickle_Closure_declarations() {\n/** @type {?} */\nMdHint.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdHint.ctorParameters;\n/** @type {?} */\nMdHint.propDecorators;\n/**\n * Whether to align the hint label at the start or end of the line.\n * @type {?}\n */\nMdHint.prototype.align;\n/**\n * Unique ID for the hint. Used for the aria-describedby on the input.\n * @type {?}\n */\nMdHint.prototype.id;\n}\n\n/**\n * Single error message to be shown underneath the input.\n */\nexport class MdErrorDirective { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-error, mat-error',\n  host: {\n    'class': 'mat-input-error'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdErrorDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMdErrorDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdErrorDirective.ctorParameters;\n}\n\n/**\n * Prefix to be placed the the front of the input.\n */\nexport class MdPrefix {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mdPrefix], [matPrefix]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdPrefix_tsickle_Closure_declarations() {\n/** @type {?} */\nMdPrefix.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdPrefix.ctorParameters;\n}\n\n/**\n * Suffix to be placed at the end of the input.\n */\nexport class MdSuffix {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mdSuffix], [matSuffix]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdSuffix_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSuffix.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSuffix.ctorParameters;\n}\n\n/**\n * Marker for the input element that `MdInputContainer` is wrapping.\n */\nexport class MdInputDirective implements OnChanges, OnDestroy, DoCheck {\n/**\n * Variables used as cache for getters and setters.\n */\nprivate _type = 'text';\nprivate _placeholder: string = '';\nprivate _disabled = false;\nprivate _required = false;\nprivate _readonly = false;\nprivate _id: string;\nprivate _uid = `md-input-${nextUniqueId++}`;\nprivate _errorOptions: ErrorOptions;\nprivate _previousNativeValue = this.value;\n/**\n * Whether the input is in an error state.\n */\n_isErrorState = false;\n/**\n * Whether the element is focused or not.\n */\nfocused = false;\n/**\n * Sets the aria-describedby attribute on the input for improved a11y.\n */\nariaDescribedby: string;\n/**\n * Stream that emits whenever the state of the input changes. This allows for other components\n * (mostly `md-input-container`) that depend on the properties of `mdInput` to update their view.\n */\n_stateChanges = new Subject<void>();\n/**\n * Whether the element is disabled.\n * @return {?}\n */\nget disabled() { return this._ngControl ? this._ngControl.disabled : this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n/**\n * Unique id of the element.\n * @return {?}\n */\nget id() { return this._id; }\n/**\n * @param {?} value\n * @return {?}\n */\nset id(value: string) { this._id = value || this._uid; }\n/**\n * Placeholder attribute of the element.\n */\nplaceholder: string = '';\n/**\n * Whether the element is required.\n * @return {?}\n */\nget required() { return this._required; }\n/**\n * @param {?} value\n * @return {?}\n */\nset required(value: any) { this._required = coerceBooleanProperty(value); }\n/**\n * Input type of the element.\n * @return {?}\n */\nget type() { return this._type; }\n/**\n * @param {?} value\n * @return {?}\n */\nset type(value: string) {\n    this._type = value || 'text';\n    this._validateType();\n\n    // When using Angular inputs, developers are no longer able to set the properties on the native\n    // input element. To ensure that bindings for `type` work, we need to sync the setter\n    // with the native property. Textarea elements don't support the type property or attribute.\n    if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n      this._renderer.setProperty(this._elementRef.nativeElement, 'type', this._type);\n    }\n  }\n/**\n * Whether the element is readonly.\n * @return {?}\n */\nget readonly() { return this._readonly; }\n/**\n * @param {?} value\n * @return {?}\n */\nset readonly(value: any) { this._readonly = coerceBooleanProperty(value); }\n/**\n * A function used to control when error messages are shown.\n */\nerrorStateMatcher: ErrorStateMatcher;\n/**\n * The input element's value.\n * @return {?}\n */\nget value() { return this._elementRef.nativeElement.value; }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: string) {\n    if (value !== this.value) {\n      this._elementRef.nativeElement.value = value;\n      this._stateChanges.next();\n    }\n  }\n/**\n * Whether the input is empty.\n * @return {?}\n */\nget empty() {\n    return !this._isNeverEmpty() &&\n        (this.value == null || this.value === '') &&\n        // Check if the input contains bad input. If so, we know that it only appears empty because\n        // the value failed to parse. From the user's perspective it is not empty.\n        // TODO(mmalerba): Add e2e test for bad input case.\n        !this._isBadInput();\n  }\nprivate _neverEmptyInputTypes = [\n    'date',\n    'datetime',\n    'datetime-local',\n    'month',\n    'time',\n    'week'\n  ].filter(t => getSupportedInputTypes().has(t));\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} _platform\n * @param {?} _ngControl\n * @param {?} _parentForm\n * @param {?} _parentFormGroup\n * @param {?} errorOptions\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer2,\nprivate _platform: Platform,\npublic _ngControl: NgControl,\nprivate _parentForm: NgForm,\nprivate _parentFormGroup: FormGroupDirective,\n                errorOptions: ErrorOptions) {\n\n    // Force setter to be called in case id was not specified.\n    this.id = this.id;\n    this._errorOptions = errorOptions ? errorOptions : {};\n    this.errorStateMatcher = this._errorOptions.errorStateMatcher || defaultErrorStateMatcher;\n\n    // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n    // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n    // exists on iOS, we only bother to install the listener on iOS.\n    if (_platform.IOS) {\n      _renderer.listen(_elementRef.nativeElement, 'keyup', (event: Event) => {\n        let el = event.target as HTMLInputElement;\n        if (!el.value && !el.selectionStart && !el.selectionEnd) {\n          // Note: Just setting `0, 0` doesn't fix the issue. Setting `1, 1` fixes it for the first\n          // time that you type text and then hold delete. Toggling to `1, 1` and then back to\n          // `0, 0` seems to completely fix it.\n          el.setSelectionRange(1, 1);\n          el.setSelectionRange(0, 0);\n        }\n      });\n    }\n  }\n/**\n * @return {?}\n */\nngOnChanges() {\n    this._stateChanges.next();\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._stateChanges.complete();\n  }\n/**\n * @return {?}\n */\nngDoCheck() {\n    if (this._ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this._updateErrorState();\n    } else {\n      // When the input isn't used together with `@angular/forms`, we need to check manually for\n      // changes to the native `value` property in order to update the floating label.\n      this._dirtyCheckNativeValue();\n    }\n  }\n/**\n * @return {?}\n */\n_onFocus() {\n    if (!this._readonly) {\n      this.focused = true;\n    }\n  }\n/**\n * Focuses the input element.\n * @return {?}\n */\nfocus() {\n    this._elementRef.nativeElement.focus();\n  }\n/**\n * Callback for the cases where the focused state of the input changes.\n * @param {?} isFocused\n * @return {?}\n */\n_focusChanged(isFocused: boolean) {\n    if (isFocused !== this.focused) {\n      this.focused = isFocused;\n      this._stateChanges.next();\n    }\n  }\n/**\n * @return {?}\n */\n_onInput() {\n    // This is a noop function and is used to let Angular know whenever the value changes.\n    // Angular will run a new change detection each time the `input` event has been dispatched.\n    // It's necessary that Angular recognizes the value change, because when floatingLabel\n    // is set to false and Angular forms aren't used, the placeholder won't recognize the\n    // value changes and will not disappear.\n    // Listening to the input event wouldn't be necessary when the input is using the\n    // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n  }\n/**\n * Re-evaluates the error state. This is only relevant with \\@angular/forms.\n * @return {?}\n */\nprivate _updateErrorState() {\n    const /** @type {?} */ oldState = this._isErrorState;\n    const /** @type {?} */ control = this._ngControl;\n    const /** @type {?} */ parent = this._parentFormGroup || this._parentForm;\n    const /** @type {?} */ newState = control && this.errorStateMatcher( /** @type {?} */((control.control as FormControl)), parent);\n\n    if (newState !== oldState) {\n      this._isErrorState = newState;\n      this._stateChanges.next();\n    }\n  }\n/**\n * Does some manual dirty checking on the native input `value` property.\n * @return {?}\n */\nprivate _dirtyCheckNativeValue() {\n    const /** @type {?} */ newValue = this.value;\n\n    if (this._previousNativeValue !== newValue) {\n      this._previousNativeValue = newValue;\n      this._stateChanges.next();\n    }\n  }\n/**\n * Make sure the input is a supported type.\n * @return {?}\n */\nprivate _validateType() {\n    if (MD_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n      throw getMdInputContainerUnsupportedTypeError(this._type);\n    }\n  }\n/**\n * Checks whether the input type isn't one of the types that are never empty.\n * @return {?}\n */\nprivate _isNeverEmpty() {\n    return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n  }\n/**\n * Checks whether the input is invalid based on the native validation.\n * @return {?}\n */\nprivate _isBadInput() {\n    // The `validity` property won't be present on platform-server.\n    let /** @type {?} */ validity = ( /** @type {?} */((this._elementRef.nativeElement as HTMLInputElement))).validity;\n    return validity && validity.badInput;\n  }\n/**\n * Determines if the component host is a textarea. If not recognizable it returns false.\n * @return {?}\n */\nprivate _isTextarea() {\n    let /** @type {?} */ nativeElement = this._elementRef.nativeElement;\n\n    // In Universal, we don't have access to `nodeName`, but the same can be achieved with `name`.\n    // Note that this shouldn't be necessary once Angular switches to an API that resembles the\n    // DOM closer.\n    let /** @type {?} */ nodeName = this._platform.isBrowser ? nativeElement.nodeName : nativeElement.name;\n    return nodeName ? nodeName.toLowerCase() === 'textarea' : false;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `input[mdInput], textarea[mdInput], input[matInput], textarea[matInput]`,\n  host: {\n    'class': 'mat-input-element',\n    // Native input properties that are overwritten by Angular inputs need to be synced with\n    // the native input element. Otherwise property bindings for those don't work.\n    '[id]': 'id',\n    '[placeholder]': 'placeholder',\n    '[disabled]': 'disabled',\n    '[required]': 'required',\n    '[attr.aria-describedby]': 'ariaDescribedby || null',\n    '[attr.aria-invalid]': '_isErrorState',\n    '(blur)': '_focusChanged(false)',\n    '(focus)': '_focusChanged(true)',\n    '(input)': '_onInput()',\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: Platform, },\n{type: NgControl, decorators: [{ type: Optional }, { type: Self }, ]},\n{type: NgForm, decorators: [{ type: Optional }, ]},\n{type: FormGroupDirective, decorators: [{ type: Optional }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_ERROR_GLOBAL_OPTIONS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'disabled': [{ type: Input },],\n'id': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'required': [{ type: Input },],\n'type': [{ type: Input },],\n'readonly': [{ type: Input },],\n'errorStateMatcher': [{ type: Input },],\n};\n}\n\nfunction MdInputDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nMdInputDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdInputDirective.ctorParameters;\n/** @type {?} */\nMdInputDirective.propDecorators;\n/**\n * Variables used as cache for getters and setters.\n * @type {?}\n */\nMdInputDirective.prototype._type;\n/** @type {?} */\nMdInputDirective.prototype._placeholder;\n/** @type {?} */\nMdInputDirective.prototype._disabled;\n/** @type {?} */\nMdInputDirective.prototype._required;\n/** @type {?} */\nMdInputDirective.prototype._readonly;\n/** @type {?} */\nMdInputDirective.prototype._id;\n/** @type {?} */\nMdInputDirective.prototype._uid;\n/** @type {?} */\nMdInputDirective.prototype._errorOptions;\n/** @type {?} */\nMdInputDirective.prototype._previousNativeValue;\n/**\n * Whether the input is in an error state.\n * @type {?}\n */\nMdInputDirective.prototype._isErrorState;\n/**\n * Whether the element is focused or not.\n * @type {?}\n */\nMdInputDirective.prototype.focused;\n/**\n * Sets the aria-describedby attribute on the input for improved a11y.\n * @type {?}\n */\nMdInputDirective.prototype.ariaDescribedby;\n/**\n * Stream that emits whenever the state of the input changes. This allows for other components\n * (mostly `md-input-container`) that depend on the properties of `mdInput` to update their view.\n * @type {?}\n */\nMdInputDirective.prototype._stateChanges;\n/**\n * Placeholder attribute of the element.\n * @type {?}\n */\nMdInputDirective.prototype.placeholder;\n/**\n * A function used to control when error messages are shown.\n * @type {?}\n */\nMdInputDirective.prototype.errorStateMatcher;\n/** @type {?} */\nMdInputDirective.prototype._neverEmptyInputTypes;\n/** @type {?} */\nMdInputDirective.prototype._elementRef;\n/** @type {?} */\nMdInputDirective.prototype._renderer;\n/** @type {?} */\nMdInputDirective.prototype._platform;\n/** @type {?} */\nMdInputDirective.prototype._ngControl;\n/** @type {?} */\nMdInputDirective.prototype._parentForm;\n/** @type {?} */\nMdInputDirective.prototype._parentFormGroup;\n}\n\n/**\n * Container for text inputs that applies Material Design styling and behavior.\n */\nexport class MdInputContainer implements AfterViewInit, AfterContentInit, AfterContentChecked {\nprivate _placeholderOptions: PlaceholderOptions;\n/**\n * Color of the input divider, based on the theme.\n */\ncolor: 'primary' | 'accent' | 'warn' = 'primary';\n/**\n * @deprecated Use `color` instead.\n * @return {?}\n */\nget dividerColor() { return this.color; }\n/**\n * @param {?} value\n * @return {?}\n */\nset dividerColor(value) { this.color = value; }\n/**\n * Whether the required marker should be hidden.\n * @return {?}\n */\nget hideRequiredMarker() { return this._hideRequiredMarker; }\n/**\n * @param {?} value\n * @return {?}\n */\nset hideRequiredMarker(value: any) {\n    this._hideRequiredMarker = coerceBooleanProperty(value);\n  }\nprivate _hideRequiredMarker: boolean;\n/**\n * Whether the floating label should always float or not.\n * @return {?}\n */\nget _shouldAlwaysFloat() { return this._floatPlaceholder === 'always'; }\n/**\n * Whether the placeholder can float or not.\n * @return {?}\n */\nget _canPlaceholderFloat() { return this._floatPlaceholder !== 'never'; }\n/**\n * State of the md-hint and md-error animations.\n */\n_subscriptAnimationState: string = '';\n/**\n * Text for the input hint.\n * @return {?}\n */\nget hintLabel() { return this._hintLabel; }\n/**\n * @param {?} value\n * @return {?}\n */\nset hintLabel(value: string) {\n    this._hintLabel = value;\n    this._processHints();\n  }\nprivate _hintLabel = '';\n\n  // Unique id for the hint label.\n  _hintLabelId: string = `md-input-hint-${nextUniqueId++}`;\n/**\n * Whether the placeholder should always float, never float or float as the user types.\n * @return {?}\n */\nget floatPlaceholder() { return this._floatPlaceholder; }\n/**\n * @param {?} value\n * @return {?}\n */\nset floatPlaceholder(value: FloatPlaceholderType) {\n    if (value !== this._floatPlaceholder) {\n      this._floatPlaceholder = value || this._placeholderOptions.float || 'auto';\n      this._changeDetectorRef.markForCheck();\n    }\n  }\nprivate _floatPlaceholder: FloatPlaceholderType;\n/**\n * Reference to the input's underline element.\n */\nunderlineRef: ElementRef;\n   _mdInputChild: MdInputDirective;\n   _placeholderChild: MdPlaceholder;\n   _errorChildren: QueryList<MdErrorDirective>;\n   _hintChildren: QueryList<MdHint>;\n   _prefixChildren: QueryList<MdPrefix>;\n   _suffixChildren: QueryList<MdSuffix>;\n/**\n * @param {?} _elementRef\n * @param {?} _changeDetectorRef\n * @param {?} placeholderOptions\n */\nconstructor(\npublic _elementRef: ElementRef,\nprivate _changeDetectorRef: ChangeDetectorRef,\n      placeholderOptions: PlaceholderOptions) {\n      this._placeholderOptions = placeholderOptions ? placeholderOptions : {};\n      this.floatPlaceholder = this._placeholderOptions.float || 'auto';\n    }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._validateInputChild();\n    this._processHints();\n    this._validatePlaceholders();\n\n    // Subscribe to changes in the child input state in order to update the container UI.\n    this._mdInputChild._stateChanges.subscribe(() => {\n      this._validatePlaceholders();\n      this._changeDetectorRef.markForCheck();\n    });\n\n    if (this._mdInputChild._ngControl && this._mdInputChild._ngControl.valueChanges) {\n      this._mdInputChild._ngControl.valueChanges.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n\n    // Re-validate when the amount of hints changes.\n    this._hintChildren.changes.subscribe(() => this._processHints());\n  }\n/**\n * @return {?}\n */\nngAfterContentChecked() {\n    this._validateInputChild();\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    // Avoid animations on load.\n    this._subscriptAnimationState = 'enter';\n    this._changeDetectorRef.detectChanges();\n  }\n/**\n * Determines whether a class from the NgControl should be forwarded to the host element.\n * @param {?} prop\n * @return {?}\n */\n_shouldForward(prop: string): boolean {\n    let /** @type {?} */ control = this._mdInputChild ? this._mdInputChild._ngControl : null;\n    return control && ( /** @type {?} */((control as any)))[prop];\n  }\n/**\n * Whether the input has a placeholder.\n * @return {?}\n */\n_hasPlaceholder() {\n    return !!(this._mdInputChild.placeholder || this._placeholderChild);\n  }\n/**\n * Focuses the underlying input.\n * @return {?}\n */\n_focusInput() {\n    this._mdInputChild.focus();\n  }\n/**\n * Determines whether to display hints or errors.\n * @return {?}\n */\n_getDisplayedMessages(): 'error' | 'hint' {\n    let /** @type {?} */ input = this._mdInputChild;\n    return (this._errorChildren.length > 0 && input._isErrorState) ? 'error' : 'hint';\n  }\n/**\n * Ensure that there is only one placeholder (either `input` attribute or child element with the\n * `md-placeholder` attribute.\n * @return {?}\n */\nprivate _validatePlaceholders() {\n    if (this._mdInputChild.placeholder && this._placeholderChild) {\n      throw getMdInputContainerPlaceholderConflictError();\n    }\n  }\n/**\n * Does any extra processing that is required when handling the hints.\n * @return {?}\n */\nprivate _processHints() {\n    this._validateHints();\n    this._syncAriaDescribedby();\n  }\n/**\n * Ensure that there is a maximum of one of each `<md-hint>` alignment specified, with the\n * attribute being considered as `align=\"start\"`.\n * @return {?}\n */\nprivate _validateHints() {\n    if (this._hintChildren) {\n      let /** @type {?} */ startHint: MdHint;\n      let /** @type {?} */ endHint: MdHint;\n      this._hintChildren.forEach((hint: MdHint) => {\n        if (hint.align == 'start') {\n          if (startHint || this.hintLabel) {\n            throw getMdInputContainerDuplicatedHintError('start');\n          }\n          startHint = hint;\n        } else if (hint.align == 'end') {\n          if (endHint) {\n            throw getMdInputContainerDuplicatedHintError('end');\n          }\n          endHint = hint;\n        }\n      });\n    }\n  }\n/**\n * Sets the child input's `aria-describedby` to a space-separated list of the ids\n * of the currently-specified hints, as well as a generated id for the hint label.\n * @return {?}\n */\nprivate _syncAriaDescribedby() {\n    if (this._mdInputChild) {\n      let /** @type {?} */ ids: string[] = [];\n      let /** @type {?} */ startHint = this._hintChildren ?\n          this._hintChildren.find(hint => hint.align === 'start') : null;\n      let /** @type {?} */ endHint = this._hintChildren ?\n          this._hintChildren.find(hint => hint.align === 'end') : null;\n\n      if (startHint) {\n        ids.push(startHint.id);\n      } else if (this._hintLabel) {\n        ids.push(this._hintLabelId);\n      }\n\n      if (endHint) {\n        ids.push(endHint.id);\n      }\n\n      this._mdInputChild.ariaDescribedby = ids.join(' ');\n    }\n  }\n/**\n * Throws an error if the container's input child was removed.\n * @return {?}\n */\nprotected _validateInputChild() {\n    if (!this._mdInputChild) {\n      throw getMdInputContainerMissingMdInputError();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-input-container, mat-input-container',\n  templateUrl: 'input-container.html',\n  styleUrls: ['input-container.css'],\n  animations: [\n    trigger('transitionMessages', [\n      state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n      transition('void => enter', [\n        style({ opacity: 0, transform: 'translateY(-100%)' }),\n        animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n      ])\n    ])\n  ],\n  host: {\n    // Remove align attribute to prevent it from interfering with layout.\n    '[attr.align]': 'null',\n    'class': 'mat-input-container',\n    '[class.mat-input-invalid]': '_mdInputChild._isErrorState',\n    '[class.mat-focused]': '_mdInputChild.focused',\n    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n    '[class.ng-touched]': '_shouldForward(\"touched\")',\n    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n    '[class.ng-valid]': '_shouldForward(\"valid\")',\n    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n    '[class.ng-pending]': '_shouldForward(\"pending\")',\n    '(click)': '_focusInput()',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_PLACEHOLDER_GLOBAL_OPTIONS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'color': [{ type: Input },],\n'dividerColor': [{ type: Input },],\n'hideRequiredMarker': [{ type: Input },],\n'hintLabel': [{ type: Input },],\n'floatPlaceholder': [{ type: Input },],\n'underlineRef': [{ type: ViewChild, args: ['underline', ] },],\n'_mdInputChild': [{ type: ContentChild, args: [MdInputDirective, ] },],\n'_placeholderChild': [{ type: ContentChild, args: [MdPlaceholder, ] },],\n'_errorChildren': [{ type: ContentChildren, args: [MdErrorDirective, ] },],\n'_hintChildren': [{ type: ContentChildren, args: [MdHint, ] },],\n'_prefixChildren': [{ type: ContentChildren, args: [MdPrefix, ] },],\n'_suffixChildren': [{ type: ContentChildren, args: [MdSuffix, ] },],\n};\n}\n\nfunction MdInputContainer_tsickle_Closure_declarations() {\n/** @type {?} */\nMdInputContainer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdInputContainer.ctorParameters;\n/** @type {?} */\nMdInputContainer.propDecorators;\n/** @type {?} */\nMdInputContainer.prototype._placeholderOptions;\n/**\n * Color of the input divider, based on the theme.\n * @type {?}\n */\nMdInputContainer.prototype.color;\n/** @type {?} */\nMdInputContainer.prototype._hideRequiredMarker;\n/**\n * State of the md-hint and md-error animations.\n * @type {?}\n */\nMdInputContainer.prototype._subscriptAnimationState;\n/** @type {?} */\nMdInputContainer.prototype._hintLabel;\n/** @type {?} */\nMdInputContainer.prototype._hintLabelId;\n/** @type {?} */\nMdInputContainer.prototype._floatPlaceholder;\n/**\n * Reference to the input's underline element.\n * @type {?}\n */\nMdInputContainer.prototype.underlineRef;\n/** @type {?} */\nMdInputContainer.prototype._mdInputChild;\n/** @type {?} */\nMdInputContainer.prototype._placeholderChild;\n/** @type {?} */\nMdInputContainer.prototype._errorChildren;\n/** @type {?} */\nMdInputContainer.prototype._hintChildren;\n/** @type {?} */\nMdInputContainer.prototype._prefixChildren;\n/** @type {?} */\nMdInputContainer.prototype._suffixChildren;\n/** @type {?} */\nMdInputContainer.prototype._elementRef;\n/** @type {?} */\nMdInputContainer.prototype._changeDetectorRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}