{"version":3,"sources":["../../../../src/lib/paginator/paginator.ts"],"names":[],"mappings":"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","file":"paginator.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport {MdPaginatorIntl} from './paginator-intl';\nimport {MATERIAL_COMPATIBILITY_MODE} from '../core';\nimport {Subscription} from 'rxjs/Subscription';\n/**\n * The default page size if there is no page size and there are no provided page size options.\n */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nexport class PageEvent {\n/**\n * The current page index.\n */\npageIndex: number;\n/**\n * The current page size\n */\npageSize: number;\n/**\n * The current total number of items being paged\n */\nlength: number;\n}\n\nfunction PageEvent_tsickle_Closure_declarations() {\n/**\n * The current page index.\n * @type {?}\n */\nPageEvent.prototype.pageIndex;\n/**\n * The current page size\n * @type {?}\n */\nPageEvent.prototype.pageSize;\n/**\n * The current total number of items being paged\n * @type {?}\n */\nPageEvent.prototype.length;\n}\n\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nexport class MdPaginator implements OnInit, OnDestroy {\nprivate _initialized: boolean;\nprivate _intlChanges: Subscription;\n/**\n * The zero-based page index of the displayed list of items. Defaulted to 0.\n * @return {?}\n */\nget pageIndex(): number { return this._pageIndex; }\n/**\n * @param {?} pageIndex\n * @return {?}\n */\nset pageIndex(pageIndex: number) {\n    this._pageIndex = pageIndex;\n    this._changeDetectorRef.markForCheck();\n  }\n  _pageIndex: number = 0;\n/**\n * The length of the total number of items that are being paginated. Defaulted to 0.\n * @return {?}\n */\nget length(): number { return this._length; }\n/**\n * @param {?} length\n * @return {?}\n */\nset length(length: number) {\n    this._length = length;\n    this._changeDetectorRef.markForCheck();\n  }\n  _length: number = 0;\n/**\n * Number of items to display on a page. By default set to 50.\n * @return {?}\n */\nget pageSize(): number { return this._pageSize; }\n/**\n * @param {?} pageSize\n * @return {?}\n */\nset pageSize(pageSize: number) {\n    this._pageSize = pageSize;\n    this._updateDisplayedPageSizeOptions();\n  }\nprivate _pageSize: number;\n/**\n * The set of provided page size options to display to the user.\n * @return {?}\n */\nget pageSizeOptions(): number[] { return this._pageSizeOptions; }\n/**\n * @param {?} pageSizeOptions\n * @return {?}\n */\nset pageSizeOptions(pageSizeOptions: number[]) {\n    this._pageSizeOptions = pageSizeOptions;\n    this._updateDisplayedPageSizeOptions();\n  }\nprivate _pageSizeOptions: number[] = [];\n/**\n * Event emitted when the paginator changes the page size or page index.\n */\npage = new EventEmitter<PageEvent>();\n/**\n * Displayed set of page size options. Will be sorted and include current page size.\n */\n_displayedPageSizeOptions: number[];\n/**\n * @param {?} _intl\n * @param {?} _changeDetectorRef\n */\nconstructor(public _intl: MdPaginatorIntl,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n    this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this._initialized = true;\n    this._updateDisplayedPageSizeOptions();\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._intlChanges.unsubscribe();\n  }\n/**\n * Advances to the next page if it exists.\n * @return {?}\n */\nnextPage() {\n    if (!this.hasNextPage()) { return; }\n    this.pageIndex++;\n    this._emitPageEvent();\n  }\n/**\n * Move back to the previous page if it exists.\n * @return {?}\n */\npreviousPage() {\n    if (!this.hasPreviousPage()) { return; }\n    this.pageIndex--;\n    this._emitPageEvent();\n  }\n/**\n * Whether there is a previous page.\n * @return {?}\n */\nhasPreviousPage() {\n    return this.pageIndex >= 1 && this.pageSize != 0;\n  }\n/**\n * Whether there is a next page.\n * @return {?}\n */\nhasNextPage() {\n    const /** @type {?} */ numberOfPages = Math.ceil(this.length / this.pageSize) - 1;\n    return this.pageIndex < numberOfPages && this.pageSize != 0;\n  }\n/**\n * Changes the page size so that the first item displayed on the page will still be\n * displayed using the new page size.\n * \n * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n * switching so that the page size is 5 will set the third page as the current page so\n * that the 10th item will still be displayed.\n * @param {?} pageSize\n * @return {?}\n */\n_changePageSize(pageSize: number) {\n    // Current page needs to be updated to reflect the new page size. Navigate to the page\n    // containing the previous page's first item.\n    const /** @type {?} */ startIndex = this.pageIndex * this.pageSize;\n    this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n\n    this.pageSize = pageSize;\n    this._emitPageEvent();\n  }\n/**\n * Updates the list of page size options to display to the user. Includes making sure that\n * the page size is an option and that the list is sorted.\n * @return {?}\n */\nprivate _updateDisplayedPageSizeOptions() {\n    if (!this._initialized) { return; }\n\n    // If no page size is provided, use the first page size option or the default page size.\n    if (!this.pageSize) {\n      this._pageSize = this.pageSizeOptions.length != 0 ?\n          this.pageSizeOptions[0] :\n          DEFAULT_PAGE_SIZE;\n    }\n\n    this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n    if (this._displayedPageSizeOptions.indexOf(this.pageSize) == -1) {\n      this._displayedPageSizeOptions.push(this.pageSize);\n    }\n\n    // Sort the numbers using a number-specific sort function.\n    this._displayedPageSizeOptions.sort((a, b) => a - b);\n\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Emits an event notifying that a change of the paginator's properties has been triggered.\n * @return {?}\n */\nprivate _emitPageEvent() {\n    this.page.next({\n      pageIndex: this.pageIndex,\n      pageSize: this.pageSize,\n      length: this.length\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-paginator, mat-paginator',\n  templateUrl: 'paginator.html',\n  styleUrls: ['paginator.css'],\n  host: {\n    'class': 'mat-paginator',\n  },\n  providers: [\n    {provide: MATERIAL_COMPATIBILITY_MODE, useValue: false}\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdPaginatorIntl, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'pageIndex': [{ type: Input },],\n'length': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'pageSizeOptions': [{ type: Input },],\n'page': [{ type: Output },],\n};\n}\n\nfunction MdPaginator_tsickle_Closure_declarations() {\n/** @type {?} */\nMdPaginator.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdPaginator.ctorParameters;\n/** @type {?} */\nMdPaginator.propDecorators;\n/** @type {?} */\nMdPaginator.prototype._initialized;\n/** @type {?} */\nMdPaginator.prototype._intlChanges;\n/** @type {?} */\nMdPaginator.prototype._pageIndex;\n/** @type {?} */\nMdPaginator.prototype._length;\n/** @type {?} */\nMdPaginator.prototype._pageSize;\n/** @type {?} */\nMdPaginator.prototype._pageSizeOptions;\n/**\n * Event emitted when the paginator changes the page size or page index.\n * @type {?}\n */\nMdPaginator.prototype.page;\n/**\n * Displayed set of page size options. Will be sorted and include current page size.\n * @type {?}\n */\nMdPaginator.prototype._displayedPageSizeOptions;\n/** @type {?} */\nMdPaginator.prototype._intl;\n/** @type {?} */\nMdPaginator.prototype._changeDetectorRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}