{"version":3,"sources":["../../../../src/lib/button/button.ts"],"names":[],"mappings":"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","file":"button.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ElementRef,\n  forwardRef,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  Self,\n  ViewEncapsulation,\n  Inject,\n} from '@angular/core';\nimport {FocusOriginMonitor, Platform} from '../core';\nimport {mixinDisabled, CanDisable} from '../core/common-behaviors/disabled';\nimport {CanColor, mixinColor} from '../core/common-behaviors/color';\nimport {CanDisableRipple, mixinDisableRipple} from '../core/common-behaviors/disable-ripple';\n/**\n * Default color palette for round buttons (md-fab and md-mini-fab)\n */\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdButtonCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'button[md-button], button[mat-button], a[md-button], a[mat-button]',\n  host: {'class': 'mat-button'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdButtonCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdButtonCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdButtonCssMatStyler.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdRaisedButtonCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'button[md-raised-button], button[mat-raised-button], ' +\n      'a[md-raised-button], a[mat-raised-button]',\n  host: {'class': 'mat-raised-button'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdRaisedButtonCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdRaisedButtonCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdRaisedButtonCssMatStyler.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdIconButtonCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'button[md-icon-button], button[mat-icon-button], a[md-icon-button], a[mat-icon-button]',\n  host: {'class': 'mat-icon-button'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdIconButtonCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdIconButtonCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdIconButtonCssMatStyler.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdFab {\n/**\n * @param {?} button\n * @param {?} anchor\n */\nconstructor(   button: MdButton,\n                 anchor: MdAnchor) {\n    // Set the default color palette for the md-fab components.\n    (button || anchor).color = DEFAULT_ROUND_BUTTON_COLOR;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'button[md-fab], button[mat-fab], a[md-fab], a[mat-fab]',\n  host: {'class': 'mat-fab'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdButton, decorators: [{ type: Self }, { type: Optional }, { type: Inject, args: [forwardRef(() => MdButton), ] }, ]},\n{type: MdAnchor, decorators: [{ type: Self }, { type: Optional }, { type: Inject, args: [forwardRef(() => MdAnchor), ] }, ]},\n];\n}\n\nfunction MdFab_tsickle_Closure_declarations() {\n/** @type {?} */\nMdFab.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdFab.ctorParameters;\n}\n\n/**\n * Directive that targets mini-fab buttons and anchors. It's used to apply the `mat-` class\n * to all mini-fab buttons and also is responsible for setting the default color palette.\n * \\@docs-private\n */\nexport class MdMiniFab {\n/**\n * @param {?} button\n * @param {?} anchor\n */\nconstructor(   button: MdButton,\n                 anchor: MdAnchor) {\n    // Set the default color palette for the md-mini-fab components.\n    (button || anchor).color = DEFAULT_ROUND_BUTTON_COLOR;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'button[md-mini-fab], button[mat-mini-fab], a[md-mini-fab], a[mat-mini-fab]',\n  host: {'class': 'mat-mini-fab'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdButton, decorators: [{ type: Self }, { type: Optional }, { type: Inject, args: [forwardRef(() => MdButton), ] }, ]},\n{type: MdAnchor, decorators: [{ type: Self }, { type: Optional }, { type: Inject, args: [forwardRef(() => MdAnchor), ] }, ]},\n];\n}\n\nfunction MdMiniFab_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMiniFab.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMiniFab.ctorParameters;\n}\n\n/**\n * \\@docs-private\n */\nexport class MdButtonBase {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(public _renderer: Renderer2,\npublic _elementRef: ElementRef) {}\n}\n\nfunction MdButtonBase_tsickle_Closure_declarations() {\n/** @type {?} */\nMdButtonBase.prototype._renderer;\n/** @type {?} */\nMdButtonBase.prototype._elementRef;\n}\n\nexport const /** @type {?} */ _MdButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MdButtonBase)));\n/**\n * Material design button.\n */\nexport class MdButton extends _MdButtonMixinBase\n    implements OnDestroy, CanDisable, CanColor, CanDisableRipple {\n/**\n * Whether the button is round.\n */\n_isRoundButton: boolean = this._hasAttributeWithPrefix('fab', 'mini-fab');\n/**\n * Whether the button is icon button.\n */\n_isIconButton: boolean = this._hasAttributeWithPrefix('icon-button');\n/**\n * @param {?} renderer\n * @param {?} elementRef\n * @param {?} _platform\n * @param {?} _focusOriginMonitor\n */\nconstructor(renderer: Renderer2,\n              elementRef: ElementRef,\nprivate _platform: Platform,\nprivate _focusOriginMonitor: FocusOriginMonitor) {\n    super(renderer, elementRef);\n    this._focusOriginMonitor.monitor(this._elementRef.nativeElement, this._renderer, true);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._focusOriginMonitor.stopMonitoring(this._elementRef.nativeElement);\n  }\n/**\n * Focuses the button.\n * @return {?}\n */\nfocus(): void {\n    this._getHostElement().focus();\n  }\n/**\n * @return {?}\n */\n_getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n/**\n * @return {?}\n */\n_isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n/**\n * Gets whether the button has one of the given attributes\n * with either an 'md-' or 'mat-' prefix.\n * @param {...?} unprefixedAttributeNames\n * @return {?}\n */\n_hasAttributeWithPrefix(...unprefixedAttributeNames: string[]) {\n    // If not on the browser, say that there are none of the attributes present.\n    // Since these only affect how the ripple displays (and ripples only happen on the client),\n    // detecting these attributes isn't necessary when not on the browser.\n    if (!this._platform.isBrowser) {\n      return false;\n    }\n\n    return unprefixedAttributeNames.some(suffix => {\n      const /** @type {?} */ el = this._getHostElement();\n\n      return el.hasAttribute('md-' + suffix) || el.hasAttribute('mat-' + suffix);\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'button[md-button], button[md-raised-button], button[md-icon-button],' +\n            'button[md-fab], button[md-mini-fab],' +\n            'button[mat-button], button[mat-raised-button], button[mat-icon-button],' +\n            'button[mat-fab], button[mat-mini-fab]',\n  host: {\n    '[disabled]': 'disabled || null',\n  },\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  inputs: ['disabled', 'disableRipple', 'color'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: Platform, },\n{type: FocusOriginMonitor, },\n];\n}\n\nfunction MdButton_tsickle_Closure_declarations() {\n/** @type {?} */\nMdButton.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdButton.ctorParameters;\n/**\n * Whether the button is round.\n * @type {?}\n */\nMdButton.prototype._isRoundButton;\n/**\n * Whether the button is icon button.\n * @type {?}\n */\nMdButton.prototype._isIconButton;\n/** @type {?} */\nMdButton.prototype._platform;\n/** @type {?} */\nMdButton.prototype._focusOriginMonitor;\n}\n\n/**\n * Raised Material design button.\n */\nexport class MdAnchor extends MdButton {\n/**\n * @param {?} platform\n * @param {?} focusOriginMonitor\n * @param {?} elementRef\n * @param {?} renderer\n */\nconstructor(\n      platform: Platform,\n      focusOriginMonitor: FocusOriginMonitor,\n      elementRef: ElementRef,\n      renderer: Renderer2) {\n    super(renderer, elementRef, platform, focusOriginMonitor);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_haltDisabledEvents(event: Event) {\n    // A disabled button shouldn't apply any actions\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: `a[md-button], a[md-raised-button], a[md-icon-button], a[md-fab], a[md-mini-fab],\n             a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab], a[mat-mini-fab]`,\n  host: {\n    '[attr.tabindex]': 'disabled ? -1 : 0',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '(click)': '_haltDisabledEvents($event)',\n  },\n  inputs: ['disabled', 'disableRipple', 'color'],\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Platform, },\n{type: FocusOriginMonitor, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\n}\n\nfunction MdAnchor_tsickle_Closure_declarations() {\n/** @type {?} */\nMdAnchor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdAnchor.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}