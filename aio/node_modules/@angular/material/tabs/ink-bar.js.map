{"version":3,"sources":["../../../../src/lib/tabs/ink-bar.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OADO,EAAA,SAAE,EAAU,SAAA,EAAW,UAAA,EAAY,MAAA,EAAO,MAAA,eAAA,CAAA;AAEjD;;;GAGG;AACH;IACA;;;;OAIG;IACH,kBAFY,SAAW,EACX,WAAa,EACb,OAAS;QAFT,cAAA,GAAA,SAAA,CAAW;QACX,gBAAA,GAAA,WAAA,CAAa;QACb,YAAA,GAAA,OAAA,CAAS;IAAO,CAAA;IAI5B;;;;;OAKG;IACH,iCAHG,GAGH,UAHG,OAAA;QAGH,iBAUG;QATC,IAAI,CAHC,IAAC,EAAI,CAAE;QAKZ,EAAE,CAAC,CAAC,OAHO,qBAAA,KAA0B,WAAA,CAAY,CAAC,CAAA;YAIhD,IAAI,CAHC,OAAC,CAAO,iBAAC,CAAiB;gBAI7B,qBAAqB,CAHC,cAAM,OAAA,KAAA,CAAK,UAAC,CAAU,OAAC,CAAO,EAAxB,CAAwB,CAAC,CAAC;YAIxD,CAAC,CAHC,CAAC;QAIL,CAAC;QAHC,IAAA,CAAK,CAAA;YAIL,IAAI,CAHC,UAAC,CAAU,OAAC,CAAO,CAAC;QAI3B,CAAC;IACH,CAAC;IACH;;;OAGG;IACH,uBALG,GAKH;QACI,IAAI,CALC,SAAC,CAAS,QAAC,CAAQ,IAAC,CAAI,WAAC,CAAW,aAAC,EAAc,YAAA,EAAc,SAAA,CAAU,CAAC;IAMnF,CAAC;IACH;;;OAGG;IACH,uBAPG,GAOH;QACI,IAAI,CAPC,SAAC,CAAS,QAAC,CAAQ,IAAC,CAAI,WAAC,CAAW,aAAC,EAAc,YAAA,EAAc,QAAA,CAAS,CAAC;IAQlF,CAAC;IACH;;;;OAIG;IANA,6BAAA,GAOH,UAPG,OAAA;QAQC,IAAM,gBAAgB,CAPhB,IAAA,GAAO,OAAA,GAAU,CAAA,OAAE,CAAO,UAAC,IAAa,CAAA,CAAE,GAAG,IAAA,GAAO,GAAA,CAAI;QAQ9D,IAAM,gBAAgB,CAPhB,KAAA,GAAQ,OAAA,GAAU,CAAA,OAAE,CAAO,WAAC,IAAc,CAAA,CAAE,GAAG,IAAA,GAAO,GAAA,CAAI;QAShE,IAAI,CAPC,SAAC,CAAS,QAAC,CAAQ,IAAC,CAAI,WAAC,CAAW,aAAC,EAAc,MAAA,EAAQ,IAAA,CAAK,CAAC;QAQtE,IAAI,CAPC,SAAC,CAAS,QAAC,CAAQ,IAAC,CAAI,WAAC,CAAW,aAAC,EAAc,OAAA,EAAS,KAAA,CAAM,CAAC;IAQ1E,CAAC;IAiBH,eAAC;AAAD,CArEA,AAqEC;;AAvBM,mBAAA,GAAoC;IAQ3C,EAPE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAQvB,QAAQ,EAPE,yBAAA;gBAQV,IAAI,EAPE;oBAQJ,OAAO,EAPE,aAAA;iBAQV;aACF,EAPC,EAAG;CAQJ,CAPC;AAQF;;GAEG;AARF,uBAAA,GAAA,cAAA,OAAA;IAUD,EAAC,IAAI,EAAE,SAAS,GAAG;IACnB,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,MAAM,GAAG;CACf,EAbA,CAaA,CAAC;AAGF;IACA,gBAAgB;IAChB,QAAQ,CAAC,UAAU,CAAC;IACpB;;;OAGG;IACH,QAAQ,CAAC,cAAc,CAAC;IACxB,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC;IAC7B,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC;IAC/B,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC;AAC3B,CAAC","file":"ink-bar.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, Renderer2, ElementRef, NgZone} from '@angular/core';\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nexport class MdInkBar {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n * @param {?} _ngZone\n */\nconstructor(\nprivate _renderer: Renderer2,\nprivate _elementRef: ElementRef,\nprivate _ngZone: NgZone) {}\n/**\n * Calculates the styles from the provided element in order to align the ink-bar to that element.\n * Shows the ink bar if previously set as hidden.\n * @param {?} element\n * @return {?}\n */\nalignToElement(element: HTMLElement) {\n    this.show();\n\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => this._setStyles(element));\n      });\n    } else {\n      this._setStyles(element);\n    }\n  }\n/**\n * Shows the ink bar.\n * @return {?}\n */\nshow(): void {\n    this._renderer.setStyle(this._elementRef.nativeElement, 'visibility', 'visible');\n  }\n/**\n * Hides the ink bar.\n * @return {?}\n */\nhide(): void {\n    this._renderer.setStyle(this._elementRef.nativeElement, 'visibility', 'hidden');\n  }\n/**\n * Sets the proper styles to the ink bar element.\n * @param {?} element\n * @return {?}\n */\nprivate _setStyles(element: HTMLElement) {\n    const /** @type {?} */ left = element ? (element.offsetLeft || 0) + 'px' : '0';\n    const /** @type {?} */ width = element ? (element.offsetWidth || 0) + 'px' : '0';\n\n    this._renderer.setStyle(this._elementRef.nativeElement, 'left', left);\n    this._renderer.setStyle(this._elementRef.nativeElement, 'width', width);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-ink-bar, mat-ink-bar',\n  host: {\n    'class': 'mat-ink-bar',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: NgZone, },\n];\n}\n\nfunction MdInkBar_tsickle_Closure_declarations() {\n/** @type {?} */\nMdInkBar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdInkBar.ctorParameters;\n/** @type {?} */\nMdInkBar.prototype._renderer;\n/** @type {?} */\nMdInkBar.prototype._elementRef;\n/** @type {?} */\nMdInkBar.prototype._ngZone;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}