{"version":3,"sources":["../../../../src/lib/tabs/tab-group.ts"],"names":[],"mappings":"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","file":"tab-group.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ViewChild,\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  QueryList,\n  ContentChildren,\n  ElementRef,\n  Renderer2,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  AfterViewChecked,\n  AfterContentInit,\n  AfterContentChecked,\n  OnDestroy,\n} from '@angular/core';\nimport {coerceBooleanProperty} from '../core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subscription} from 'rxjs/Subscription';\nimport {MdTab} from './tab';\nimport {map} from '../core/rxjs/index';\nimport {merge} from 'rxjs/observable/merge';\nimport {CanDisableRipple, mixinDisableRipple} from '../core/common-behaviors/disable-ripple';\nimport {CanColor, mixinColor, ThemePalette} from '../core/common-behaviors/color';\n/**\n * Used to generate unique ID's for each tab component\n */\nlet nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nexport class MdTabChangeEvent {\n  index: number;\n  tab: MdTab;\n}\n\nfunction MdTabChangeEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabChangeEvent.prototype.index;\n/** @type {?} */\nMdTabChangeEvent.prototype.tab;\n}\n\n\n/** Possible positions for the tab header. */\nexport type MdTabHeaderPosition = 'above' | 'below';\n/**\n * \\@docs-private\n */\nexport class MdTabGroupBase {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(public _renderer: Renderer2,\npublic _elementRef: ElementRef) {}\n}\n\nfunction MdTabGroupBase_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabGroupBase.prototype._renderer;\n/** @type {?} */\nMdTabGroupBase.prototype._elementRef;\n}\n\nexport const /** @type {?} */ _MdTabGroupMixinBase = mixinColor(mixinDisableRipple(MdTabGroupBase), 'primary');\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://www.google.com/design/spec/components/tabs.html\n */\nexport class MdTabGroup extends _MdTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, AfterViewChecked, OnDestroy, CanColor, CanDisableRipple {\n\n   _tabs: QueryList<MdTab>;\n\n   _tabBodyWrapper: ElementRef;\n/**\n * Whether this component has been initialized.\n */\nprivate _isInitialized: boolean = false;\n/**\n * The tab index that should be selected after the content has been checked.\n */\nprivate _indexToSelect: number | null = 0;\n/**\n * Snapshot of the height of the tab body wrapper before another tab is activated.\n */\nprivate _tabBodyWrapperHeight: number = 0;\n/**\n * Subscription to tabs being added/removed.\n */\nprivate _tabsSubscription: Subscription;\n/**\n * Subscription to changes in the tab labels.\n */\nprivate _tabLabelSubscription: Subscription;\n/**\n * Whether the tab group should grow to the size of the active tab.\n * @return {?}\n */\nget dynamicHeight(): boolean { return this._dynamicHeight; }\n/**\n * @param {?} value\n * @return {?}\n */\nset dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\nprivate _dynamicHeight: boolean = false;\n/**\n * @deprecated\n * @return {?}\n */\nget _dynamicHeightDeprecated(): boolean { return this._dynamicHeight; }\n/**\n * @param {?} value\n * @return {?}\n */\nset _dynamicHeightDeprecated(value: boolean) { this._dynamicHeight = value; }\n/**\n * The index of the active tab.\n * @param {?} value\n * @return {?}\n */\nset selectedIndex(value: number | null) { this._indexToSelect = value; }\n/**\n * @return {?}\n */\nget selectedIndex(): number | null { return this._selectedIndex; }\nprivate _selectedIndex: number | null = null;\n/**\n * Position of the tab header.\n */\nheaderPosition: MdTabHeaderPosition = 'above';\n/**\n * Background color of the tab group.\n * @return {?}\n */\nget backgroundColor(): ThemePalette { return this._backgroundColor; }\n/**\n * @param {?} value\n * @return {?}\n */\nset backgroundColor(value: ThemePalette) {\n    let /** @type {?} */ nativeElement = this._elementRef.nativeElement;\n\n    this._renderer.removeClass(nativeElement, `mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      this._renderer.addClass(nativeElement, `mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\nprivate _backgroundColor: ThemePalette;\n/**\n * Output to enable support for two-way binding on `[(selectedIndex)]`\n * @return {?}\n */\nget selectedIndexChange(): Observable<number> {\n    return map.call(this.selectChange, event => event.index);\n  }\n/**\n * Event emitted when focus has changed within a tab group.\n */\nfocusChange: EventEmitter<MdTabChangeEvent> = new EventEmitter<MdTabChangeEvent>();\n/**\n * Event emitted when the tab selection has changed.\n */\nselectChange: EventEmitter<MdTabChangeEvent> = new EventEmitter<MdTabChangeEvent>(true);\nprivate _groupId: number;\n/**\n * @param {?} _renderer\n * @param {?} elementRef\n * @param {?} _changeDetectorRef\n */\nconstructor(_renderer: Renderer2,\n              elementRef: ElementRef,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n    super(_renderer, elementRef);\n    this._groupId = nextId++;\n  }\n/**\n * After the content is checked, this component knows what tabs have been defined\n * and what the selected index should be. This is where we can know exactly what position\n * each tab should be in according to the new selected index, and additionally we know how\n * a new selected tab should transition in (from the left or right).\n * @return {?}\n */\nngAfterContentChecked(): void {\n    // Clamp the next selected index to the bounds of 0 and the tabs length. Note the `|| 0`, which\n    // ensures that values like NaN can't get through and which would otherwise throw the\n    // component into an infinite loop (since Math.max(NaN, 0) === NaN).\n    let /** @type {?} */ indexToSelect = this._indexToSelect =\n        Math.min(this._tabs.length - 1, Math.max(this._indexToSelect || 0, 0));\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != indexToSelect && this._selectedIndex != null) {\n      this.selectChange.emit(this._createChangeEvent(indexToSelect));\n    }\n\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach((tab: MdTab, index: number) => {\n      tab.position = index - indexToSelect;\n\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._subscribeToTabLabels();\n\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      this._subscribeToTabLabels();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._tabsSubscription) {\n      this._tabsSubscription.unsubscribe();\n    }\n\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n  }\n/**\n * Waits one frame for the view to update, then updates the ink bar\n * Note: This must be run outside of the zone or it will create an infinite change detection loop.\n * @return {?}\n */\nngAfterViewChecked(): void {\n    this._isInitialized = true;\n  }\n/**\n * @param {?} index\n * @return {?}\n */\n_focusChanged(index: number) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nprivate _createChangeEvent(index: number): MdTabChangeEvent {\n    const /** @type {?} */ event = new MdTabChangeEvent;\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n/**\n * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n * on the MdTab component, whereas the data binding is inside the MdTabGroup. In order for the\n * binding to be updated, we need to subscribe to changes in it and trigger change detection\n * manually.\n * @return {?}\n */\nprivate _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._labelChange)).subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n/**\n * Returns a unique id for each tab label element\n * @param {?} i\n * @return {?}\n */\n_getTabLabelId(i: number): string {\n    return `md-tab-label-${this._groupId}-${i}`;\n  }\n/**\n * Returns a unique id for each tab content element\n * @param {?} i\n * @return {?}\n */\n_getTabContentId(i: number): string {\n    return `md-tab-content-${this._groupId}-${i}`;\n  }\n/**\n * Sets the height of the body wrapper to the height of the activating tab if dynamic\n * height property is true.\n * @param {?} tabHeight\n * @return {?}\n */\n_setTabBodyWrapperHeight(tabHeight: number): void {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) { return; }\n\n    this._renderer.setStyle(this._tabBodyWrapper.nativeElement, 'height',\n        this._tabBodyWrapperHeight + 'px');\n\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      this._renderer.setStyle(this._tabBodyWrapper.nativeElement, 'height',\n          tabHeight + 'px');\n    }\n  }\n/**\n * Removes the height of the tab body wrapper.\n * @return {?}\n */\n_removeTabBodyWrapperHeight(): void {\n    this._tabBodyWrapperHeight = this._tabBodyWrapper.nativeElement.clientHeight;\n    this._renderer.setStyle(this._tabBodyWrapper.nativeElement, 'height', '');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-tab-group, mat-tab-group',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['tab-group.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color', 'disableRipple'],\n  host: {\n    'class': 'mat-tab-group',\n    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_tabs': [{ type: ContentChildren, args: [MdTab, ] },],\n'_tabBodyWrapper': [{ type: ViewChild, args: ['tabBodyWrapper', ] },],\n'dynamicHeight': [{ type: Input },],\n'_dynamicHeightDeprecated': [{ type: Input, args: ['md-dynamic-height', ] },],\n'selectedIndex': [{ type: Input },],\n'headerPosition': [{ type: Input },],\n'backgroundColor': [{ type: Input },],\n'selectedIndexChange': [{ type: Output },],\n'focusChange': [{ type: Output },],\n'selectChange': [{ type: Output },],\n};\n}\n\nfunction MdTabGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabGroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabGroup.ctorParameters;\n/** @type {?} */\nMdTabGroup.propDecorators;\n/** @type {?} */\nMdTabGroup.prototype._tabs;\n/** @type {?} */\nMdTabGroup.prototype._tabBodyWrapper;\n/**\n * Whether this component has been initialized.\n * @type {?}\n */\nMdTabGroup.prototype._isInitialized;\n/**\n * The tab index that should be selected after the content has been checked.\n * @type {?}\n */\nMdTabGroup.prototype._indexToSelect;\n/**\n * Snapshot of the height of the tab body wrapper before another tab is activated.\n * @type {?}\n */\nMdTabGroup.prototype._tabBodyWrapperHeight;\n/**\n * Subscription to tabs being added/removed.\n * @type {?}\n */\nMdTabGroup.prototype._tabsSubscription;\n/**\n * Subscription to changes in the tab labels.\n * @type {?}\n */\nMdTabGroup.prototype._tabLabelSubscription;\n/** @type {?} */\nMdTabGroup.prototype._dynamicHeight;\n/** @type {?} */\nMdTabGroup.prototype._selectedIndex;\n/**\n * Position of the tab header.\n * @type {?}\n */\nMdTabGroup.prototype.headerPosition;\n/** @type {?} */\nMdTabGroup.prototype._backgroundColor;\n/**\n * Event emitted when focus has changed within a tab group.\n * @type {?}\n */\nMdTabGroup.prototype.focusChange;\n/**\n * Event emitted when the tab selection has changed.\n * @type {?}\n */\nMdTabGroup.prototype.selectChange;\n/** @type {?} */\nMdTabGroup.prototype._groupId;\n/** @type {?} */\nMdTabGroup.prototype._changeDetectorRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}