{"version":3,"sources":["../../../../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts"],"names":[],"mappings":"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","file":"tab-nav-bar.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentInit,\n  Component,\n  Directive,\n  ElementRef,\n  HostBinding,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {MdInkBar} from '../ink-bar';\nimport {CanDisable, mixinDisabled} from '../../core/common-behaviors/disabled';\nimport {MdRipple} from '../../core';\nimport {ViewportRuler} from '../../core/overlay/position/viewport-ruler';\nimport {Directionality, MD_RIPPLE_GLOBAL_OPTIONS, Platform, RippleGlobalOptions} from '../../core';\nimport {CanColor, mixinColor, ThemePalette} from '../../core/common-behaviors/color';\nimport {Subject} from 'rxjs/Subject';\nimport {Subscription} from 'rxjs/Subscription';\nimport {takeUntil, auditTime} from '../../core/rxjs/index';\nimport {of as observableOf} from 'rxjs/observable/of';\nimport {merge} from 'rxjs/observable/merge';\nimport {fromEvent} from 'rxjs/observable/fromEvent';\n/**\n * \\@docs-private\n */\nexport class MdTabNavBase {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(public _renderer: Renderer2,\npublic _elementRef: ElementRef) {}\n}\n\nfunction MdTabNavBase_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabNavBase.prototype._renderer;\n/** @type {?} */\nMdTabNavBase.prototype._elementRef;\n}\n\nexport const /** @type {?} */ _MdTabNavMixinBase = mixinColor(MdTabNavBase, 'primary');\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nexport class MdTabNav extends _MdTabNavMixinBase implements AfterContentInit, CanColor, OnDestroy {\n/**\n * Subject that emits when the component has been destroyed.\n */\nprivate _onDestroy = new Subject<void>();\n\n  _activeLinkChanged: boolean;\n  _activeLinkElement: ElementRef;\n\n   _inkBar: MdInkBar;\n/**\n * Subscription for window.resize event *\n */\nprivate _resizeSubscription: Subscription;\n/**\n * Background color of the tab nav.\n * @return {?}\n */\nget backgroundColor(): ThemePalette { return this._backgroundColor; }\n/**\n * @param {?} value\n * @return {?}\n */\nset backgroundColor(value: ThemePalette) {\n    let /** @type {?} */ nativeElement = this._elementRef.nativeElement;\n\n    this._renderer.removeClass(nativeElement, `mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      this._renderer.addClass(nativeElement, `mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\nprivate _backgroundColor: ThemePalette;\n/**\n * @param {?} renderer\n * @param {?} elementRef\n * @param {?} _dir\n * @param {?} _ngZone\n * @param {?} _changeDetectorRef\n */\nconstructor(renderer: Renderer2,\n              elementRef: ElementRef,\nprivate _dir: Directionality,\nprivate _ngZone: NgZone,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n    super(renderer, elementRef);\n  }\n/**\n * Notifies the component that the active link has been changed.\n * @param {?} element\n * @return {?}\n */\nupdateActiveLink(element: ElementRef) {\n    this._activeLinkChanged = this._activeLinkElement != element;\n    this._activeLinkElement = element;\n\n    if (this._activeLinkChanged) {\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n    this._resizeSubscription = this._ngZone.runOutsideAngular(() => {\n      let /** @type {?} */ dirChange = this._dir ? this._dir.change : observableOf(null);\n      let /** @type {?} */ resize = typeof window !== 'undefined' ?\n          auditTime.call(fromEvent(window, 'resize'), 10) :\n          observableOf(null);\n\n      return takeUntil.call(merge(dirChange, resize), this._onDestroy)\n          .subscribe(() => this._alignInkBar());\n    });\n  }\n/**\n * Checks if the active link has been changed and, if so, will update the ink bar.\n * @return {?}\n */\nngAfterContentChecked(): void {\n    if (this._activeLinkChanged) {\n      this._alignInkBar();\n      this._activeLinkChanged = false;\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._onDestroy.next();\n\n    if (this._resizeSubscription) {\n      this._resizeSubscription.unsubscribe();\n    }\n  }\n/**\n * Aligns the ink bar to the active link.\n * @return {?}\n */\n_alignInkBar(): void {\n    if (this._activeLinkElement) {\n      this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: '[md-tab-nav-bar], [mat-tab-nav-bar]',\n  inputs: ['color'],\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['tab-nav-bar.css'],\n  host: {'class': 'mat-tab-nav-bar'},\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: Directionality, decorators: [{ type: Optional }, ]},\n{type: NgZone, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_inkBar': [{ type: ViewChild, args: [MdInkBar, ] },],\n'backgroundColor': [{ type: Input },],\n};\n}\n\nfunction MdTabNav_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabNav.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabNav.ctorParameters;\n/** @type {?} */\nMdTabNav.propDecorators;\n/**\n * Subject that emits when the component has been destroyed.\n * @type {?}\n */\nMdTabNav.prototype._onDestroy;\n/** @type {?} */\nMdTabNav.prototype._activeLinkChanged;\n/** @type {?} */\nMdTabNav.prototype._activeLinkElement;\n/** @type {?} */\nMdTabNav.prototype._inkBar;\n/**\n * Subscription for window.resize event *\n * @type {?}\n */\nMdTabNav.prototype._resizeSubscription;\n/** @type {?} */\nMdTabNav.prototype._backgroundColor;\n/** @type {?} */\nMdTabNav.prototype._dir;\n/** @type {?} */\nMdTabNav.prototype._ngZone;\n/** @type {?} */\nMdTabNav.prototype._changeDetectorRef;\n}\n\nexport class MdTabLinkBase {}\nexport const /** @type {?} */ _MdTabLinkMixinBase = mixinDisabled(MdTabLinkBase);\n/**\n * Link inside of a `md-tab-nav-bar`.\n */\nexport class MdTabLink extends _MdTabLinkMixinBase implements OnDestroy, CanDisable {\n/**\n * Whether the tab link is active or not.\n */\nprivate _isActive: boolean = false;\n/**\n * Reference to the instance of the ripple for the tab link.\n */\nprivate _tabLinkRipple: MdRipple;\n/**\n * Whether the link is active.\n * @return {?}\n */\nget active(): boolean { return this._isActive; }\n/**\n * @param {?} value\n * @return {?}\n */\nset active(value: boolean) {\n    this._isActive = value;\n    if (value) {\n      this._mdTabNavBar.updateActiveLink(this._elementRef);\n    }\n  }\n/**\n * \\@docs-private\n * @return {?}\n */\nget tabIndex(): number {\n    return this.disabled ? -1 : 0;\n  }\n/**\n * @param {?} _mdTabNavBar\n * @param {?} _elementRef\n * @param {?} ngZone\n * @param {?} ruler\n * @param {?} platform\n * @param {?} globalOptions\n */\nconstructor(private _mdTabNavBar: MdTabNav,\nprivate _elementRef: ElementRef,\n              ngZone: NgZone,\n              ruler: ViewportRuler,\n              platform: Platform,\n                globalOptions: RippleGlobalOptions) {\n    super();\n\n    // Manually create a ripple instance that uses the tab link element as trigger element.\n    // Notice that the lifecycle hooks for the ripple config won't be called anymore.\n    this._tabLinkRipple = new MdRipple(_elementRef, ngZone, ruler, platform, globalOptions);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    // Manually call the ngOnDestroy lifecycle hook of the ripple instance because it won't be\n    // called automatically since its instance is not created by Angular.\n    this._tabLinkRipple.ngOnDestroy();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-tab-link], [mat-tab-link], [mdTabLink], [matTabLink]',\n  inputs: ['disabled'],\n  host: {\n    'class': 'mat-tab-link',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[class.mat-tab-disabled]': 'disabled'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdTabNav, },\n{type: ElementRef, },\n{type: NgZone, },\n{type: ViewportRuler, },\n{type: Platform, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_RIPPLE_GLOBAL_OPTIONS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'active': [{ type: Input },],\n'tabIndex': [{ type: HostBinding, args: ['tabIndex', ] },],\n};\n}\n\nfunction MdTabLink_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabLink.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabLink.ctorParameters;\n/** @type {?} */\nMdTabLink.propDecorators;\n/**\n * Whether the tab link is active or not.\n * @type {?}\n */\nMdTabLink.prototype._isActive;\n/**\n * Reference to the instance of the ripple for the tab link.\n * @type {?}\n */\nMdTabLink.prototype._tabLinkRipple;\n/** @type {?} */\nMdTabLink.prototype._mdTabNavBar;\n/** @type {?} */\nMdTabLink.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}