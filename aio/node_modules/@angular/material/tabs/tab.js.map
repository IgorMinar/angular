{"version":3,"sources":["../../../../src/lib/tabs/tab.ts"],"names":[],"mappings":"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","file":"tab.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {TemplatePortal} from '../core/portal/portal';\nimport {\n  ViewContainerRef, Input, TemplateRef, ViewChild, OnInit, ContentChild,\n  Component, ChangeDetectionStrategy, OnDestroy, OnChanges, SimpleChanges,\n} from '@angular/core';\nimport {CanDisable, mixinDisabled} from '../core/common-behaviors/disabled';\nimport {MdTabLabel} from './tab-label';\nimport {Subject} from 'rxjs/Subject';\n/**\n * \\@docs-private\n */\nexport class MdTabBase {}\nexport const /** @type {?} */ _MdTabMixinBase = mixinDisabled(MdTabBase);\nexport class MdTab extends _MdTabMixinBase implements OnInit, CanDisable, OnChanges, OnDestroy {\n/**\n * Content for the tab label given by <ng-template md-tab-label>.\n */\ntemplateLabel: MdTabLabel;\n/**\n * Template inside the MdTab view that contains an <ng-content>.\n */\n_content: TemplateRef<any>;\n/**\n * The plain text label for the tab, used when there is no template label.\n */\ntextLabel: string = '';\n/**\n * The portal that will be the hosted content of the tab\n */\nprivate _contentPortal: TemplatePortal | null = null;\n/**\n * @return {?}\n */\nget content(): TemplatePortal | null { return this._contentPortal; }\n/**\n * Emits whenever the label changes.\n */\n_labelChange = new Subject<void>();\n/**\n * The relatively indexed position where 0 represents the center, negative is left, and positive\n * represents the right.\n */\nposition: number | null = null;\n/**\n * The initial relatively index origin of the tab if it was created and selected after there\n * was already a selected tab. Provides context of what position the tab should originate from.\n */\norigin: number | null = null;\n/**\n * @param {?} _viewContainerRef\n */\nconstructor(private _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (changes.hasOwnProperty('textLabel')) {\n      this._labelChange.next();\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._labelChange.complete();\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-tab, mat-tab',\n  templateUrl: 'tab.html',\n  inputs: ['disabled'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'templateLabel': [{ type: ContentChild, args: [MdTabLabel, ] },],\n'_content': [{ type: ViewChild, args: [TemplateRef, ] },],\n'textLabel': [{ type: Input, args: ['label', ] },],\n};\n}\n\nfunction MdTab_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTab.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTab.ctorParameters;\n/** @type {?} */\nMdTab.propDecorators;\n/**\n * Content for the tab label given by <ng-template md-tab-label>.\n * @type {?}\n */\nMdTab.prototype.templateLabel;\n/**\n * Template inside the MdTab view that contains an <ng-content>.\n * @type {?}\n */\nMdTab.prototype._content;\n/**\n * The plain text label for the tab, used when there is no template label.\n * @type {?}\n */\nMdTab.prototype.textLabel;\n/**\n * The portal that will be the hosted content of the tab\n * @type {?}\n */\nMdTab.prototype._contentPortal;\n/**\n * Emits whenever the label changes.\n * @type {?}\n */\nMdTab.prototype._labelChange;\n/**\n * The relatively indexed position where 0 represents the center, negative is left, and positive\n * represents the right.\n * @type {?}\n */\nMdTab.prototype.position;\n/**\n * The initial relatively index origin of the tab if it was created and selected after there\n * was already a selected tab. Provides context of what position the tab should originate from.\n * @type {?}\n */\nMdTab.prototype.origin;\n/** @type {?} */\nMdTab.prototype._viewContainerRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}