{"version":3,"sources":["../../../../src/lib/tabs/tab-body.ts"],"names":[],"mappings":"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","file":"tab-body.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ViewChild,\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  ElementRef,\n  Optional,\n  AfterViewChecked,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  AnimationEvent,\n} from '@angular/animations';\nimport {TemplatePortal, PortalHostDirective, Directionality, Direction} from '../core';\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type MdTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type MdTabBodyOriginState = 'left' | 'right';\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nexport class MdTabBody implements OnInit, AfterViewChecked {\n/**\n * The portal host inside of this container into which the tab body content will be loaded.\n */\n_portalHost: PortalHostDirective;\n/**\n * Event emitted when the tab begins to animate towards the center as the active tab.\n */\nonCentering: EventEmitter<number> = new EventEmitter<number>();\n/**\n * Event emitted when the tab completes its animation towards the center.\n */\nonCentered: EventEmitter<void> = new EventEmitter<void>(true);\n/**\n * The tab body content to display.\n */\n_content: TemplatePortal;\n/**\n * The shifted index position of the tab body, where zero represents the active center tab.\n */\n_position: MdTabBodyPositionState;\n/**\n * @param {?} position\n * @return {?}\n */\nset position(position: number) {\n    if (position < 0) {\n      this._position = this._getLayoutDirection() == 'ltr' ? 'left' : 'right';\n    } else if (position > 0) {\n      this._position = this._getLayoutDirection() == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n/**\n * The origin position from which this tab should appear when it is centered into view.\n */\n_origin: MdTabBodyOriginState;\n/**\n * The origin position from which this tab should appear when it is centered into view.\n * @param {?} origin\n * @return {?}\n */\nset origin(origin: number) {\n    if (origin == null) { return; }\n\n    const /** @type {?} */ dir = this._getLayoutDirection();\n    if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n      this._origin = 'left';\n    } else {\n      this._origin = 'right';\n    }\n  }\n/**\n * @param {?} _elementRef\n * @param {?} _dir\n */\nconstructor(private _elementRef: ElementRef,\nprivate _dir: Directionality) { }\n/**\n * After initialized, check if the content is centered and has an origin. If so, set the\n * special position states that transition the tab from the left or right before centering.\n * @return {?}\n */\nngOnInit() {\n    if (this._position == 'center' && this._origin) {\n      this._position = this._origin == 'left' ? 'left-origin-center' : 'right-origin-center';\n    }\n  }\n/**\n * After the view has been set, check if the tab content is set to the center and attach the\n * content if it is not already attached.\n * @return {?}\n */\nngAfterViewChecked() {\n    if (this._isCenterPosition(this._position) && !this._portalHost.hasAttached()) {\n      this._portalHost.attach(this._content);\n    }\n  }\n/**\n * @param {?} e\n * @return {?}\n */\n_onTranslateTabStarted(e: AnimationEvent) {\n    if (this._isCenterPosition(e.toState)) {\n      this.onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n/**\n * @param {?} e\n * @return {?}\n */\n_onTranslateTabComplete(e: AnimationEvent) {\n    // If the end state is that the tab is not centered, then detach the content.\n    if (!this._isCenterPosition(e.toState) && !this._isCenterPosition(this._position)) {\n      this._portalHost.detach();\n    }\n\n    // If the transition to the center is complete, emit an event.\n    if (this._isCenterPosition(e.toState) && this._isCenterPosition(this._position)) {\n      this.onCentered.emit();\n    }\n  }\n/**\n * The text direction of the containing app.\n * @return {?}\n */\n_getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n/**\n * Whether the provided position state is considered center, regardless of origin.\n * @param {?} position\n * @return {?}\n */\nprivate _isCenterPosition(position: MdTabBodyPositionState|string): boolean {\n    return position == 'center' ||\n        position == 'left-origin-center' ||\n        position == 'right-origin-center';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-tab-body, mat-tab-body',\n  templateUrl: 'tab-body.html',\n  styleUrls: ['tab-body.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-tab-body',\n  },\n  animations: [\n    trigger('translateTab', [\n      state('void', style({transform: 'translate3d(0%, 0, 0)'})),\n      state('left', style({transform: 'translate3d(-100%, 0, 0)'})),\n      state('left-origin-center', style({transform: 'translate3d(0%, 0, 0)'})),\n      state('right-origin-center', style({transform: 'translate3d(0%, 0, 0)'})),\n      state('center', style({transform: 'translate3d(0%, 0, 0)'})),\n      state('right', style({transform: 'translate3d(100%, 0, 0)'})),\n      transition('* => left, * => right, left => center, right => center',\n          animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\n      transition('void => left-origin-center', [\n        style({transform: 'translate3d(-100%, 0, 0)'}),\n        animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n      ]),\n      transition('void => right-origin-center', [\n        style({transform: 'translate3d(100%, 0, 0)'}),\n        animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n      ])\n    ])\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Directionality, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_portalHost': [{ type: ViewChild, args: [PortalHostDirective, ] },],\n'onCentering': [{ type: Output },],\n'onCentered': [{ type: Output },],\n'_content': [{ type: Input, args: ['content', ] },],\n'position': [{ type: Input, args: ['position', ] },],\n'origin': [{ type: Input, args: ['origin', ] },],\n};\n}\n\nfunction MdTabBody_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabBody.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabBody.ctorParameters;\n/** @type {?} */\nMdTabBody.propDecorators;\n/**\n * The portal host inside of this container into which the tab body content will be loaded.\n * @type {?}\n */\nMdTabBody.prototype._portalHost;\n/**\n * Event emitted when the tab begins to animate towards the center as the active tab.\n * @type {?}\n */\nMdTabBody.prototype.onCentering;\n/**\n * Event emitted when the tab completes its animation towards the center.\n * @type {?}\n */\nMdTabBody.prototype.onCentered;\n/**\n * The tab body content to display.\n * @type {?}\n */\nMdTabBody.prototype._content;\n/**\n * The shifted index position of the tab body, where zero represents the active center tab.\n * @type {?}\n */\nMdTabBody.prototype._position;\n/**\n * The origin position from which this tab should appear when it is centered into view.\n * @type {?}\n */\nMdTabBody.prototype._origin;\n/** @type {?} */\nMdTabBody.prototype._elementRef;\n/** @type {?} */\nMdTabBody.prototype._dir;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}