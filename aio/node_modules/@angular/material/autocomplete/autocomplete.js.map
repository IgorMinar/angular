{"version":3,"sources":["../../../../src/lib/autocomplete/autocomplete.ts"],"names":[],"mappings":"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","file":"autocomplete.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Input,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {MdOption} from '../core';\nimport {ActiveDescendantKeyManager} from '../core/a11y/activedescendant-key-manager';\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueAutocompleteIdCounter = 0;\n\nexport type AutocompletePositionY = 'above' | 'below';\nexport class MdAutocomplete implements AfterContentInit {\n/**\n * Manages active item in option list based on key events.\n */\n_keyManager: ActiveDescendantKeyManager;\n/**\n * Whether the autocomplete panel displays above or below its trigger.\n */\npositionY: AutocompletePositionY = 'below';\n/**\n * Whether the autocomplete panel should be visible, depending on option length.\n */\nshowPanel = false;\n/**\n * \\@docs-private\n */\ntemplate: TemplateRef<any>;\n/**\n * Element for the panel containing the autocomplete options.\n */\npanel: ElementRef;\n/**\n * \\@docs-private\n */\noptions: QueryList<MdOption>;\n/**\n * Function that maps an option's control value to its display value in the trigger.\n */\ndisplayWith: ((value: any) => string) | null = null;\n/**\n * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n */\nid: string = `md-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n/**\n * @param {?} _changeDetectorRef\n */\nconstructor(private _changeDetectorRef: ChangeDetectorRef) { }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n  }\n/**\n * Sets the panel scrollTop. This allows us to manually scroll to display options\n * above or below the fold, as they are not actually being focused when active.\n * @param {?} scrollTop\n * @return {?}\n */\n_setScrollTop(scrollTop: number): void {\n    if (this.panel) {\n      this.panel.nativeElement.scrollTop = scrollTop;\n    }\n  }\n/**\n * Returns the panel's scrollTop.\n * @return {?}\n */\n_getScrollTop(): number {\n    return this.panel ? this.panel.nativeElement.scrollTop : 0;\n  }\n/**\n * Panel should hide itself when the option list is empty.\n * @return {?}\n */\n_setVisibility() {\n    Promise.resolve().then(() => {\n      this.showPanel = !!this.options.length;\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n/**\n * Sets a class on the panel based on its position (used to set y-offset).\n * @return {?}\n */\n_getClassList() {\n    return {\n      'mat-autocomplete-panel-below': this.positionY === 'below',\n      'mat-autocomplete-panel-above': this.positionY === 'above',\n      'mat-autocomplete-visible': this.showPanel,\n      'mat-autocomplete-hidden': !this.showPanel\n    };\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-autocomplete, mat-autocomplete',\n  templateUrl: 'autocomplete.html',\n  styleUrls: ['autocomplete.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'mdAutocomplete',\n  host: {\n    'class': 'mat-autocomplete'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'template': [{ type: ViewChild, args: [TemplateRef, ] },],\n'panel': [{ type: ViewChild, args: ['panel', ] },],\n'options': [{ type: ContentChildren, args: [MdOption, ] },],\n'displayWith': [{ type: Input },],\n};\n}\n\nfunction MdAutocomplete_tsickle_Closure_declarations() {\n/** @type {?} */\nMdAutocomplete.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdAutocomplete.ctorParameters;\n/** @type {?} */\nMdAutocomplete.propDecorators;\n/**\n * Manages active item in option list based on key events.\n * @type {?}\n */\nMdAutocomplete.prototype._keyManager;\n/**\n * Whether the autocomplete panel displays above or below its trigger.\n * @type {?}\n */\nMdAutocomplete.prototype.positionY;\n/**\n * Whether the autocomplete panel should be visible, depending on option length.\n * @type {?}\n */\nMdAutocomplete.prototype.showPanel;\n/**\n * \\@docs-private\n * @type {?}\n */\nMdAutocomplete.prototype.template;\n/**\n * Element for the panel containing the autocomplete options.\n * @type {?}\n */\nMdAutocomplete.prototype.panel;\n/**\n * \\@docs-private\n * @type {?}\n */\nMdAutocomplete.prototype.options;\n/**\n * Function that maps an option's control value to its display value in the trigger.\n * @type {?}\n */\nMdAutocomplete.prototype.displayWith;\n/**\n * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n * @type {?}\n */\nMdAutocomplete.prototype.id;\n/** @type {?} */\nMdAutocomplete.prototype._changeDetectorRef;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}