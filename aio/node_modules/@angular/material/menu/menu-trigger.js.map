{"version":3,"sources":["../../../../src/lib/menu/menu-trigger.ts"],"names":[],"mappings":"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","file":"menu-trigger.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewContainerRef,\n  Self,\n  Inject,\n  InjectionToken,\n} from '@angular/core';\nimport {\n  isFakeMousedownFromScreenReader,\n  Directionality,\n  Direction,\n  Overlay,\n  OverlayState,\n  OverlayRef,\n  TemplatePortal,\n  ConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  VerticalConnectionPos,\n  RIGHT_ARROW,\n  LEFT_ARROW,\n  RepositionScrollStrategy,\n  // This import is only used to define a generic type. The current TypeScript version incorrectly\n  // considers such imports as unused (https://github.com/Microsoft/TypeScript/issues/14953)\n  // tslint:disable-next-line:no-unused-variable\n  ScrollStrategy,\n} from '../core';\nimport {MdMenu} from './menu-directive';\nimport {MdMenuItem} from './menu-item';\nimport {MdMenuPanel} from './menu-panel';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\nimport {throwMdMenuMissingError} from './menu-errors';\nimport {RxChain, filter} from '../core/rxjs/index';\nimport {of as observableOf} from 'rxjs/observable/of';\nimport {merge} from 'rxjs/observable/merge';\nimport {Subscription} from 'rxjs/Subscription';\n/**\n * Injection token that determines the scroll handling while the menu is open.\n */\nexport const MD_MENU_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('md-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nexport function MD_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/**\n * \\@docs-private\n */\nexport const MD_MENU_SCROLL_STRATEGY_PROVIDER = {\n  provide: MD_MENU_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MD_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Default top padding of the menu panel.\n */\nexport const MENU_PANEL_TOP_PADDING = 8;\n/**\n * This directive is intended to be used in conjunction with an md-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\nexport class MdMenuTrigger implements AfterViewInit, OnDestroy {\nprivate _portal: TemplatePortal;\nprivate _overlayRef: OverlayRef | null = null;\nprivate _menuOpen: boolean = false;\nprivate _closeSubscription: Subscription;\nprivate _positionSubscription: Subscription;\nprivate _hoverSubscription: Subscription;\nprivate _openedByMouse: boolean = false;\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedMdMenuTriggerFor(): MdMenuPanel { return this.menu; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _deprecatedMdMenuTriggerFor(v: MdMenuPanel) { this.menu = v; }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedMatMenuTriggerFor(): MdMenuPanel { return this.menu; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _deprecatedMatMenuTriggerFor(v: MdMenuPanel) { this.menu = v; }\n/**\n * @return {?}\n */\nget _matMenuTriggerFor(): MdMenuPanel { return this.menu; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matMenuTriggerFor(v: MdMenuPanel) { this.menu = v; }\n/**\n * References the menu instance that the trigger is associated with.\n */\nmenu: MdMenuPanel;\n/**\n * Event emitted when the associated menu is opened.\n */\nonMenuOpen = new EventEmitter<void>();\n/**\n * Event emitted when the associated menu is closed.\n */\nonMenuClose = new EventEmitter<void>();\n/**\n * @param {?} _overlay\n * @param {?} _element\n * @param {?} _viewContainerRef\n * @param {?} _scrollStrategy\n * @param {?} _parentMenu\n * @param {?} _menuItemInstance\n * @param {?} _dir\n */\nconstructor(\nprivate _overlay: Overlay,\nprivate _element: ElementRef,\nprivate _viewContainerRef: ViewContainerRef,\nprivate _scrollStrategy,\nprivate _parentMenu: MdMenu,\nprivate _menuItemInstance: MdMenuItem,\nprivate _dir: Directionality) {\n\n    if (_menuItemInstance) {\n      _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n    }\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    this._checkMenu();\n\n    this.menu.close.subscribe(reason => {\n      this.closeMenu();\n\n      // If a click closed the menu, we should close the entire chain of nested menus.\n      if (reason === 'click' && this._parentMenu) {\n        this._parentMenu.close.emit(reason);\n      }\n    });\n\n    if (this.triggersSubmenu()) {\n      // Subscribe to changes in the hovered item in order to toggle the panel.\n      this._hoverSubscription = filter\n        .call(this._parentMenu.hover(), active => active === this._menuItemInstance)\n        .subscribe(() => {\n          this._openedByMouse = true;\n          this.openMenu();\n        });\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n\n    this._cleanUpSubscriptions();\n  }\n/**\n * Whether the menu is open.\n * @return {?}\n */\nget menuOpen(): boolean {\n    return this._menuOpen;\n  }\n/**\n * The text direction of the containing app.\n * @return {?}\n */\nget dir(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n/**\n * Whether the menu triggers a sub-menu or a top-level one.\n * @return {?}\n */\ntriggersSubmenu(): boolean {\n    return !!(this._menuItemInstance && this._parentMenu);\n  }\n/**\n * Toggles the menu between the open and closed states.\n * @return {?}\n */\ntoggleMenu(): void {\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\n  }\n/**\n * Opens the menu.\n * @return {?}\n */\nopenMenu(): void {\n    if (!this._menuOpen) {\n      this._createOverlay().attach(this._portal);\n      this._closeSubscription = this._menuClosingActions().subscribe(() => this.menu.close.emit());\n      this._initMenu();\n\n      if (this.menu instanceof MdMenu) {\n        this.menu._startAnimation();\n      }\n    }\n  }\n/**\n * Closes the menu.\n * @return {?}\n */\ncloseMenu(): void {\n    if (this._overlayRef && this.menuOpen) {\n      this._overlayRef.detach();\n      this._closeSubscription.unsubscribe();\n      this._resetMenu();\n\n      if (this.menu instanceof MdMenu) {\n        this.menu._resetAnimation();\n      }\n    }\n  }\n/**\n * Focuses the menu trigger.\n * @return {?}\n */\nfocus() {\n    this._element.nativeElement.focus();\n  }\n/**\n * This method sets the menu state to open and focuses the first item if\n * the menu was opened via the keyboard.\n * @return {?}\n */\nprivate _initMenu(): void {\n    this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n    this.menu.direction = this.dir;\n    this._setMenuElevation();\n    this._setIsMenuOpen(true);\n\n    // Should only set focus if opened via the keyboard, so keyboard users can\n    // can easily navigate menu items. According to spec, mouse users should not\n    // see the focus style.\n    if (!this._openedByMouse) {\n      this.menu.focusFirstItem();\n    }\n  }\n/**\n * Updates the menu elevation based on the amount of parent menus that it has.\n * @return {?}\n */\nprivate _setMenuElevation(): void {\n    if (this.menu.setElevation) {\n      let /** @type {?} */ depth = 0;\n      let /** @type {?} */ parentMenu = this.menu.parentMenu;\n\n      while (parentMenu) {\n        depth++;\n        parentMenu = parentMenu.parentMenu;\n      }\n\n      this.menu.setElevation(depth);\n    }\n  }\n/**\n * This method resets the menu when it's closed, most importantly restoring\n * focus to the menu trigger if the menu was opened via the keyboard.\n * @return {?}\n */\nprivate _resetMenu(): void {\n    this._setIsMenuOpen(false);\n\n    // Focus only needs to be reset to the host element if the menu was opened\n    // by the keyboard and manually shifted to the first menu item.\n    if (!this._openedByMouse) {\n      this.focus();\n    }\n\n    this._openedByMouse = false;\n  }\n/**\n * @param {?} isOpen\n * @return {?}\n */\nprivate _setIsMenuOpen(isOpen: boolean): void {\n    this._menuOpen = isOpen;\n    this._menuOpen ? this.onMenuOpen.emit() : this.onMenuClose.emit();\n\n    if (this.triggersSubmenu()) {\n      this._menuItemInstance._highlighted = isOpen;\n    }\n  }\n/**\n * This method checks that a valid instance of MdMenu has been passed into\n * mdMenuTriggerFor. If not, an exception is thrown.\n * @return {?}\n */\nprivate _checkMenu() {\n    if (!this.menu) {\n      throwMdMenuMissingError();\n    }\n  }\n/**\n * This method creates the overlay from the provided menu's template and saves its\n * OverlayRef so that it can be attached to the DOM when openMenu is called.\n * @return {?}\n */\nprivate _createOverlay(): OverlayRef {\n    if (!this._overlayRef) {\n      this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n      const /** @type {?} */ config = this._getOverlayConfig();\n      this._subscribeToPositions( /** @type {?} */((config.positionStrategy as ConnectedPositionStrategy)));\n      this._overlayRef = this._overlay.create(config);\n    }\n\n    return this._overlayRef;\n  }\n/**\n * This method builds the configuration object needed to create the overlay, the OverlayState.\n * @return {?} OverlayState\n */\nprivate _getOverlayConfig(): OverlayState {\n    const /** @type {?} */ overlayState = new OverlayState();\n    overlayState.positionStrategy = this._getPosition();\n    overlayState.hasBackdrop = !this.triggersSubmenu();\n    overlayState.backdropClass = 'cdk-overlay-transparent-backdrop';\n    overlayState.direction = this.dir;\n    overlayState.scrollStrategy = this._scrollStrategy();\n    return overlayState;\n  }\n/**\n * Listens to changes in the position of the overlay and sets the correct classes\n * on the menu based on the new position. This ensures the animation origin is always\n * correct, even if a fallback position is used for the overlay.\n * @param {?} position\n * @return {?}\n */\nprivate _subscribeToPositions(position: ConnectedPositionStrategy): void {\n    this._positionSubscription = position.onPositionChange.subscribe(change => {\n      const /** @type {?} */ posX: MenuPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n      const /** @type {?} */ posY: MenuPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n      this.menu.setPositionClasses(posX, posY);\n    });\n  }\n/**\n * This method builds the position strategy for the overlay, so the menu is properly connected\n * to the trigger.\n * @return {?} ConnectedPositionStrategy\n */\nprivate _getPosition(): ConnectedPositionStrategy {\n    let [originX, originFallbackX]: HorizontalConnectionPos[] =\n      this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n    let [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n      this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n    let /** @type {?} */ offsetY = 0;\n\n    if (this.triggersSubmenu()) {\n      // When the menu is a sub-menu, it should always align itself\n      // to the edges of the trigger, instead of overlapping it.\n      overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n\n      // TODO(crisbeto): this should be a function, once the overlay supports it.\n      // Right now it will be wrong for the fallback positions.\n      offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n    } else if (!this.menu.overlapTrigger) {\n      originY = overlayY === 'top' ? 'bottom' : 'top';\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n    }\n\n    return this._overlay.position()\n      .connectedTo(this._element, {originX, originY}, {overlayX, overlayY})\n      .withDirection(this.dir)\n      .withOffsetY(offsetY)\n      .withFallbackPosition(\n          {originX: originFallbackX, originY},\n          {overlayX: overlayFallbackX, overlayY})\n      .withFallbackPosition(\n          {originX, originY: originFallbackY},\n          {overlayX, overlayY: overlayFallbackY})\n      .withFallbackPosition(\n          {originX: originFallbackX, originY: originFallbackY},\n          {overlayX: overlayFallbackX, overlayY: overlayFallbackY});\n  }\n/**\n * Cleans up the active subscriptions.\n * @return {?}\n */\nprivate _cleanUpSubscriptions(): void {\n    [\n      this._closeSubscription,\n      this._positionSubscription,\n      this._hoverSubscription\n    ]\n    .filter(subscription => !!subscription)\n    .forEach(subscription => subscription.unsubscribe());\n  }\n/**\n * Returns a stream that emits whenever an action that should close the menu occurs.\n * @return {?}\n */\nprivate _menuClosingActions() {\n    const /** @type {?} */ backdrop = /** @type {?} */(( this._overlayRef)).backdropClick();\n    const /** @type {?} */ parentClose = this._parentMenu ? this._parentMenu.close : observableOf(null);\n    const /** @type {?} */ hover = this._parentMenu ? RxChain.from(this._parentMenu.hover())\n      .call(filter, active => active !== this._menuItemInstance)\n      .call(filter, () => this._menuOpen)\n      .result() : observableOf(null);\n\n    return merge(backdrop, parentClose, hover);\n  }\n/**\n * Handles mouse presses on the trigger.\n * @param {?} event\n * @return {?}\n */\n_handleMousedown(event: MouseEvent): void {\n    if (!isFakeMousedownFromScreenReader(event)) {\n      this._openedByMouse = true;\n    }\n  }\n/**\n * Handles key presses on the trigger.\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent): void {\n    const /** @type {?} */ keyCode = event.keyCode;\n\n    if (this.triggersSubmenu() && (\n        (keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n        (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n        this.openMenu();\n    }\n  }\n/**\n * Handles click events on the trigger.\n * @param {?} event\n * @return {?}\n */\n_handleClick(event: MouseEvent): void {\n    if (this.triggersSubmenu()) {\n      // Stop event propagation to avoid closing the parent menu.\n      event.stopPropagation();\n      this.openMenu();\n    } else {\n      this.toggleMenu();\n    }\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `[md-menu-trigger-for], [mat-menu-trigger-for],\n             [mdMenuTriggerFor], [matMenuTriggerFor]`,\n  host: {\n    'aria-haspopup': 'true',\n    '(mousedown)': '_handleMousedown($event)',\n    '(keydown)': '_handleKeydown($event)',\n    '(click)': '_handleClick($event)',\n  },\n  exportAs: 'mdMenuTrigger'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n{type: ElementRef, },\n{type: ViewContainerRef, },\n{type: undefined, decorators: [{ type: Inject, args: [MD_MENU_SCROLL_STRATEGY, ] }, ]},\n{type: MdMenu, decorators: [{ type: Optional }, ]},\n{type: MdMenuItem, decorators: [{ type: Optional }, { type: Self }, ]},\n{type: Directionality, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_deprecatedMdMenuTriggerFor': [{ type: Input, args: ['md-menu-trigger-for', ] },],\n'_deprecatedMatMenuTriggerFor': [{ type: Input, args: ['mat-menu-trigger-for', ] },],\n'_matMenuTriggerFor': [{ type: Input, args: ['matMenuTriggerFor', ] },],\n'menu': [{ type: Input, args: ['mdMenuTriggerFor', ] },],\n'onMenuOpen': [{ type: Output },],\n'onMenuClose': [{ type: Output },],\n};\n}\n\nfunction MdMenuTrigger_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMenuTrigger.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMenuTrigger.ctorParameters;\n/** @type {?} */\nMdMenuTrigger.propDecorators;\n/** @type {?} */\nMdMenuTrigger.prototype._portal;\n/** @type {?} */\nMdMenuTrigger.prototype._overlayRef;\n/** @type {?} */\nMdMenuTrigger.prototype._menuOpen;\n/** @type {?} */\nMdMenuTrigger.prototype._closeSubscription;\n/** @type {?} */\nMdMenuTrigger.prototype._positionSubscription;\n/** @type {?} */\nMdMenuTrigger.prototype._hoverSubscription;\n/** @type {?} */\nMdMenuTrigger.prototype._openedByMouse;\n/**\n * References the menu instance that the trigger is associated with.\n * @type {?}\n */\nMdMenuTrigger.prototype.menu;\n/**\n * Event emitted when the associated menu is opened.\n * @type {?}\n */\nMdMenuTrigger.prototype.onMenuOpen;\n/**\n * Event emitted when the associated menu is closed.\n * @type {?}\n */\nMdMenuTrigger.prototype.onMenuClose;\n/** @type {?} */\nMdMenuTrigger.prototype._overlay;\n/** @type {?} */\nMdMenuTrigger.prototype._element;\n/** @type {?} */\nMdMenuTrigger.prototype._viewContainerRef;\n/** @type {?} */\nMdMenuTrigger.prototype._scrollStrategy;\n/** @type {?} */\nMdMenuTrigger.prototype._parentMenu;\n/** @type {?} */\nMdMenuTrigger.prototype._menuItemInstance;\n/** @type {?} */\nMdMenuTrigger.prototype._dir;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}