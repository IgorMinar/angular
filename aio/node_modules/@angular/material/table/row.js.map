{"version":3,"sources":["../../../../src/lib/table/row.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAGH,OADO,EAAA,uBAAE,EAAwB,SAAA,EAAW,SAAA,EAAU,MAAA,eAAA,CAAA;AAEtD,OADO,EAEL,YAAQ,EACR,MAAM,EACN,gBAAW,EACX,SAAS,EACT,eAAK,GACN,MAAM,oBAAoB,CAAC;AAC5B;;GAEG;AACH,MAFC,CAAA,IAAA,eAAA,GAAA,eAAA,CAAA;AAGD,MAAM,CAFC,IAAA,gBAAA,CAAM,YAAA,GAAe,SAAA,CAAU;AAGtC,MAAM,CAFC,IAAA,gBAAA,CAAM,YAAA,GAAe,YAAA,CAAa;AAGzC,MAAM,CAFC,IAAA,gBAAA,CAAM,MAAA,GAAS,MAAA,CAAO;AAG7B;;;GAGG;AACH;IAAC,0CAAA;IAAD;;IAYA,CAAC;IAAD,qBAAC;AAAD,CAZA,AAYC,CAZA,eAAA;;AAA4D,yBAAA,GAAoC;IACjG,EAAE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBACvB,QAAQ,EAAE,qCAAA;gBACV,SAAS,EAAE,CAAA,EAAE,OAAC,EAAQ,eAAA,EAAiB,WAAA,EAAa,cAAA,EAAe,CAAC;gBACpE,MAAM,EAAE,CAAA,yBAAE,CAAyB;aACpC,EAAC,EAAG;CACJ,CAAC;AACF;;GAEG;AADF,6BAAA,GAAA,cAAA,OAAA,EAGA,EAHA,CAGA,CAAC;AAGF;IACA,gBAAgB;IAChB,cAAc,CAAC,UAAU,CAAC;IAC1B;;;OAGG;IACH,cAAc,CAAC,cAAc,CAAC;AAC9B,CAAC;AAED;;;GAGG;AACH;IAXC,oCAAA;IAWD;;IAYA,CAAC;IAAD,eAAC;AAAD,CAZA,AAYC,CAvBA,YAAA;;AAAmD,mBAAA,GAAoC;IAYxF,EAXE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAYvB,QAAQ,EAXE,yBAAA;gBAYV,SAAS,EAXE,CAAA,EAAE,OAAC,EAAQ,SAAA,EAAW,WAAA,EAAa,QAAA,EAAS,CAAC;gBAYxD,MAAM,EAXE,CAAA,0BAAE,CAA0B;aAYrC,EAXC,EAAG;CAYJ,CAXC;AAYF;;GAEG;AAZF,uBAAA,GAAA,cAAA,OAAA,EAcA,EAdA,CAcA,CAAC;AAGF;IACA,gBAAgB;IAChB,QAAQ,CAAC,UAAU,CAAC;IACpB;;;OAGG;IACH,QAAQ,CAAC,cAAc,CAAC;AACxB,CAAC;AAED;;GAEG;AACH;IAxBC,uCAAA;IAwBD;;IAgBA,CAAC;IAAD,kBAAC;AAAD,CAhBA,AAgBC,CAxCA,YAAA;;AAAsD,sBAAA,GAAoC;IAyB3F,EAxBE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAyBvB,QAAQ,EAxBE,+BAAA;gBAyBV,QAAQ,EAxBE,gBAAA;gBAyBV,IAAI,EAxBE;oBAyBJ,OAAO,EAxBE,gBAAA;oBAyBT,MAAM,EAxBE,KAAA;iBAyBT;gBAvBmC,eAAA,EAAnB,uBAAA,CAAwB,MAAC;aAyB3C,EAxBC,EAAG;CAyBJ,CAxBC;AAyBF;;GAEG;AAzBF,0BAAA,GAAA,cAAA,OAAA,EA2BA,EA3BA,CA2BA,CAAC;AAGF;IACA,gBAAgB;IAChB,WAAW,CAAC,UAAU,CAAC;IACvB;;;OAGG;IACH,WAAW,CAAC,cAAc,CAAC;AAC3B,CAAC;AAED;;GAEG;AACH;IArCC,iCAAA;IAqCD;;IAgBA,CAAC;IAAD,YAAC;AAAD,CAhBA,AAgBC,CArDA,MAAA;;AAA0C,gBAAA,GAAoC;IAsC/E,EArCE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAsCvB,QAAQ,EArCE,iBAAA;gBAsCV,QAAQ,EArCE,gBAAA;gBAsCV,IAAI,EArCE;oBAsCJ,OAAO,EArCE,SAAA;oBAsCT,MAAM,EArCE,KAAA;iBAsCT;gBACD,eAAe,EArCE,uBAAA,CAAwB,MAAC;aAsC3C,EArCC,EAAG;CAsCJ,CArCC;AAsCF;;GAEG;AAtCF,oBAAA,GAAA,cAAA,OAAA,EAwCA,EAxCA,CAwCA,CAAC;AAGF;IACA,gBAAgB;IAChB,KAAK,CAAC,UAAU,CAAC;IACjB;;;OAGG;IACH,KAAK,CAAC,cAAc,CAAC;AACrB,CAAC","file":"row.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ChangeDetectionStrategy, Component, Directive} from '@angular/core';\nimport {\n  CdkHeaderRow,\n  CdkRow,\n  CDK_ROW_TEMPLATE,\n  CdkRowDef,\n  CdkHeaderRowDef,\n} from '@angular/cdk/table';\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nexport const _MdHeaderRowDef = CdkHeaderRowDef;\nexport const /** @type {?} */ _MdCdkRowDef = CdkRowDef;\nexport const /** @type {?} */ _MdHeaderRow = CdkHeaderRow;\nexport const /** @type {?} */ _MdRow = CdkRow;\n/**\n * Header row definition for the md-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nexport class MdHeaderRowDef extends _MdHeaderRowDef { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mdHeaderRowDef], [matHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: MdHeaderRowDef}],\n  inputs: ['columns: mdHeaderRowDef'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdHeaderRowDef_tsickle_Closure_declarations() {\n/** @type {?} */\nMdHeaderRowDef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdHeaderRowDef.ctorParameters;\n}\n\n/**\n * Data row definition for the md-table.\n * Captures the header row's template and other row properties such as the columns to display.\n */\nexport class MdRowDef extends _MdCdkRowDef { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mdRowDef], [matRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: MdRowDef}],\n  inputs: ['columns: mdRowDefColumns'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdRowDef_tsickle_Closure_declarations() {\n/** @type {?} */\nMdRowDef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdRowDef.ctorParameters;\n}\n\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nexport class MdHeaderRow extends _MdHeaderRow { static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'md-header-row, mat-header-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'mat-header-row',\n    'role': 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdHeaderRow_tsickle_Closure_declarations() {\n/** @type {?} */\nMdHeaderRow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdHeaderRow.ctorParameters;\n}\n\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nexport class MdRow extends _MdRow { static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'md-row, mat-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'mat-row',\n    'role': 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdRow_tsickle_Closure_declarations() {\n/** @type {?} */\nMdRow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdRow.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}