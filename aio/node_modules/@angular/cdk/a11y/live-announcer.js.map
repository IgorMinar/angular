{"version":3,"sources":["../../../../src/cdk/a11y/live-announcer.ts"],"names":[],"mappings":"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","file":"live-announcer.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Injectable,\n  InjectionToken,\n  Optional,\n  Inject,\n  SkipSelf,\n  OnDestroy,\n} from '@angular/core';\nimport {Platform} from '@angular/cdk/platform';\n\n\nexport const /** @type {?} */ LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken<HTMLElement>('liveAnnouncerElement');\n\n/** Possible politeness levels. */\nexport type AriaLivePoliteness = 'off' | 'polite' | 'assertive';\nexport class LiveAnnouncer implements OnDestroy {\nprivate _liveElement: Element;\n/**\n * @param {?} elementToken\n * @param {?} platform\n */\nconstructor(\n        elementToken: any,\n      platform: Platform) {\n    // Only do anything if we're on the browser platform.\n    if (platform.isBrowser) {\n      // We inject the live element as `any` because the constructor signature cannot reference\n      // browser globals (HTMLElement) on non-browser environments, since having a class decorator\n      // causes TypeScript to preserve the constructor signature types.\n      this._liveElement = elementToken || this._createLiveElement();\n    }\n  }\n/**\n * Announces a message to screenreaders.\n * @param {?} message Message to be announced to the screenreader\n * @param {?=} politeness The politeness of the announcer element\n * @return {?}\n */\nannounce(message: string, politeness: AriaLivePoliteness = 'polite'): void {\n    this._liveElement.textContent = '';\n\n    // TODO: ensure changing the politeness works on all environments we support.\n    this._liveElement.setAttribute('aria-live', politeness);\n\n    // This 100ms timeout is necessary for some browser + screen-reader combinations:\n    // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n    // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n    //   second time without clearing and then using a non-zero delay.\n    // (using JAWS 17 at time of this writing).\n    setTimeout(() => this._liveElement.textContent = message, 100);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._liveElement && this._liveElement.parentNode) {\n      this._liveElement.parentNode.removeChild(this._liveElement);\n    }\n  }\n/**\n * @return {?}\n */\nprivate _createLiveElement(): Element {\n    let /** @type {?} */ liveEl = document.createElement('div');\n\n    liveEl.classList.add('cdk-visually-hidden');\n    liveEl.setAttribute('aria-atomic', 'true');\n    liveEl.setAttribute('aria-live', 'polite');\n\n    document.body.appendChild(liveEl);\n\n    return liveEl;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_ELEMENT_TOKEN, ] }, ]},\n{type: Platform, },\n];\n}\n\nfunction LiveAnnouncer_tsickle_Closure_declarations() {\n/** @type {?} */\nLiveAnnouncer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLiveAnnouncer.ctorParameters;\n/** @type {?} */\nLiveAnnouncer.prototype._liveElement;\n}\n\n/**\n * \\@docs-private\n * @param {?} parentDispatcher\n * @param {?} liveElement\n * @param {?} platform\n * @return {?}\n */\nexport function LIVE_ANNOUNCER_PROVIDER_FACTORY(\n    parentDispatcher: LiveAnnouncer, liveElement: any, platform: Platform) {\n  return parentDispatcher || new LiveAnnouncer(liveElement, platform);\n}\n/**\n * \\@docs-private\n */\nexport const LIVE_ANNOUNCER_PROVIDER = {\n  // If there is already a LiveAnnouncer available, use that. Otherwise, provide a new one.\n  provide: LiveAnnouncer,\n  deps: [\n    [new Optional(), new SkipSelf(), LiveAnnouncer],\n    [new Optional(), new Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN)],\n    Platform,\n  ],\n  useFactory: LIVE_ANNOUNCER_PROVIDER_FACTORY\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}