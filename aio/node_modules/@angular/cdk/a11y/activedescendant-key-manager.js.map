{"version":3,"sources":["../../../../src/cdk/a11y/activedescendant-key-manager.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAGH,OADO,EAAA,cAAE,EAA0B,MAAA,oBAAA,CAAA;AAYnC;IAAC,sDAAA;IAAD;;IAoBA,CAAC;IAnBD;;;;;;OAMG;IACH,kDADG,GACH,UADG,KAAA;QACH,iBAUG;QATC,OAAO,CADC,OAAC,EAAO,CAAE,IAAC,CAAI;YAErB,EAAE,CAAC,CAAC,KADC,CAAI,UAAC,CAAU,CAAC,CAAA;gBAEnB,KAAI,CADC,UAAC,CAAU,iBAAC,EAAiB,CAAE;YAEtC,CAAC;YACD,iBADM,aAAC,aAAa,KAAC,CAAK,CAAC;YAE3B,EAAE,CAAC,CAAC,KADC,CAAI,UAAC,CAAU,CAAC,CAAA;gBAEnB,KAAI,CADC,UAAC,CAAU,eAAC,EAAe,CAAE;YAEpC,CAAC;QACH,CAAC,CADC,CAAC;IAEL,CAAC;IAEH,iCAAC;AAAD,CApBA,AAoBC,CApBA,cAAA,GAoBA","file":"activedescendant-key-manager.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ListKeyManager, CanDisable} from './list-key-manager';\n\n/**\n * This is the interface for highlightable items (used by the ActiveDescendantKeyManager).\n * Each item must know how to style itself as active or inactive and whether or not it is\n * currently disabled.\n */\nexport interface Highlightable extends CanDisable {\n  setActiveStyles(): void;\n  setInactiveStyles(): void;\n}\nexport class ActiveDescendantKeyManager extends ListKeyManager<Highlightable> {\n/**\n * This method sets the active item to the item at the specified index.\n * It also adds active styles to the newly active item and removes active\n * styles from the previously active item.\n * @param {?} index\n * @return {?}\n */\nsetActiveItem(index: number): void {\n    Promise.resolve().then(() => {\n      if (this.activeItem) {\n        this.activeItem.setInactiveStyles();\n      }\n      super.setActiveItem(index);\n      if (this.activeItem) {\n        this.activeItem.setActiveStyles();\n      }\n    });\n  }\n\n}\n"]}