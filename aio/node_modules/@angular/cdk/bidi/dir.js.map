{"version":3,"sources":["../../../../src/cdk/bidi/dir.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAGH,OADO,EAEL,SAAQ,EACR,MAAM,EACN,KAAK,EACL,YAAK,EACN,MAAM,eAAe,CAAC;AAEvB,OADO,EAAY,cAAA,EAAe,MAAA,kBAAA,CAAA;AAElC;;;;GAIG;AACH;IAAA;QACA;;WAEG;QACH,SADG,GAAA,KAAA,CAAA;QAEH;;WAEG;QADA,mBAAA,GAAA,KAAA,CAAA;QAGH;;WAEG;QACH,WAHI,GAAA,IAAA,YAAA,EAAA,CAAA;IAmDJ,CAAC;IA3CD,sBAJG,oBAAA;QAAH;;;WAGG;aACH;YACI,MAAM,CAJC,IAAA,CAAK,IAAC,CAAI;QAKnB,CAAC;QACH;;;WAGG;aACH,UAPG,CAAA;YAQC,IAAI,gBAAgB,CAPhB,GAAA,GAAM,IAAA,CAAK,IAAC,CAAI;YAQpB,IAAI,CAPC,IAAC,GAAM,CAAA,CAAE;YAQd,EAAE,CAAC,CAAC,GAPC,KAAO,IAAA,CAAK,IAAC,IAAO,IAAA,CAAK,cAAC,CAAc,CAAC,CAAA;gBAQ5C,IAAI,CAPC,MAAC,CAAM,IAAC,EAAI,CAAE;YAQrB,CAAC;QACH,CAAC;;;OAXA;IAgBH,sBATG,sBAAA;QAKH;;;WAGG;aACH,cAT2B,MAAA,CAAO,IAAA,CAAK,GAAC,CAAG,CAAC,CAAA;;;OAAA;IAU5C;;;OAGG;IACH,gCAXG,GAWH;QACI,IAAI,CAXC,cAAC,GAAgB,IAAA,CAAK;IAY7B,CAAC;IAkBH,UAAC;AAAD,CA5DA,AA4DC;;AA5BM,cAAA,GAAoC;IAY3C,EAXE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAYvB,QAAQ,EAXE,OAAA;gBAYV,SAAS,EAXE,CAAA,EAAE,OAAC,EAAQ,cAAA,EAAgB,WAAA,EAAa,GAAA,EAAI,CAAC;gBAExD,IAAA,EADM,EAAA,OAAE,EAAQ,KAAA,EAAM;gBAYtB,QAAQ,EAXE,KAAA;aAYX,EAXC,EAAG;CAYJ,CAXC;AAYF;;GAEG;AAZF,kBAAA,GAAA,cAAA,OAAA,EAcA,EAdA,CAcA,CAAC;AAZK,kBAAA,GAAyD;IAchE,QAAQ,EAbE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAQ,IAAA,EAAM,CAAA,WAAE,EAAW,EAAG,EAAE;IAcnD,KAAK,EAbE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,KAAE,EAAK,EAAG,EAAE;CAcxC,CAbC;AAgBF;IACA,gBAAgB;IAChB,GAAG,CAAC,UAAU,CAAC;IACf;;;OAGG;IACH,GAAG,CAAC,cAAc,CAAC;IACnB,gBAAgB;IAChB,GAAG,CAAC,cAAc,CAAC;IACnB;;;OAGG;IACH,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC;IACnB;;;OAGG;IACH,GAAG,CAAC,SAAS,CAAC,cAAc,CAAC;IAC7B;;;OAGG;IACH,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC;AACrB,CAAC","file":"dir.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Directive,\n  Output,\n  Input,\n  EventEmitter\n} from '@angular/core';\n\nimport {Direction, Directionality} from './directionality';\n/**\n * Directive to listen for changes of direction of part of the DOM.\n * \n * Would provide itself in case a component looks for the Directionality service\n */\nexport class Dir implements Directionality {\n/**\n * Layout direction of the element.\n */\n_dir: Direction = 'ltr';\n/**\n * Whether the `value` has been set to its initial value.\n */\nprivate _isInitialized: boolean = false;\n/**\n * Event emitted when the direction changes.\n */\nchange = new EventEmitter<void>();\n/**\n * \\@docs-private\n * @return {?}\n */\nget dir(): Direction {\n    return this._dir;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset dir(v: Direction) {\n    let /** @type {?} */ old = this._dir;\n    this._dir = v;\n    if (old !== this._dir && this._isInitialized) {\n      this.change.emit();\n    }\n  }\n/**\n * Current layout direction of the element.\n * @return {?}\n */\nget value(): Direction { return this.dir; }\n/**\n * Initialize once default value has been set.\n * @return {?}\n */\nngAfterContentInit() {\n    this._isInitialized = true;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[dir]',\n  providers: [{provide: Directionality, useExisting: Dir}],\n  host: {'[dir]': 'dir'},\n  exportAs: 'dir',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'change': [{ type: Output, args: ['dirChange', ] },],\n'dir': [{ type: Input, args: ['dir', ] },],\n};\n}\n\nfunction Dir_tsickle_Closure_declarations() {\n/** @type {?} */\nDir.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDir.ctorParameters;\n/** @type {?} */\nDir.propDecorators;\n/**\n * Layout direction of the element.\n * @type {?}\n */\nDir.prototype._dir;\n/**\n * Whether the `value` has been set to its initial value.\n * @type {?}\n */\nDir.prototype._isInitialized;\n/**\n * Event emitted when the direction changes.\n * @type {?}\n */\nDir.prototype.change;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}