{"version":3,"sources":["../../../../src/cdk/platform/platform.ts"],"names":[],"mappings":"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","file":"platform.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from '@angular/core';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nconst /** @type {?} */ hasV8BreakIterator = (typeof(Intl) !== 'undefined' && ( /** @type {?} */((Intl as any))).v8BreakIterator);\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n * \\@docs-private\n */\nexport class Platform {\n  isBrowser: boolean = typeof document === 'object' && !!document;\n/**\n * Layout Engines\n */\nEDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n  TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n\n  // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n  BLINK = this.isBrowser &&\n      (!!(( /** @type {?} */((window as any))).chrome || hasV8BreakIterator) && !!CSS && !this.EDGE && !this.TRIDENT);\n\n  // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n  // ensure that Webkit runs standalone and is not used as another engine's base.\n  WEBKIT = this.isBrowser &&\n      /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n/**\n * Browsers and Platform Types\n */\nIOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !(window as any).MSStream;\n\n  // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n  // them self as Gecko-like browsers and modify the userAgent's according to that.\n  // Since we only cover one explicit Firefox case, we can simply check for Firefox\n  // instead of having an unstable check for Gecko.\n  FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n\n  // Trident on mobile adds the android platform to the userAgent to trick detections.\n  ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n\n  // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n  // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n  // Safari browser should also use Webkit as its layout engine.\n  SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Platform_tsickle_Closure_declarations() {\n/** @type {?} */\nPlatform.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPlatform.ctorParameters;\n/** @type {?} */\nPlatform.prototype.isBrowser;\n/**\n * Layout Engines\n * @type {?}\n */\nPlatform.prototype.EDGE;\n/** @type {?} */\nPlatform.prototype.TRIDENT;\n/** @type {?} */\nPlatform.prototype.BLINK;\n/** @type {?} */\nPlatform.prototype.WEBKIT;\n/**\n * Browsers and Platform Types\n * @type {?}\n */\nPlatform.prototype.IOS;\n/** @type {?} */\nPlatform.prototype.FIREFOX;\n/** @type {?} */\nPlatform.prototype.ANDROID;\n/** @type {?} */\nPlatform.prototype.SAFARI;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}