{"version":3,"sources":["../../../../src/cdk/table/data-source.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAQH;;GAEG;AACH;IAAA;IAqBA,CAAC;IApBD;;;;;;;;OAQG;IACH,4BAJY,GAIZ,UAJY,gBAAA,IAAA,CAAA;IAKZ;;;;;;;;OAQG;IACH,+BALY,GAKZ,UALY,gBAAA,IAAA,CAAA;IAMZ,iBAAC;AAAD,CArBA,AAqBC,IAAA","file":"data-source.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Observable} from 'rxjs/Observable';\n\nexport interface CollectionViewer {\n  viewChange: Observable<{start: number, end: number}>;\n}\n/**\n * @abstract\n */\nexport abstract class DataSource<T> {\n/**\n * Connects a collection viewer (such as a data-table) to this data source. Note that\n * the stream provided will be accessed during change detection and should not directly change\n * values that are bound in template views.\n * @abstract\n * @param {?} collectionViewer The component that exposes a view over the data provided by this\n *     data source.\n * @return {?} Observable that emits a new value when the data changes.\n */\nconnect(collectionViewer: CollectionViewer) {}\n/**\n * Disconnects a collection viewer (such as a data-table) from this data source. Can be used\n * to perform any clean-up or tear-down operations when a view is being destroyed.\n * \n * @abstract\n * @param {?} collectionViewer The component that exposes a view over the data provided by this\n *     data source.\n * @return {?}\n */\ndisconnect(collectionViewer: CollectionViewer) {}\n}\n"]}