{"version":3,"sources":["../../../../src/cdk/rxjs/rx-operators.ts"],"names":[],"mappings":"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","file":"rx-operators.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Observable, ObservableInput} from 'rxjs/Observable';\nimport {PartialObserver} from 'rxjs/Observer';\nimport {Subscription} from 'rxjs/Subscription';\nimport {IScheduler} from 'rxjs/Scheduler';\nimport {_finally as _finallyOperator} from 'rxjs/operator/finally';\nimport {_catch as _catchOperator} from 'rxjs/operator/catch';\nimport {_do as _doOperator} from 'rxjs/operator/do';\nimport {map as mapOperator} from 'rxjs/operator/map';\nimport {filter as filterOperator} from 'rxjs/operator/filter';\nimport {share as shareOperator} from 'rxjs/operator/share';\nimport {first as firstOperator} from 'rxjs/operator/first';\nimport {switchMap as switchMapOperator} from 'rxjs/operator/switchMap';\nimport {startWith as startWithOperator} from 'rxjs/operator/startWith';\nimport {debounceTime as debounceTimeOperator} from 'rxjs/operator/debounceTime';\nimport {auditTime as auditTimeOperator} from 'rxjs/operator/auditTime';\nimport {takeUntil as takeUntilOperator} from 'rxjs/operator/takeUntil';\n\n/**\n * Represents a strongly-typed chain of RxJS operators.\n *\n * We achieve strict type enforcement on the chained operators by creating types that\n * *unambiguously* match specific rxjs operators. These unambiguous types are created by\n * intersecting a \"brand\" to the `typeof` the existing operator. The brand (a class with a private\n * member) effectively forces nominal typing for the operators. This allows typescript to understand\n * that, for example, `filter` is *`filter`* and not, say, a map of T => boolean.\n *\n * The downside to this approach is that operators must be imported in their type-coerced form\n * rather than from the normal rxjs location.\n */\nexport interface StrictRxChain<T> {\n  call<R>(operator: mapOperatorType<T, R>,\n      project: (value: T, index: number) => R, thisArg?: any): StrictRxChain<R>;\n\n  call<R>(operator: switchMapOperatorType<T, R>,\n      project: (value: T, index: number) => ObservableInput<R>): StrictRxChain<R>;\n\n  call<R>(operator: catchOperatorType<T, R>,\n      selector: (err: any, caught: Observable<T>) => ObservableInput<R>): StrictRxChain<T | R>;\n\n  call(operator: filterOperatorType<T>,\n      predicate: (value: T, index: number) => boolean, thisArg?: any): StrictRxChain<T>;\n\n  call(operator: shareOperatorType<T>): StrictRxChain<T>;\n\n  call(operator: finallyOperatorType<T>, action: () => void): StrictRxChain<T>;\n\n  call(operator: doOperatorType<T>, next: (x: T) => void, error?:\n      (e: any) => void, complete?: () => void): StrictRxChain<T>;\n\n  call(operator: doOperatorType<T>, observer: PartialObserver<T>): StrictRxChain<T>;\n\n  call(operator: firstOperatorType<T>, thisArg?: any, defaultValue?: any): StrictRxChain<T>;\n\n  call(operator: firstOperatorType<T>, predicate: (value: T) => boolean): StrictRxChain<T>;\n\n  call(operator: startWithOperatorType<T>, ...args: any[]): StrictRxChain<T>;\n\n  call(operator: debounceTimeOperatorType<T>, dueTime: number,\n      scheduler?: IScheduler): StrictRxChain<T>;\n\n  call(operator: auditTimeOperatorType<T>, duration: number,\n      scheduler?: IScheduler): StrictRxChain<T>;\n\n  call(operator: takeUntilOperatorType<T>, notifier: Observable<any>): StrictRxChain<T>;\n\n  subscribe(fn: (t: T) => void): Subscription;\n\n  result(): Observable<T>;\n}\nexport class FinallyBrand {\nprivate _; }\n\nfunction FinallyBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nFinallyBrand.prototype._;\n}\n\nexport class CatchBrand {\nprivate _; }\n\nfunction CatchBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nCatchBrand.prototype._;\n}\n\nexport class DoBrand {\nprivate _; }\n\nfunction DoBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nDoBrand.prototype._;\n}\n\nexport class MapBrand {\nprivate _; }\n\nfunction MapBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nMapBrand.prototype._;\n}\n\nexport class FilterBrand {\nprivate _; }\n\nfunction FilterBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterBrand.prototype._;\n}\n\nexport class ShareBrand {\nprivate _; }\n\nfunction ShareBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nShareBrand.prototype._;\n}\n\nexport class FirstBrand {\nprivate _; }\n\nfunction FirstBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nFirstBrand.prototype._;\n}\n\nexport class SwitchMapBrand {\nprivate _; }\n\nfunction SwitchMapBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nSwitchMapBrand.prototype._;\n}\n\nexport class StartWithBrand {\nprivate _; }\n\nfunction StartWithBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nStartWithBrand.prototype._;\n}\n\nexport class DebounceTimeBrand {\nprivate _; }\n\nfunction DebounceTimeBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nDebounceTimeBrand.prototype._;\n}\n\nexport class AuditTimeBrand {\nprivate _; }\n\nfunction AuditTimeBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nAuditTimeBrand.prototype._;\n}\n\nexport class TakeUntilBrand {\nprivate _; }\n\nfunction TakeUntilBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nTakeUntilBrand.prototype._;\n}\n\n\n\nexport type finallyOperatorType<T> = typeof _finallyOperator & FinallyBrand;\nexport type catchOperatorType<T, R> = typeof _catchOperator & CatchBrand;\nexport type doOperatorType<T> = typeof _doOperator & DoBrand;\nexport type mapOperatorType<T, R> = typeof mapOperator & MapBrand;\nexport type filterOperatorType<T> = typeof filterOperator & FilterBrand;\nexport type shareOperatorType<T> = typeof shareOperator & ShareBrand;\nexport type firstOperatorType<T> = typeof firstOperator & FirstBrand;\nexport type switchMapOperatorType<T, R> = typeof switchMapOperator & SwitchMapBrand;\nexport type startWithOperatorType<T> = typeof startWithOperator & StartWithBrand;\nexport type debounceTimeOperatorType<T> = typeof debounceTimeOperator & DebounceTimeBrand;\nexport type auditTimeOperatorType<T> = typeof auditTimeOperator & AuditTimeBrand;\nexport type takeUntilOperatorType<T> = typeof takeUntilOperator & TakeUntilBrand;\n\n// We add `Function` to the type intersection to make this nomically different from\n// `finallyOperatorType` while still being structurally the same. Without this, TypeScript tries to\n// reduce `typeof _finallyOperator & FinallyBrand` to `finallyOperatorType<T>` and then fails\n// because `T` isn't known.\nexport const /** @type {?} */ finallyOperator = /** @type {?} */((\n    _finallyOperator as typeof _finallyOperator & FinallyBrand & Function));\nexport const /** @type {?} */ catchOperator = /** @type {?} */(( _catchOperator as typeof _catchOperator & CatchBrand & Function));\nexport const /** @type {?} */ doOperator = /** @type {?} */(( _doOperator as typeof _doOperator & DoBrand & Function));\nexport const /** @type {?} */ map = /** @type {?} */(( mapOperator as typeof mapOperator & MapBrand & Function));\nexport const /** @type {?} */ filter = /** @type {?} */(( filterOperator as typeof filterOperator & FilterBrand & Function));\nexport const /** @type {?} */ share = /** @type {?} */(( shareOperator as typeof shareOperator & ShareBrand & Function));\nexport const /** @type {?} */ first = /** @type {?} */(( firstOperator as typeof firstOperator & FirstBrand & Function));\nexport const /** @type {?} */ switchMap = /** @type {?} */(( switchMapOperator as typeof switchMapOperator & SwitchMapBrand & Function));\nexport const /** @type {?} */ startWith = /** @type {?} */(( startWithOperator as typeof startWithOperator & StartWithBrand & Function));\nexport const /** @type {?} */ debounceTime = /** @type {?} */((\n    debounceTimeOperator as typeof debounceTimeOperator & DebounceTimeBrand & Function));\nexport const /** @type {?} */ auditTime = /** @type {?} */(( auditTimeOperator as typeof auditTimeOperator & AuditTimeBrand & Function));\nexport const /** @type {?} */ takeUntil = /** @type {?} */(( takeUntilOperator as typeof takeUntilOperator & TakeUntilBrand & Function));\n"]}