/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { _finally as _finallyOperator } from 'rxjs/operator/finally';
import { _catch as _catchOperator } from 'rxjs/operator/catch';
import { _do as _doOperator } from 'rxjs/operator/do';
import { map as mapOperator } from 'rxjs/operator/map';
import { filter as filterOperator } from 'rxjs/operator/filter';
import { share as shareOperator } from 'rxjs/operator/share';
import { first as firstOperator } from 'rxjs/operator/first';
import { switchMap as switchMapOperator } from 'rxjs/operator/switchMap';
import { startWith as startWithOperator } from 'rxjs/operator/startWith';
import { debounceTime as debounceTimeOperator } from 'rxjs/operator/debounceTime';
import { auditTime as auditTimeOperator } from 'rxjs/operator/auditTime';
import { takeUntil as takeUntilOperator } from 'rxjs/operator/takeUntil';
var FinallyBrand = (function () {
    function FinallyBrand() {
    }
    return FinallyBrand;
}());
export { FinallyBrand };
function FinallyBrand_tsickle_Closure_declarations() {
    /** @type {?} */
    FinallyBrand.prototype._;
}
var CatchBrand = (function () {
    function CatchBrand() {
    }
    return CatchBrand;
}());
export { CatchBrand };
function CatchBrand_tsickle_Closure_declarations() {
    /** @type {?} */
    CatchBrand.prototype._;
}
var DoBrand = (function () {
    function DoBrand() {
    }
    return DoBrand;
}());
export { DoBrand };
function DoBrand_tsickle_Closure_declarations() {
    /** @type {?} */
    DoBrand.prototype._;
}
var MapBrand = (function () {
    function MapBrand() {
    }
    return MapBrand;
}());
export { MapBrand };
function MapBrand_tsickle_Closure_declarations() {
    /** @type {?} */
    MapBrand.prototype._;
}
var FilterBrand = (function () {
    function FilterBrand() {
    }
    return FilterBrand;
}());
export { FilterBrand };
function FilterBrand_tsickle_Closure_declarations() {
    /** @type {?} */
    FilterBrand.prototype._;
}
var ShareBrand = (function () {
    function ShareBrand() {
    }
    return ShareBrand;
}());
export { ShareBrand };
function ShareBrand_tsickle_Closure_declarations() {
    /** @type {?} */
    ShareBrand.prototype._;
}
var FirstBrand = (function () {
    function FirstBrand() {
    }
    return FirstBrand;
}());
export { FirstBrand };
function FirstBrand_tsickle_Closure_declarations() {
    /** @type {?} */
    FirstBrand.prototype._;
}
var SwitchMapBrand = (function () {
    function SwitchMapBrand() {
    }
    return SwitchMapBrand;
}());
export { SwitchMapBrand };
function SwitchMapBrand_tsickle_Closure_declarations() {
    /** @type {?} */
    SwitchMapBrand.prototype._;
}
var StartWithBrand = (function () {
    function StartWithBrand() {
    }
    return StartWithBrand;
}());
export { StartWithBrand };
function StartWithBrand_tsickle_Closure_declarations() {
    /** @type {?} */
    StartWithBrand.prototype._;
}
var DebounceTimeBrand = (function () {
    function DebounceTimeBrand() {
    }
    return DebounceTimeBrand;
}());
export { DebounceTimeBrand };
function DebounceTimeBrand_tsickle_Closure_declarations() {
    /** @type {?} */
    DebounceTimeBrand.prototype._;
}
var AuditTimeBrand = (function () {
    function AuditTimeBrand() {
    }
    return AuditTimeBrand;
}());
export { AuditTimeBrand };
function AuditTimeBrand_tsickle_Closure_declarations() {
    /** @type {?} */
    AuditTimeBrand.prototype._;
}
var TakeUntilBrand = (function () {
    function TakeUntilBrand() {
    }
    return TakeUntilBrand;
}());
export { TakeUntilBrand };
function TakeUntilBrand_tsickle_Closure_declarations() {
    /** @type {?} */
    TakeUntilBrand.prototype._;
}
// We add `Function` to the type intersection to make this nomically different from
// `finallyOperatorType` while still being structurally the same. Without this, TypeScript tries to
// reduce `typeof _finallyOperator & FinallyBrand` to `finallyOperatorType<T>` and then fails
// because `T` isn't known.
export var /** @type {?} */ finallyOperator = (_finallyOperator);
export var /** @type {?} */ catchOperator = (_catchOperator);
export var /** @type {?} */ doOperator = (_doOperator);
export var /** @type {?} */ map = (mapOperator);
export var /** @type {?} */ filter = (filterOperator);
export var /** @type {?} */ share = (shareOperator);
export var /** @type {?} */ first = (firstOperator);
export var /** @type {?} */ switchMap = (switchMapOperator);
export var /** @type {?} */ startWith = (startWithOperator);
export var /** @type {?} */ debounceTime = (debounceTimeOperator);
export var /** @type {?} */ auditTime = (auditTimeOperator);
export var /** @type {?} */ takeUntil = (takeUntilOperator);
//# sourceMappingURL=rx-operators.js.map